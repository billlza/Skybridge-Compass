warning: 'starscream': found 1 file(s) which are unhandled; explicitly declare them as resources or exclude from the target
    /Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/.build/checkouts/Starscream/Sources/Info.plist
Building for debugging...
[0/23] Write sources
[0/23] Write SkyBridgeCompassWidgets-entitlement.plist
[0/23] Copying RemoteDesktopShaders.metal
[4/23] Write sources
[4/23] Copying AppIcon.png
[4/23] Copying AppIcon.icns
[5/23] Copying PrivacyInfo.xcprivacy
[5/23] Write SkyBridgeCompassApp-entitlement.plist
[9/23] Copying Metal4Shaders.metal
[9/23] Copying app_icon.png
[9/23] Write sources
[14/23] Copying README.md
[15/23] Write swift-version-41C403C3136A4E2D.txt
[17/60] Compiling InternalCollectionsUtilities UnsafeMutableRawBufferPointer+Extras.swift
[18/61] Compiling InternalCollectionsUtilities UInt+first and last set bit.swift
[19/61] Compiling Starscream Engine.swift
[20/61] Compiling Starscream TCPTransport.swift
[21/61] Compiling Starscream Framer.swift
[22/61] Compiling Starscream Data+Extensions.swift
[23/61] Compiling Starscream WSEngine.swift
[24/61] Compiling InternalCollectionsUtilities UnsafeMutableBufferPointer+Extras.swift
[25/61] Compiling InternalCollectionsUtilities UnsafeRawBufferPointer+Extras.swift
[26/61] Compiling Starscream Compression.swift
[27/61] Compiling Starscream WSCompression.swift
[28/61] Compiling InternalCollectionsUtilities _UnsafeBitSet+Index.swift
[29/61] Compiling Starscream FoundationTransport.swift
[30/61] Emitting module InternalCollectionsUtilities
[31/61] Compiling InternalCollectionsUtilities FixedWidthInteger+roundUpToPowerOfTwo.swift
[32/61] Compiling InternalCollectionsUtilities Integer rank.swift
[33/61] Compiling Starscream NativeEngine.swift
[34/61] Compiling Starscream StringHTTPHandler.swift
[35/117] Compiling OrderedCollections OrderedSet+Codable.swift
[36/117] Compiling OrderedCollections OrderedSet+CustomReflectable.swift
[37/117] Compiling OrderedCollections OrderedSet+Descriptions.swift
[38/117] Compiling OrderedCollections OrderedSet+Diffing.swift
[39/117] Compiling OrderedCollections OrderedSet+Equatable.swift
[40/117] Compiling OrderedCollections OrderedSet+ExpressibleByArrayLiteral.swift
[41/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra isStrictSubset.swift
[42/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra isStrictSuperset.swift
[43/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra isSubset.swift
[44/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra isSuperset.swift
[45/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra subtract.swift
[46/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra subtracting.swift
[47/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra symmetricDifference.swift
[48/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra union.swift
[49/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra+Basics.swift
[50/123] Compiling OrderedCollections OrderedSet+RandomAccessCollection.swift
[51/123] Compiling OrderedCollections OrderedSet+ReserveCapacity.swift
[52/123] Compiling OrderedCollections OrderedSet+Sendable.swift
[53/123] Compiling OrderedCollections OrderedDictionary+Elements.swift
[54/123] Compiling OrderedCollections OrderedDictionary+Equatable.swift
[55/123] Compiling OrderedCollections OrderedDictionary+ExpressibleByDictionaryLiteral.swift
[56/123] Compiling OrderedCollections OrderedDictionary+Hashable.swift
[57/123] Compiling OrderedCollections OrderedDictionary+Initializers.swift
[58/123] Compiling OrderedCollections OrderedDictionary+Invariants.swift
[59/123] Compiling OrderedCollections _Hashtable+Header.swift
[60/123] Compiling OrderedCollections OrderedDictionary+Codable.swift
[61/123] Compiling OrderedCollections OrderedDictionary+CustomReflectable.swift
[62/123] Compiling OrderedCollections OrderedDictionary+Deprecations.swift
[63/123] Compiling OrderedCollections OrderedDictionary+Descriptions.swift
[64/123] Compiling OrderedCollections OrderedDictionary+Elements.SubSequence.swift
[65/123] Compiling OrderedCollections OrderedSet+Hashable.swift
[66/123] Compiling OrderedCollections OrderedSet+Initializers.swift
[67/123] Compiling OrderedCollections OrderedSet+Insertions.swift
[68/123] Compiling OrderedCollections OrderedSet+Invariants.swift
[69/123] Compiling OrderedCollections OrderedSet+Partial MutableCollection.swift
[70/123] Compiling OrderedCollections OrderedSet+Partial RangeReplaceableCollection.swift
[71/123] Compiling OrderedCollections OrderedDictionary+Partial MutableCollection.swift
[72/123] Compiling OrderedCollections OrderedDictionary+Partial RangeReplaceableCollection.swift
[73/123] Compiling OrderedCollections OrderedDictionary+Sendable.swift
[74/123] Compiling OrderedCollections OrderedDictionary+Sequence.swift
[75/123] Compiling OrderedCollections OrderedDictionary+Values.swift
[76/123] Compiling OrderedCollections OrderedDictionary.swift
[77/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra formIntersection.swift
[78/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra formSymmetricDifference.swift
[79/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra formUnion.swift
[80/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra intersection.swift
[81/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra isDisjoint.swift
[82/123] Compiling OrderedCollections OrderedSet+Partial SetAlgebra isEqualSet.swift
[83/123] Compiling OrderedCollections _HashTable+Bucket.swift
[84/123] Compiling OrderedCollections _HashTable+BucketIterator.swift
[85/123] Compiling OrderedCollections _HashTable+Constants.swift
[86/123] Compiling OrderedCollections _HashTable+CustomStringConvertible.swift
[87/123] Compiling OrderedCollections _HashTable+Testing.swift
[88/123] Compiling OrderedCollections _HashTable+UnsafeHandle.swift
[89/123] Compiling OrderedCollections _HashTable.swift
[90/123] Compiling OrderedCollections OrderedSet+SubSequence.swift
[91/123] Compiling OrderedCollections OrderedSet+Testing.swift
[92/123] Compiling OrderedCollections OrderedSet+UnorderedView.swift
[93/123] Compiling OrderedCollections OrderedSet+UnstableInternals.swift
[94/123] Compiling OrderedCollections OrderedSet.swift
[95/123] Compiling OrderedCollections _UnsafeBitset.swift
[95/123] Compiling FreeRDPBridge CBFreeRDPClient.m
[97/123] Emitting module OrderedCollections
[100/123] Emitting module Starscream
[118/125] Compiling Starscream Transport.swift
[119/125] Compiling Starscream resource_bundle_accessor.swift
[120/157] Compiling SkyBridgeCore P2PNetworkLayer.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:462:29: error: expected expression in list of expressions
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
    |                      `- error: expected expression in list of expressions
463 |         
464 |         let parameters: NWParameters

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:465:16: error: expected expression in 'switch' statement
463 |         
464 |         let parameters: NWParameters
465 |         switch protocol {
    |                `- error: expected expression in 'switch' statement
466 |         case .udp:
467 |             parameters = NWParameters.udp

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:465:25: error: expected identifier in protocol declaration
463 |         
464 |         let parameters: NWParameters
465 |         switch protocol {
    |                         `- error: expected identifier in protocol declaration
466 |         case .udp:
467 |             parameters = NWParameters.udp

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:23: error: expected expression in list of expressions
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                       `- error: expected expression in list of expressions
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:22: error: consecutive statements on a line must be separated by ';'
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                      `- error: consecutive statements on a line must be separated by ';'
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:31: error: expected identifier in protocol declaration
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                               `- error: expected identifier in protocol declaration
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:15:46: error: 'P2PProtocol' is ambiguous for type lookup in this context
 13 |     @Published public var networkStatistics: P2PNetworkStatistics = P2PNetworkStatistics()
 14 |     @Published public var isNATTraversalEnabled = true
 15 |     @Published public var preferredProtocol: P2PProtocol = .udp
    |                                              `- error: 'P2PProtocol' is ambiguous for type lookup in this context
 16 |     
 17 |     // MARK: - ÂèëÂ∏ÉËÄÖÂ±ûÊÄß
    :
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: note: found this candidate
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:48:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 46 |     
 47 |     // ÈÖçÁΩÆ
 48 |     private let configuration: P2PNetworkConfiguration
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 49 |     
 50 |     // ÁªüËÆ°‰ø°ÊÅØ
    :
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:59:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 57 |     // MARK: - ÂàùÂßãÂåñ
 58 |     
 59 |     public init(configuration: P2PNetworkConfiguration = .defaultConfiguration()) {
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 60 |         self.configuration = configuration
 61 |         self.networkQueue = DispatchQueue(label: "com.skybridge.p2p.network", qos: .userInitiated)
    :
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:461:96: error: 'P2PProtocol' is ambiguous for type lookup in this context
459 |     
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
    |                                                                                                `- error: 'P2PProtocol' is ambiguous for type lookup in this context
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
463 |         
    :
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: note: found this candidate
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:794:30: error: 'STUNServer' is ambiguous for type lookup in this context
792 |     public let tcpPort: UInt16
793 |     /// STUNÊúçÂä°Âô®ÂàóË°®
794 |     public let stunServers: [STUNServer]
    |                              `- error: 'STUNServer' is ambiguous for type lookup in this context
795 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥
796 |     public let connectionTimeout: TimeInterval
    :
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:806:31: error: 'STUNServer' is ambiguous for type lookup in this context
804 |     public init(udpPort: UInt16,
805 |                 tcpPort: UInt16,
806 |                 stunServers: [STUNServer],
    |                               `- error: 'STUNServer' is ambiguous for type lookup in this context
807 |                 connectionTimeout: TimeInterval,
808 |                 heartbeatInterval: TimeInterval,
    :
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:821:50: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16
    :
819 |     
820 |     /// ÈªòËÆ§ÈÖçÁΩÆ
821 |     public static func defaultConfiguration() -> P2PNetworkConfiguration {
    |                                                  `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
822 |         return P2PNetworkConfiguration(
823 |             udpPort: 8888,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: error: invalid redeclaration of 'P2PNetworkConfiguration'
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- error: invalid redeclaration of 'P2PNetworkConfiguration'
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: error: invalid redeclaration of 'P2PProtocol'
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- error: invalid redeclaration of 'P2PProtocol'
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: error: invalid redeclaration of 'STUNServer'
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- error: invalid redeclaration of 'STUNServer'
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:165:13: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
163 |         // ÂºÄÂßãËøûÊé•ÊµÅÁ®ã
164 |         connectionQueue.async {
165 |             self.initiateConnection(to: device)
    |             `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
166 |         }
167 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:165:41: warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
163 |         // ÂºÄÂßãËøûÊé•ÊµÅÁ®ã
164 |         connectionQueue.async {
165 |             self.initiateConnection(to: device)
    |                                         `- warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
166 |         }
167 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:258:15: note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
256 | 
257 | // MARK: - P2PËÆæÂ§á
258 | public struct P2PDevice: Codable, Identifiable, Hashable {
    |               `- note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
259 |     public let id: String
260 |     public let name: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:181:31: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
179 |     public func broadcastData(_ data: Data) {
180 |         networkQueue.async {
181 |             for connection in self.establishedConnections.values {
    |                               `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
182 |                 if connection.status == .connected {
183 |                     self.performSendData(data, to: connection)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:194:33: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
192 |         
193 |         connectionQueue.async {
194 |             if let connection = self.establishedConnections[deviceId] {
    |                                 `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
195 |                 self.closeConnection(connection)
196 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:262:13: error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
260 |         networkMonitor = NWPathMonitor()
261 |         networkMonitor?.pathUpdateHandler = { [weak self] path in
262 |             self?.handleNetworkPathUpdate(path)
    |             `- error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
263 |         }
264 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:39:25: error: 'STUNServer' is ambiguous for type lookup in this context
 37 |     // MARK: - ÂàùÂßãÂåñ
 38 |     
 39 |     public init(server: STUNServer) {
    |                         `- error: 'STUNServer' is ambiguous for type lookup in this context
 40 |         self.server = server
 41 |         self.networkQueue = DispatchQueue(label: "com.skybridge.stun.client", qos: .userInitiated)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:35:57: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 33 |     // MARK: - ÂàùÂßãÂåñ
 34 |     
 35 |     public init(stunClient: STUNClient?, configuration: P2PNetworkConfiguration) {
    |                                                         `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 36 |         self.stunClient = stunClient
 37 |         self.configuration = configuration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: note: found this candidate
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:295:13: error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
293 |         
294 |         udpListener?.newConnectionHandler = { [weak self] connection in
295 |             self?.handleNewUDPConnection(connection)
    |             `- error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
296 |         }
297 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:311:13: error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
309 |         
310 |         tcpListener?.newConnectionHandler = { [weak self] connection in
311 |             self?.handleNewTCPConnection(connection)
    |             `- error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
312 |         }
313 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:380:35: warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
378 |                 
379 |                 if result == 0 {
380 |                     let address = String(cString: hostname)
    |                                   `- warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
381 |                     addresses.append(address)
382 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:427:81: error: cannot infer contextual base in reference to member 'udp'
425 |             case .success(let endpoint):
426 |                 print("‚úÖ NATÁ©øÈÄèÊàêÂäüÔºåÁ´ØÁÇπ: \(endpoint)")
427 |                 self?.establishConnection(to: device, via: endpoint, protocol: .udp)
    |                                                                                 `- error: cannot infer contextual base in reference to member 'udp'
428 |                 
429 |             case .failure(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:441:32: error: value of type 'P2PDevice' has no member 'endpoints'
439 |         
440 |         // Â∞ùËØïÂ∑≤Áü•ÁöÑËÆæÂ§áÁ´ØÁÇπ
441 |         for endpoint in device.endpoints {
    |                                `- error: value of type 'P2PDevice' has no member 'endpoints'
442 |             if preferredProtocol == .udp {
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:443:75: error: cannot infer contextual base in reference to member 'udp'
441 |         for endpoint in device.endpoints {
442 |             if preferredProtocol == .udp {
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)
    |                                                                           `- error: cannot infer contextual base in reference to member 'udp'
444 |             } else {
445 |                 establishConnection(to: device, via: endpoint, protocol: .tcp)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:445:75: error: cannot infer contextual base in reference to member 'tcp'
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)
444 |             } else {
445 |                 establishConnection(to: device, via: endpoint, protocol: .tcp)
    |                                                                           `- error: cannot infer contextual base in reference to member 'tcp'
446 |             }
447 |             

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:453:88: error: cannot infer contextual base in reference to member 'tcp'
451 |                     if self.pendingConnections[device.id] != nil {
452 |                         print("üîÑ UDPËøûÊé•Ë∂ÖÊó∂ÔºåÂ∞ùËØïTCP fallback")
453 |                         self.establishConnection(to: device, via: endpoint, protocol: .tcp)
    |                                                                                        `- error: cannot infer contextual base in reference to member 'tcp'
454 |                     }
455 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:462:28: error: missing argument for parameter #1 in call
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
    |                     `- error: missing argument for parameter #1 in call
463 |         
464 |         let parameters: NWParameters

Swift.DefaultStringInterpolation.appendInterpolation:2:22: note: 'appendInterpolation' declared here
1 | struct DefaultStringInterpolation {
2 | public mutating func appendInterpolation(_ value: any Any.Type)}
  |                      `- note: 'appendInterpolation' declared here
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:477:24: error: extra argument 'id' in call
475 |         
476 |         let connection = P2PConnection(
477 |             id: UUID().uuidString,
    |                        `- error: extra argument 'id' in call
478 |             device: device,
479 |             nwConnection: nwConnection,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:478:27: error: missing argument for parameter 'securityManager' in call
476 |         let connection = P2PConnection(
477 |             id: UUID().uuidString,
478 |             device: device,
    |                           `- error: missing argument for parameter 'securityManager' in call
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:522:20: error: value of type 'P2PConnection' has no member 'state'
520 |         
521 |         // Êõ¥Êñ∞ËøûÊé•Áä∂ÊÄÅ
522 |         connection.state = .connected
    |                    `- error: value of type 'P2PConnection' has no member 'state'
523 |         connection.connectedAt = Date()
524 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:522:29: error: cannot infer contextual base in reference to member 'connected'
520 |         
521 |         // Êõ¥Êñ∞ËøûÊé•Áä∂ÊÄÅ
522 |         connection.state = .connected
    |                             `- error: cannot infer contextual base in reference to member 'connected'
523 |         connection.connectedAt = Date()
524 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:523:20: error: value of type 'P2PConnection' has no member 'connectedAt'
521 |         // Êõ¥Êñ∞ËøûÊé•Áä∂ÊÄÅ
522 |         connection.state = .connected
523 |         connection.connectedAt = Date()
    |                    `- error: value of type 'P2PConnection' has no member 'connectedAt'
524 |         
525 |         // Ê∑ªÂä†Âà∞Â∑≤Âª∫Á´ãËøûÊé•

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:553:27: error: value of type 'P2PConnection' has no member 'protocol'
551 |         if let pendingConnection = pendingConnections[deviceId] {
552 |             // Â¶ÇÊûúÊòØUDPËøûÊé•Â§±Ë¥•ÔºåÂ∞ùËØïTCP fallback
553 |             if connection.protocol == .udp {
    |                           `- error: value of type 'P2PConnection' has no member 'protocol'
554 |                 print("üîÑ UDPËøûÊé•Â§±Ë¥•ÔºåÂ∞ùËØïTCP fallback")
555 |                 attemptDirectConnection(to: pendingConnection.device)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:20: error: value of type 'P2PConnection' has no member 'nwConnection'
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                    `- error: value of type 'P2PConnection' has no member 'nwConnection'
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:105: error: cannot infer type of closure parameter 'data' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                         `- error: cannot infer type of closure parameter 'data' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:111: error: cannot infer type of closure parameter '_' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                               `- error: cannot infer type of closure parameter '_' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:114: error: cannot infer type of closure parameter 'isComplete' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                                  `- error: cannot infer type of closure parameter 'isComplete' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:126: error: cannot infer type of closure parameter 'error' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                                              `- error: cannot infer type of closure parameter 'error' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:618:20: error: value of type 'P2PConnection' has no member 'nwConnection'
616 |     /// ÊâßË°åÊï∞ÊçÆÂèëÈÄÅ
617 |     private func performSendData(_ data: Data, to connection: P2PConnection) {
618 |         connection.nwConnection.send(content: data, completion: .contentProcessed { [weak self] error in
    |                    `- error: value of type 'P2PConnection' has no member 'nwConnection'
619 |             if let error = error {
620 |                 print("‚ùå Êï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:618:66: error: cannot infer contextual base in reference to member 'contentProcessed'
616 |     /// ÊâßË°åÊï∞ÊçÆÂèëÈÄÅ
617 |     private func performSendData(_ data: Data, to connection: P2PConnection) {
618 |         connection.nwConnection.send(content: data, completion: .contentProcessed { [weak self] error in
    |                                                                  `- error: cannot infer contextual base in reference to member 'contentProcessed'
619 |             if let error = error {
620 |                 print("‚ùå Êï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:618:97: error: cannot infer type of closure parameter 'error' without a type annotation
616 |     /// ÊâßË°åÊï∞ÊçÆÂèëÈÄÅ
617 |     private func performSendData(_ data: Data, to connection: P2PConnection) {
618 |         connection.nwConnection.send(content: data, completion: .contentProcessed { [weak self] error in
    |                                                                                                 `- error: cannot infer type of closure parameter 'error' without a type annotation
619 |             if let error = error {
620 |                 print("‚ùå Êï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:21: error: no exact matches in call to initializer 
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                     |- error: no exact matches in call to initializer 
    |                     `- note: candidate has partially matching parameter list (from: any Decoder)
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:273:12: note: candidate has partially matching parameter list (from: P2PDeviceInfo)
271 |     public var deviceType: P2PDeviceType { return type }
272 |     
273 |     public init(from deviceInfo: P2PDeviceInfo) {
    |            `- note: candidate has partially matching parameter list (from: P2PDeviceInfo)
274 |         self.id = deviceInfo.id
275 |         self.name = deviceInfo.name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:638:43: error: extra arguments at positions #1, #4, #5 in call
636 |         
637 |         // ÂàõÂª∫‰∏¥Êó∂ËøûÊé•ÂØπË±°Â§ÑÁêÜÊè°Êâã
638 |         let tempConnection = P2PConnection(
    |                                           `- error: extra arguments at positions #1, #4, #5 in call
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:93: error: missing argument for parameter 'securityManager' in call
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                                             `- error: missing argument for parameter 'securityManager' in call
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:70: error: cannot infer contextual base in reference to member 'unknown'
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                      `- error: cannot infer contextual base in reference to member 'unknown'
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:642:24: error: cannot infer contextual base in reference to member 'udp'
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,
    |                        `- error: cannot infer contextual base in reference to member 'udp'
643 |             endpoint: nwConnection.endpoint
644 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:21: error: no exact matches in call to initializer 
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                     |- error: no exact matches in call to initializer 
    |                     `- note: candidate has partially matching parameter list (from: any Decoder)
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:273:12: note: candidate has partially matching parameter list (from: P2PDeviceInfo)
271 |     public var deviceType: P2PDeviceType { return type }
272 |     
273 |     public init(from deviceInfo: P2PDeviceInfo) {
    |            `- note: candidate has partially matching parameter list (from: P2PDeviceInfo)
274 |         self.id = deviceInfo.id
275 |         self.name = deviceInfo.name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:657:43: error: extra arguments at positions #1, #4, #5 in call
655 |         
656 |         // ÂàõÂª∫‰∏¥Êó∂ËøûÊé•ÂØπË±°Â§ÑÁêÜÊè°Êâã
657 |         let tempConnection = P2PConnection(
    |                                           `- error: extra arguments at positions #1, #4, #5 in call
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:93: error: missing argument for parameter 'securityManager' in call
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                                             `- error: missing argument for parameter 'securityManager' in call
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:70: error: cannot infer contextual base in reference to member 'unknown'
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                      `- error: cannot infer contextual base in reference to member 'unknown'
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:661:24: error: cannot infer contextual base in reference to member 'tcp'
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,
    |                        `- error: cannot infer contextual base in reference to member 'tcp'
662 |             endpoint: nwConnection.endpoint
663 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:690:20: error: value of type 'P2PConnection' has no member 'nwConnection'
688 |         print("üîå ÂÖ≥Èó≠ËøûÊé•: \(connection.device.name)")
689 |         
690 |         connection.nwConnection.cancel()
    |                    `- error: value of type 'P2PConnection' has no member 'nwConnection'
691 |         connection.state = .disconnected
692 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:691:20: error: value of type 'P2PConnection' has no member 'state'
689 |         
690 |         connection.nwConnection.cancel()
691 |         connection.state = .disconnected
    |                    `- error: value of type 'P2PConnection' has no member 'state'
692 |         
693 |         establishedConnections.removeValue(forKey: connection.device.id)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:691:29: error: cannot infer contextual base in reference to member 'disconnected'
689 |         
690 |         connection.nwConnection.cancel()
691 |         connection.state = .disconnected
    |                             `- error: cannot infer contextual base in reference to member 'disconnected'
692 |         
693 |         establishedConnections.removeValue(forKey: connection.device.id)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:735:17: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
733 |         statisticsTimer = Timer.scheduledTimer(withTimeInterval: 1.0, repeats: true) { [weak self] _ in
734 |             Task { @MainActor in
735 |                 self?.updateNetworkStatistics()
    |                 `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
736 |             }
737 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:771:24: error: value of type 'P2PConnection' has no member 'connectedAt'
769 |         let currentTime = Date()
770 |         let totalUptime = connections.compactMap { connection in
771 |             connection.connectedAt?.timeIntervalSince(currentTime)
    |                        `- error: value of type 'P2PConnection' has no member 'connectedAt'
772 |         }.reduce(0, +)
773 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:53:17: warning: no 'async' operations occur within 'await' expression
 51 |         
 52 |         do {
 53 |             try await discoveryService.startDiscovery()
    |                 `- warning: no 'async' operations occur within 'await' expression
 54 |             
 55 |             // ÁõëÂê¨ÂèëÁé∞ÁöÑËÆæÂ§á

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:53:13: warning: no calls to throwing functions occur within 'try' expression
 51 |         
 52 |         do {
 53 |             try await discoveryService.startDiscovery()
    |             `- warning: no calls to throwing functions occur within 'try' expression
 54 |             
 55 |             // ÁõëÂê¨ÂèëÁé∞ÁöÑËÆæÂ§á

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:66:11: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
 64 |             startDiscoveryTimer()
 65 |             
 66 |         } catch {
    |           `- warning: 'catch' block is unreachable because no errors are thrown in 'do' block
 67 |             print("ÂêØÂä®ËÆæÂ§áÂèëÁé∞Â§±Ë¥•: \(error)")
 68 |             networkState = .disconnected

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:96:23: warning: value 'self' was defined but never used; consider replacing with boolean test [#no-usage]
 94 |         // Âª∫Á´ãËøûÊé•
 95 |         networkLayer.connectToDevice(device) { [weak self] connection in
 96 |             guard let self = self else { return }
    |                       `- warning: value 'self' was defined but never used; consider replacing with boolean test [#no-usage]
 97 |             
 98 |             // ËÆ§ËØÅËøûÊé•

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:117:22: error: 'closeConnection' is inaccessible due to 'private' protection level
115 |         
116 |         // ÂÖ≥Èó≠ËøûÊé•
117 |         networkLayer.closeConnection(connection)
    |                      `- error: 'closeConnection' is inaccessible due to 'private' protection level
118 |         
119 |         // ÁßªÈô§Ê¥ªË∑ÉËøûÊé•

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:687:18: note: 'closeConnection' declared here
685 |     
686 |     /// ÂÖ≥Èó≠Âçï‰∏™ËøûÊé•
687 |     private func closeConnection(_ connection: P2PConnection) {
    |                  `- note: 'closeConnection' declared here
688 |         print("üîå ÂÖ≥Èó≠ËøûÊé•: \(connection.device.name)")
689 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:154:29: error: type 'P2PNetworkState' has no member 'scanning'
152 |             networkState = .disconnected
153 |         case .listening:
154 |             networkState = .scanning
    |                             `- error: type 'P2PNetworkState' has no member 'scanning'
155 |         }
156 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:146:9: error: switch must be exhaustive
144 |     
145 |     private func handleNetworkStateChange(_ state: P2PConnectionStatus) {
146 |         switch state {
    |         |- error: switch must be exhaustive
    |         |- note: add missing case: '.authenticating'
    |         |- note: add missing case: '.authenticated'
    |         |- note: add missing case: '.networkUnavailable'
    |         `- note: add missing cases
147 |         case .connected:
148 |             networkState = .connected

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:181:50: error: extra arguments at positions #1, #5 in call
179 |     private func updateNetworkQuality() async {
180 |         guard !activeConnections.isEmpty else {
181 |             networkQuality = P2PConnectionQuality(
    |                                                  `- error: extra arguments at positions #1, #5 in call
182 |                 signalStrength: 0.0,
183 |                 latency: 0.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:184:31: error: missing argument for parameter 'stabilityScore' in call
182 |                 signalStrength: 0.0,
183 |                 latency: 0.0,
184 |                 bandwidth: 0.0,
    |                               `- error: missing argument for parameter 'stabilityScore' in call
185 |                 packetLoss: 0.0,
186 |                 level: .poor

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:184:28: error: cannot convert value of type 'Double' to expected argument type 'UInt64'
182 |                 signalStrength: 0.0,
183 |                 latency: 0.0,
184 |                 bandwidth: 0.0,
    |                            `- error: cannot convert value of type 'Double' to expected argument type 'UInt64'
185 |                 packetLoss: 0.0,
186 |                 level: .poor

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:186:25: error: cannot infer contextual base in reference to member 'poor'
184 |                 bandwidth: 0.0,
185 |                 packetLoss: 0.0,
186 |                 level: .poor
    |                         `- error: cannot infer contextual base in reference to member 'poor'
187 |             )
188 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:193:62: error: value of type 'P2PConnectionQuality' has no member 'signalStrength'
191 |         // ËÆ°ÁÆóÂπ≥ÂùáÁΩëÁªúË¥®Èáè
192 |         let connections = Array(activeConnections.values)
193 |         let avgSignalStrength = connections.map { $0.quality.signalStrength }.reduce(0, +) / Double(connections.count)
    |                                                              `- error: value of type 'P2PConnectionQuality' has no member 'signalStrength'
194 |         let avgLatency = connections.map { $0.quality.latency }.reduce(0, +) / Double(connections.count)
195 |         let avgBandwidth = connections.map { $0.quality.bandwidth }.reduce(0, +) / Double(connections.count)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:195:57: error: cannot convert value of type 'UInt64' to closure result type 'Double'
193 |         let avgSignalStrength = connections.map { $0.quality.signalStrength }.reduce(0, +) / Double(connections.count)
194 |         let avgLatency = connections.map { $0.quality.latency }.reduce(0, +) / Double(connections.count)
195 |         let avgBandwidth = connections.map { $0.quality.bandwidth }.reduce(0, +) / Double(connections.count)
    |                                                         `- error: cannot convert value of type 'UInt64' to closure result type 'Double'
196 |         let avgPacketLoss = connections.map { $0.quality.packetLoss }.reduce(0, +) / Double(connections.count)
197 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:209:46: error: extra arguments at positions #1, #5 in call
207 |         }
208 |         
209 |         networkQuality = P2PConnectionQuality(
    |                                              `- error: extra arguments at positions #1, #5 in call
210 |             signalStrength: avgSignalStrength,
211 |             latency: avgLatency,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:212:36: error: missing argument for parameter 'stabilityScore' in call
210 |             signalStrength: avgSignalStrength,
211 |             latency: avgLatency,
212 |             bandwidth: avgBandwidth,
    |                                    `- error: missing argument for parameter 'stabilityScore' in call
213 |             packetLoss: avgPacketLoss,
214 |             level: level

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:220:20: error: value of type 'P2PConnection' has no member 'statusPublisher'
218 |     private func monitorConnection(_ connection: P2PConnection) {
219 |         // ÁõëÂê¨ËøûÊé•Áä∂ÊÄÅÂèòÂåñ
220 |         connection.statusPublisher
    |                    `- error: value of type 'P2PConnection' has no member 'statusPublisher'
221 |             .receive(on: DispatchQueue.main)
222 |             .sink { [weak self] status in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:232:62: error: value of type 'P2PConnection' has no member 'remoteDevice'
230 |         case .disconnected, .failed:
231 |             // ËøûÊé•Êñ≠ÂºÄÔºå‰ªéÊ¥ªË∑ÉËøûÊé•‰∏≠ÁßªÈô§
232 |             activeConnections.removeValue(forKey: connection.remoteDevice.deviceId)
    |                                                              `- error: value of type 'P2PConnection' has no member 'remoteDevice'
233 |             
234 |             // Â¶ÇÊûúÊ≤°ÊúâÊ¥ªË∑ÉËøûÊé•ÔºåÊõ¥Êñ∞ÁΩëÁªúÁä∂ÊÄÅ

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:265:26: error: 'closeConnection' is inaccessible due to 'private' protection level
263 |         // ÂÖ≥Èó≠ÊâÄÊúâÊ¥ªË∑ÉËøûÊé•
264 |         for connection in activeConnections.values {
265 |             networkLayer.closeConnection(connection)
    |                          `- error: 'closeConnection' is inaccessible due to 'private' protection level
266 |         }
267 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:687:18: note: 'closeConnection' declared here
685 |     
686 |     /// ÂÖ≥Èó≠Âçï‰∏™ËøûÊé•
687 |     private func closeConnection(_ connection: P2PConnection) {
    |                  `- note: 'closeConnection' declared here
688 |         print("üîå ÂÖ≥Èó≠ËøûÊé•: \(connection.device.name)")
689 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:260:9: error: call to main actor-isolated instance method 'stopDiscovery()' in a synchronous nonisolated context [#ActorIsolatedCall]
 71 |     
 72 |     /// ÂÅúÊ≠¢ËÆæÂ§áÂèëÁé∞
 73 |     public func stopDiscovery() {
    |                 `- note: calls to instance method 'stopDiscovery()' from outside of its actor context are implicitly asynchronous
 74 |         discoveryService.stopDiscovery()
 75 |         stopDiscoveryTimer()
    :
258 |     
259 |     deinit {
260 |         stopDiscovery()
    |         `- error: call to main actor-isolated instance method 'stopDiscovery()' in a synchronous nonisolated context [#ActorIsolatedCall]
261 |         qualityMonitorTimer?.invalidate()
262 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:264:27: error: main actor-isolated property 'activeConnections' can not be referenced from a nonisolated context
 14 |     
 15 |     @Published public var discoveredDevices: [P2PDevice] = []
 16 |     @Published public var activeConnections: [String: P2PConnection] = [:]
    |                           `- note: property declared here
 17 |     @Published public var connectionHistory: [P2PDevice] = []
 18 |     @Published public var networkState: P2PNetworkState = .disconnected
    :
262 |         
263 |         // ÂÖ≥Èó≠ÊâÄÊúâÊ¥ªË∑ÉËøûÊé•
264 |         for connection in activeConnections.values {
    |                           `- error: main actor-isolated property 'activeConnections' can not be referenced from a nonisolated context
265 |             networkLayer.closeConnection(connection)
266 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:284:44: error: cannot convert value of type 'UInt64' to expected argument type 'Double'
282 |             historyConnectionsCount: connectionHistory.count,
283 |             averageLatency: networkQuality.latency,
284 |             totalBandwidth: networkQuality.bandwidth
    |                                            `- error: cannot convert value of type 'UInt64' to expected argument type 'Double'
285 |         )
286 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:306:22: error: extra arguments at positions #1, #3, #6 in call
304 |     public func addMockDevices() {
305 |         let mockDevices = [
306 |             P2PDevice(
    |                      `- error: extra arguments at positions #1, #3, #6 in call
307 |                 deviceId: "mock-mac-1",
308 |                 name: "MacBook Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:306:22: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
304 |     public func addMockDevices() {
305 |         let mockDevices = [
306 |             P2PDevice(
    |                      `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
307 |                 deviceId: "mock-mac-1",
308 |                 name: "MacBook Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:309:30: error: cannot infer contextual base in reference to member 'mac'
307 |                 deviceId: "mock-mac-1",
308 |                 name: "MacBook Pro",
309 |                 deviceType: .mac,
    |                              `- error: cannot infer contextual base in reference to member 'mac'
310 |                 ipAddress: "192.168.1.100",
311 |                 port: 8080,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:316:22: error: extra arguments at positions #1, #3, #6 in call
314 |                 lastSeen: Date()
315 |             ),
316 |             P2PDevice(
    |                      `- error: extra arguments at positions #1, #3, #6 in call
317 |                 deviceId: "mock-iphone-1",
318 |                 name: "iPhone 15 Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:316:22: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
314 |                 lastSeen: Date()
315 |             ),
316 |             P2PDevice(
    |                      `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
317 |                 deviceId: "mock-iphone-1",
318 |                 name: "iPhone 15 Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:319:30: error: cannot infer contextual base in reference to member 'iPhone'
317 |                 deviceId: "mock-iphone-1",
318 |                 name: "iPhone 15 Pro",
319 |                 deviceType: .iPhone,
    |                              `- error: cannot infer contextual base in reference to member 'iPhone'
320 |                 ipAddress: "192.168.1.101",
321 |                 port: 8081,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:326:22: error: extra arguments at positions #1, #3, #6 in call
324 |                 lastSeen: Date().addingTimeInterval(-300)
325 |             ),
326 |             P2PDevice(
    |                      `- error: extra arguments at positions #1, #3, #6 in call
327 |                 deviceId: "mock-windows-1",
328 |                 name: "Windows PC",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:326:22: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
324 |                 lastSeen: Date().addingTimeInterval(-300)
325 |             ),
326 |             P2PDevice(
    |                      `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
327 |                 deviceId: "mock-windows-1",
328 |                 name: "Windows PC",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:329:30: error: cannot infer contextual base in reference to member 'windows'
327 |                 deviceId: "mock-windows-1",
328 |                 name: "Windows PC",
329 |                 deviceType: .windows,
    |                              `- error: cannot infer contextual base in reference to member 'windows'
330 |                 ipAddress: "192.168.1.102",
331 |                 port: 8082,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:141:30: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                              `- error: 'STUNServer' is ambiguous for type lookup in this context
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:151:19: error: 'P2PProtocol' is ambiguous for type lookup in this context
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"
    :
149 |     public init(
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
    |                   `- error: 'P2PProtocol' is ambiguous for type lookup in this context
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
153 |         connectionTimeout: TimeInterval = 30.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: note: found this candidate
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:152:23: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
    |                       `- error: 'STUNServer' is ambiguous for type lookup in this context
153 |         connectionTimeout: TimeInterval = 30.0,
154 |         heartbeatInterval: TimeInterval = 10.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: error: invalid redeclaration of 'P2PNetworkConfiguration'
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- error: invalid redeclaration of 'P2PNetworkConfiguration'
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:66:61: error: 'NATType' is ambiguous for type lookup in this context
 64 |     
 65 |     /// Ê£ÄÊµãNATÁ±ªÂûã
 66 |     public func detectNATType(completion: @escaping (Result<NATType, STUNError>) -> Void) {
    |                                                             `- error: 'NATType' is ambiguous for type lookup in this context
 67 |         print("üîç ÂºÄÂßãÊ£ÄÊµãNATÁ±ªÂûã")
 68 |         
    :
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:183:72: error: 'NATType' is ambiguous for type lookup in this context
181 |     
182 |     /// ÊâßË°åNATÁ±ªÂûãÊ£ÄÊµã
183 |     private func performNATTypeDetection(completion: @escaping (Result<NATType, STUNError>) -> Void) {
    |                                                                        `- error: 'NATType' is ambiguous for type lookup in this context
184 |         // NATÁ±ªÂûãÊ£ÄÊµãÈúÄË¶ÅÂ§ö‰∏™STUNËØ∑Ê±Ç
185 |         // ËøôÈáåÂÆûÁé∞ÁÆÄÂåñÁâàÊú¨ÔºåÂÆûÈôÖÂ∫îÁî®‰∏≠ÈúÄË¶ÅÊõ¥Â§çÊùÇÁöÑÊ£ÄÊµãÈÄªËæë
    :
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:360:37: error: 'TraversalDifficulty' is ambiguous for type lookup in this context
358 |     
359 |     /// NATÁ©øÈÄèÈöæÂ∫¶
360 |     public var traversalDifficulty: TraversalDifficulty {
    |                                     `- error: 'TraversalDifficulty' is ambiguous for type lookup in this context
361 |         switch self {
362 |         case .noNAT, .fullCone:
    :
373 | 
374 | /// Á©øÈÄèÈöæÂ∫¶
375 | public enum TraversalDifficulty: String, CaseIterable {
    |             `- note: found this candidate
376 |     case easy = "ÁÆÄÂçï"
377 |     case medium = "‰∏≠Á≠â"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:61:13: note: found this candidate
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- note: found this candidate
 62 |     case easy = "easy"
 63 |     case medium = "medium"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:347:13: error: invalid redeclaration of 'NATType'
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- error: invalid redeclaration of 'NATType'
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:375:13: error: invalid redeclaration of 'TraversalDifficulty'
373 | 
374 | /// Á©øÈÄèÈöæÂ∫¶
375 | public enum TraversalDifficulty: String, CaseIterable {
    |             `- error: invalid redeclaration of 'TraversalDifficulty'
376 |     case easy = "ÁÆÄÂçï"
377 |     case medium = "‰∏≠Á≠â"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:40:14: error: value of type 'STUNClient' has no member 'server'
 38 |     
 39 |     public init(server: STUNServer) {
 40 |         self.server = server
    |              `- error: value of type 'STUNClient' has no member 'server'
 41 |         self.networkQueue = DispatchQueue(label: "com.skybridge.stun.client", qos: .userInitiated)
 42 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:57:13: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
 55 |         
 56 |         networkQueue.async {
 57 |             self.performSTUNBinding { result in
    |             `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
 58 |                 DispatchQueue.main.async {
 59 |                     completion(result)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:59:21: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
 57 |             self.performSTUNBinding { result in
 58 |                 DispatchQueue.main.async {
 59 |                     completion(result)
    |                     |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 60 |                 }
 61 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:59:21: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in an isolated closure
 57 |             self.performSTUNBinding { result in
 58 |                 DispatchQueue.main.async {
 59 |                     completion(result)
    |                     |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in an isolated closure
    |                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 60 |                 }
 61 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:81:13: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
 79 |     public func disconnect() {
 80 |         networkQueue.async {
 81 |             self.udpConnection?.cancel()
    |             `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |             self.udpConnection = nil
 83 |             print("üîå STUNÂÆ¢Êà∑Á´ØÂ∑≤Êñ≠ÂºÄËøûÊé•")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:93:35: error: cannot find 'server' in scope
 91 |         // ÂàõÂª∫UDPËøûÊé•Âà∞STUNÊúçÂä°Âô®
 92 |         let endpoint = NWEndpoint.hostPort(
 93 |             host: NWEndpoint.Host(server.host),
    |                                   `- error: cannot find 'server' in scope
 94 |             port: NWEndpoint.Port(integerLiteral: server.port)
 95 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:94:51: error: cannot find 'server' in scope
 92 |         let endpoint = NWEndpoint.hostPort(
 93 |             host: NWEndpoint.Host(server.host),
 94 |             port: NWEndpoint.Port(integerLiteral: server.port)
    |                                                   `- error: cannot find 'server' in scope
 95 |         )
 96 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:104:17: error: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
102 |             case .ready:
103 |                 print("‚úÖ STUNËøûÊé•Â∑≤Âª∫Á´ã")
104 |                 self.sendBindingRequest(completion: completion)
    |                 `- error: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
105 |                 
106 |             case .failed(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:104:53: error: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
102 |             case .ready:
103 |                 print("‚úÖ STUNËøûÊé•Â∑≤Âª∫Á´ã")
104 |                 self.sendBindingRequest(completion: completion)
    |                                                     |- error: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                                                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
105 |                 
106 |             case .failed(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:138:17: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
136 |             if let error = error {
137 |                 print("‚ùå STUNËØ∑Ê±ÇÂèëÈÄÅÂ§±Ë¥•: \(error)")
138 |                 completion(.failure(.requestFailed))
    |                 |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                 `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
139 |                 return
140 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:143:13: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
141 |             
142 |             // Êé•Êî∂ÂìçÂ∫î
143 |             self.receiveBindingResponse(
    |             `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
144 |                 expectedTransactionId: transactionId,
145 |                 completion: completion

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:158:17: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
156 |             if let error = error {
157 |                 print("‚ùå STUNÂìçÂ∫îÊé•Êî∂Â§±Ë¥•: \(error)")
158 |                 completion(.failure(.responseFailed))
    |                 |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                 `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
159 |                 return
160 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:172:36: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
170 |             // Ëß£ÊûêSTUNÂìçÂ∫î
171 |             do {
172 |                 let endpoint = try self.parseBindingResponse(data, expectedTransactionId: expectedTransactionId)
    |                                    `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
173 |                 print("‚úÖ Ëß£ÊûêÂà∞ÂÖ¨ÁΩëÁ´ØÁÇπ: \(endpoint)")
174 |                 completion(.success(endpoint))

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:192:29: error: cannot infer contextual base in reference to member 'success'
190 |                 // ÁÆÄÂåñÁöÑNATÁ±ªÂûãÂà§Êñ≠
191 |                 // ÂÆûÈôÖÂÆûÁé∞ÈúÄË¶ÅÂ§öÊ¨°ÊµãËØï‰∏çÂêåÁöÑSTUNÊúçÂä°Âô®ÂíåÁ´ØÂè£
192 |                 completion(.success(.fullCone))
    |                             `- error: cannot infer contextual base in reference to member 'success'
193 |                 
194 |             case .failure(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:192:38: error: cannot infer contextual base in reference to member 'fullCone'
190 |                 // ÁÆÄÂåñÁöÑNATÁ±ªÂûãÂà§Êñ≠
191 |                 // ÂÆûÈôÖÂÆûÁé∞ÈúÄË¶ÅÂ§öÊ¨°ÊµãËØï‰∏çÂêåÁöÑSTUNÊúçÂä°Âô®ÂíåÁ´ØÂè£
192 |                 completion(.success(.fullCone))
    |                                      `- error: cannot infer contextual base in reference to member 'fullCone'
193 |                 
194 |             case .failure(let error):

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#DeprecatedDeclaration]: <https://docs.swift.org/compiler/documentation/diagnostics/deprecated-declaration>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[121/157] Compiling SkyBridgeCore P2PNetworkManager.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:462:29: error: expected expression in list of expressions
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
    |                      `- error: expected expression in list of expressions
463 |         
464 |         let parameters: NWParameters

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:465:16: error: expected expression in 'switch' statement
463 |         
464 |         let parameters: NWParameters
465 |         switch protocol {
    |                `- error: expected expression in 'switch' statement
466 |         case .udp:
467 |             parameters = NWParameters.udp

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:465:25: error: expected identifier in protocol declaration
463 |         
464 |         let parameters: NWParameters
465 |         switch protocol {
    |                         `- error: expected identifier in protocol declaration
466 |         case .udp:
467 |             parameters = NWParameters.udp

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:23: error: expected expression in list of expressions
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                       `- error: expected expression in list of expressions
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:22: error: consecutive statements on a line must be separated by ';'
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                      `- error: consecutive statements on a line must be separated by ';'
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:31: error: expected identifier in protocol declaration
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                               `- error: expected identifier in protocol declaration
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:15:46: error: 'P2PProtocol' is ambiguous for type lookup in this context
 13 |     @Published public var networkStatistics: P2PNetworkStatistics = P2PNetworkStatistics()
 14 |     @Published public var isNATTraversalEnabled = true
 15 |     @Published public var preferredProtocol: P2PProtocol = .udp
    |                                              `- error: 'P2PProtocol' is ambiguous for type lookup in this context
 16 |     
 17 |     // MARK: - ÂèëÂ∏ÉËÄÖÂ±ûÊÄß
    :
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: note: found this candidate
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:48:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 46 |     
 47 |     // ÈÖçÁΩÆ
 48 |     private let configuration: P2PNetworkConfiguration
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 49 |     
 50 |     // ÁªüËÆ°‰ø°ÊÅØ
    :
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:59:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 57 |     // MARK: - ÂàùÂßãÂåñ
 58 |     
 59 |     public init(configuration: P2PNetworkConfiguration = .defaultConfiguration()) {
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 60 |         self.configuration = configuration
 61 |         self.networkQueue = DispatchQueue(label: "com.skybridge.p2p.network", qos: .userInitiated)
    :
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:461:96: error: 'P2PProtocol' is ambiguous for type lookup in this context
459 |     
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
    |                                                                                                `- error: 'P2PProtocol' is ambiguous for type lookup in this context
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
463 |         
    :
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: note: found this candidate
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:794:30: error: 'STUNServer' is ambiguous for type lookup in this context
792 |     public let tcpPort: UInt16
793 |     /// STUNÊúçÂä°Âô®ÂàóË°®
794 |     public let stunServers: [STUNServer]
    |                              `- error: 'STUNServer' is ambiguous for type lookup in this context
795 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥
796 |     public let connectionTimeout: TimeInterval
    :
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:806:31: error: 'STUNServer' is ambiguous for type lookup in this context
804 |     public init(udpPort: UInt16,
805 |                 tcpPort: UInt16,
806 |                 stunServers: [STUNServer],
    |                               `- error: 'STUNServer' is ambiguous for type lookup in this context
807 |                 connectionTimeout: TimeInterval,
808 |                 heartbeatInterval: TimeInterval,
    :
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:821:50: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16
    :
819 |     
820 |     /// ÈªòËÆ§ÈÖçÁΩÆ
821 |     public static func defaultConfiguration() -> P2PNetworkConfiguration {
    |                                                  `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
822 |         return P2PNetworkConfiguration(
823 |             udpPort: 8888,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: error: invalid redeclaration of 'P2PNetworkConfiguration'
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- error: invalid redeclaration of 'P2PNetworkConfiguration'
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: error: invalid redeclaration of 'P2PProtocol'
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- error: invalid redeclaration of 'P2PProtocol'
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: error: invalid redeclaration of 'STUNServer'
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- error: invalid redeclaration of 'STUNServer'
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:165:13: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
163 |         // ÂºÄÂßãËøûÊé•ÊµÅÁ®ã
164 |         connectionQueue.async {
165 |             self.initiateConnection(to: device)
    |             `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
166 |         }
167 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:165:41: warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
163 |         // ÂºÄÂßãËøûÊé•ÊµÅÁ®ã
164 |         connectionQueue.async {
165 |             self.initiateConnection(to: device)
    |                                         `- warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
166 |         }
167 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:258:15: note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
256 | 
257 | // MARK: - P2PËÆæÂ§á
258 | public struct P2PDevice: Codable, Identifiable, Hashable {
    |               `- note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
259 |     public let id: String
260 |     public let name: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:181:31: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
179 |     public func broadcastData(_ data: Data) {
180 |         networkQueue.async {
181 |             for connection in self.establishedConnections.values {
    |                               `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
182 |                 if connection.status == .connected {
183 |                     self.performSendData(data, to: connection)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:194:33: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
192 |         
193 |         connectionQueue.async {
194 |             if let connection = self.establishedConnections[deviceId] {
    |                                 `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
195 |                 self.closeConnection(connection)
196 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:262:13: error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
260 |         networkMonitor = NWPathMonitor()
261 |         networkMonitor?.pathUpdateHandler = { [weak self] path in
262 |             self?.handleNetworkPathUpdate(path)
    |             `- error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
263 |         }
264 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:39:25: error: 'STUNServer' is ambiguous for type lookup in this context
 37 |     // MARK: - ÂàùÂßãÂåñ
 38 |     
 39 |     public init(server: STUNServer) {
    |                         `- error: 'STUNServer' is ambiguous for type lookup in this context
 40 |         self.server = server
 41 |         self.networkQueue = DispatchQueue(label: "com.skybridge.stun.client", qos: .userInitiated)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:35:57: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 33 |     // MARK: - ÂàùÂßãÂåñ
 34 |     
 35 |     public init(stunClient: STUNClient?, configuration: P2PNetworkConfiguration) {
    |                                                         `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 36 |         self.stunClient = stunClient
 37 |         self.configuration = configuration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: note: found this candidate
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:295:13: error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
293 |         
294 |         udpListener?.newConnectionHandler = { [weak self] connection in
295 |             self?.handleNewUDPConnection(connection)
    |             `- error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
296 |         }
297 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:311:13: error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
309 |         
310 |         tcpListener?.newConnectionHandler = { [weak self] connection in
311 |             self?.handleNewTCPConnection(connection)
    |             `- error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
312 |         }
313 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:380:35: warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
378 |                 
379 |                 if result == 0 {
380 |                     let address = String(cString: hostname)
    |                                   `- warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
381 |                     addresses.append(address)
382 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:427:81: error: cannot infer contextual base in reference to member 'udp'
425 |             case .success(let endpoint):
426 |                 print("‚úÖ NATÁ©øÈÄèÊàêÂäüÔºåÁ´ØÁÇπ: \(endpoint)")
427 |                 self?.establishConnection(to: device, via: endpoint, protocol: .udp)
    |                                                                                 `- error: cannot infer contextual base in reference to member 'udp'
428 |                 
429 |             case .failure(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:441:32: error: value of type 'P2PDevice' has no member 'endpoints'
439 |         
440 |         // Â∞ùËØïÂ∑≤Áü•ÁöÑËÆæÂ§áÁ´ØÁÇπ
441 |         for endpoint in device.endpoints {
    |                                `- error: value of type 'P2PDevice' has no member 'endpoints'
442 |             if preferredProtocol == .udp {
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:443:75: error: cannot infer contextual base in reference to member 'udp'
441 |         for endpoint in device.endpoints {
442 |             if preferredProtocol == .udp {
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)
    |                                                                           `- error: cannot infer contextual base in reference to member 'udp'
444 |             } else {
445 |                 establishConnection(to: device, via: endpoint, protocol: .tcp)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:445:75: error: cannot infer contextual base in reference to member 'tcp'
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)
444 |             } else {
445 |                 establishConnection(to: device, via: endpoint, protocol: .tcp)
    |                                                                           `- error: cannot infer contextual base in reference to member 'tcp'
446 |             }
447 |             

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:453:88: error: cannot infer contextual base in reference to member 'tcp'
451 |                     if self.pendingConnections[device.id] != nil {
452 |                         print("üîÑ UDPËøûÊé•Ë∂ÖÊó∂ÔºåÂ∞ùËØïTCP fallback")
453 |                         self.establishConnection(to: device, via: endpoint, protocol: .tcp)
    |                                                                                        `- error: cannot infer contextual base in reference to member 'tcp'
454 |                     }
455 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:462:28: error: missing argument for parameter #1 in call
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
    |                     `- error: missing argument for parameter #1 in call
463 |         
464 |         let parameters: NWParameters

Swift.DefaultStringInterpolation.appendInterpolation:2:22: note: 'appendInterpolation' declared here
1 | struct DefaultStringInterpolation {
2 | public mutating func appendInterpolation(_ value: any Any.Type)}
  |                      `- note: 'appendInterpolation' declared here
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:477:24: error: extra argument 'id' in call
475 |         
476 |         let connection = P2PConnection(
477 |             id: UUID().uuidString,
    |                        `- error: extra argument 'id' in call
478 |             device: device,
479 |             nwConnection: nwConnection,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:478:27: error: missing argument for parameter 'securityManager' in call
476 |         let connection = P2PConnection(
477 |             id: UUID().uuidString,
478 |             device: device,
    |                           `- error: missing argument for parameter 'securityManager' in call
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:522:20: error: value of type 'P2PConnection' has no member 'state'
520 |         
521 |         // Êõ¥Êñ∞ËøûÊé•Áä∂ÊÄÅ
522 |         connection.state = .connected
    |                    `- error: value of type 'P2PConnection' has no member 'state'
523 |         connection.connectedAt = Date()
524 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:522:29: error: cannot infer contextual base in reference to member 'connected'
520 |         
521 |         // Êõ¥Êñ∞ËøûÊé•Áä∂ÊÄÅ
522 |         connection.state = .connected
    |                             `- error: cannot infer contextual base in reference to member 'connected'
523 |         connection.connectedAt = Date()
524 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:523:20: error: value of type 'P2PConnection' has no member 'connectedAt'
521 |         // Êõ¥Êñ∞ËøûÊé•Áä∂ÊÄÅ
522 |         connection.state = .connected
523 |         connection.connectedAt = Date()
    |                    `- error: value of type 'P2PConnection' has no member 'connectedAt'
524 |         
525 |         // Ê∑ªÂä†Âà∞Â∑≤Âª∫Á´ãËøûÊé•

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:553:27: error: value of type 'P2PConnection' has no member 'protocol'
551 |         if let pendingConnection = pendingConnections[deviceId] {
552 |             // Â¶ÇÊûúÊòØUDPËøûÊé•Â§±Ë¥•ÔºåÂ∞ùËØïTCP fallback
553 |             if connection.protocol == .udp {
    |                           `- error: value of type 'P2PConnection' has no member 'protocol'
554 |                 print("üîÑ UDPËøûÊé•Â§±Ë¥•ÔºåÂ∞ùËØïTCP fallback")
555 |                 attemptDirectConnection(to: pendingConnection.device)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:20: error: value of type 'P2PConnection' has no member 'nwConnection'
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                    `- error: value of type 'P2PConnection' has no member 'nwConnection'
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:105: error: cannot infer type of closure parameter 'data' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                         `- error: cannot infer type of closure parameter 'data' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:111: error: cannot infer type of closure parameter '_' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                               `- error: cannot infer type of closure parameter '_' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:114: error: cannot infer type of closure parameter 'isComplete' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                                  `- error: cannot infer type of closure parameter 'isComplete' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:126: error: cannot infer type of closure parameter 'error' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                                              `- error: cannot infer type of closure parameter 'error' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:618:20: error: value of type 'P2PConnection' has no member 'nwConnection'
616 |     /// ÊâßË°åÊï∞ÊçÆÂèëÈÄÅ
617 |     private func performSendData(_ data: Data, to connection: P2PConnection) {
618 |         connection.nwConnection.send(content: data, completion: .contentProcessed { [weak self] error in
    |                    `- error: value of type 'P2PConnection' has no member 'nwConnection'
619 |             if let error = error {
620 |                 print("‚ùå Êï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:618:66: error: cannot infer contextual base in reference to member 'contentProcessed'
616 |     /// ÊâßË°åÊï∞ÊçÆÂèëÈÄÅ
617 |     private func performSendData(_ data: Data, to connection: P2PConnection) {
618 |         connection.nwConnection.send(content: data, completion: .contentProcessed { [weak self] error in
    |                                                                  `- error: cannot infer contextual base in reference to member 'contentProcessed'
619 |             if let error = error {
620 |                 print("‚ùå Êï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:618:97: error: cannot infer type of closure parameter 'error' without a type annotation
616 |     /// ÊâßË°åÊï∞ÊçÆÂèëÈÄÅ
617 |     private func performSendData(_ data: Data, to connection: P2PConnection) {
618 |         connection.nwConnection.send(content: data, completion: .contentProcessed { [weak self] error in
    |                                                                                                 `- error: cannot infer type of closure parameter 'error' without a type annotation
619 |             if let error = error {
620 |                 print("‚ùå Êï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:21: error: no exact matches in call to initializer 
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                     |- error: no exact matches in call to initializer 
    |                     `- note: candidate has partially matching parameter list (from: any Decoder)
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:273:12: note: candidate has partially matching parameter list (from: P2PDeviceInfo)
271 |     public var deviceType: P2PDeviceType { return type }
272 |     
273 |     public init(from deviceInfo: P2PDeviceInfo) {
    |            `- note: candidate has partially matching parameter list (from: P2PDeviceInfo)
274 |         self.id = deviceInfo.id
275 |         self.name = deviceInfo.name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:638:43: error: extra arguments at positions #1, #4, #5 in call
636 |         
637 |         // ÂàõÂª∫‰∏¥Êó∂ËøûÊé•ÂØπË±°Â§ÑÁêÜÊè°Êâã
638 |         let tempConnection = P2PConnection(
    |                                           `- error: extra arguments at positions #1, #4, #5 in call
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:93: error: missing argument for parameter 'securityManager' in call
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                                             `- error: missing argument for parameter 'securityManager' in call
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:70: error: cannot infer contextual base in reference to member 'unknown'
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                      `- error: cannot infer contextual base in reference to member 'unknown'
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:642:24: error: cannot infer contextual base in reference to member 'udp'
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,
    |                        `- error: cannot infer contextual base in reference to member 'udp'
643 |             endpoint: nwConnection.endpoint
644 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:21: error: no exact matches in call to initializer 
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                     |- error: no exact matches in call to initializer 
    |                     `- note: candidate has partially matching parameter list (from: any Decoder)
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:273:12: note: candidate has partially matching parameter list (from: P2PDeviceInfo)
271 |     public var deviceType: P2PDeviceType { return type }
272 |     
273 |     public init(from deviceInfo: P2PDeviceInfo) {
    |            `- note: candidate has partially matching parameter list (from: P2PDeviceInfo)
274 |         self.id = deviceInfo.id
275 |         self.name = deviceInfo.name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:657:43: error: extra arguments at positions #1, #4, #5 in call
655 |         
656 |         // ÂàõÂª∫‰∏¥Êó∂ËøûÊé•ÂØπË±°Â§ÑÁêÜÊè°Êâã
657 |         let tempConnection = P2PConnection(
    |                                           `- error: extra arguments at positions #1, #4, #5 in call
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:93: error: missing argument for parameter 'securityManager' in call
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                                             `- error: missing argument for parameter 'securityManager' in call
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:70: error: cannot infer contextual base in reference to member 'unknown'
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                      `- error: cannot infer contextual base in reference to member 'unknown'
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:661:24: error: cannot infer contextual base in reference to member 'tcp'
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,
    |                        `- error: cannot infer contextual base in reference to member 'tcp'
662 |             endpoint: nwConnection.endpoint
663 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:690:20: error: value of type 'P2PConnection' has no member 'nwConnection'
688 |         print("üîå ÂÖ≥Èó≠ËøûÊé•: \(connection.device.name)")
689 |         
690 |         connection.nwConnection.cancel()
    |                    `- error: value of type 'P2PConnection' has no member 'nwConnection'
691 |         connection.state = .disconnected
692 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:691:20: error: value of type 'P2PConnection' has no member 'state'
689 |         
690 |         connection.nwConnection.cancel()
691 |         connection.state = .disconnected
    |                    `- error: value of type 'P2PConnection' has no member 'state'
692 |         
693 |         establishedConnections.removeValue(forKey: connection.device.id)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:691:29: error: cannot infer contextual base in reference to member 'disconnected'
689 |         
690 |         connection.nwConnection.cancel()
691 |         connection.state = .disconnected
    |                             `- error: cannot infer contextual base in reference to member 'disconnected'
692 |         
693 |         establishedConnections.removeValue(forKey: connection.device.id)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:735:17: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
733 |         statisticsTimer = Timer.scheduledTimer(withTimeInterval: 1.0, repeats: true) { [weak self] _ in
734 |             Task { @MainActor in
735 |                 self?.updateNetworkStatistics()
    |                 `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
736 |             }
737 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:771:24: error: value of type 'P2PConnection' has no member 'connectedAt'
769 |         let currentTime = Date()
770 |         let totalUptime = connections.compactMap { connection in
771 |             connection.connectedAt?.timeIntervalSince(currentTime)
    |                        `- error: value of type 'P2PConnection' has no member 'connectedAt'
772 |         }.reduce(0, +)
773 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:53:17: warning: no 'async' operations occur within 'await' expression
 51 |         
 52 |         do {
 53 |             try await discoveryService.startDiscovery()
    |                 `- warning: no 'async' operations occur within 'await' expression
 54 |             
 55 |             // ÁõëÂê¨ÂèëÁé∞ÁöÑËÆæÂ§á

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:53:13: warning: no calls to throwing functions occur within 'try' expression
 51 |         
 52 |         do {
 53 |             try await discoveryService.startDiscovery()
    |             `- warning: no calls to throwing functions occur within 'try' expression
 54 |             
 55 |             // ÁõëÂê¨ÂèëÁé∞ÁöÑËÆæÂ§á

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:66:11: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
 64 |             startDiscoveryTimer()
 65 |             
 66 |         } catch {
    |           `- warning: 'catch' block is unreachable because no errors are thrown in 'do' block
 67 |             print("ÂêØÂä®ËÆæÂ§áÂèëÁé∞Â§±Ë¥•: \(error)")
 68 |             networkState = .disconnected

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:96:23: warning: value 'self' was defined but never used; consider replacing with boolean test [#no-usage]
 94 |         // Âª∫Á´ãËøûÊé•
 95 |         networkLayer.connectToDevice(device) { [weak self] connection in
 96 |             guard let self = self else { return }
    |                       `- warning: value 'self' was defined but never used; consider replacing with boolean test [#no-usage]
 97 |             
 98 |             // ËÆ§ËØÅËøûÊé•

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:117:22: error: 'closeConnection' is inaccessible due to 'private' protection level
115 |         
116 |         // ÂÖ≥Èó≠ËøûÊé•
117 |         networkLayer.closeConnection(connection)
    |                      `- error: 'closeConnection' is inaccessible due to 'private' protection level
118 |         
119 |         // ÁßªÈô§Ê¥ªË∑ÉËøûÊé•

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:687:18: note: 'closeConnection' declared here
685 |     
686 |     /// ÂÖ≥Èó≠Âçï‰∏™ËøûÊé•
687 |     private func closeConnection(_ connection: P2PConnection) {
    |                  `- note: 'closeConnection' declared here
688 |         print("üîå ÂÖ≥Èó≠ËøûÊé•: \(connection.device.name)")
689 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:154:29: error: type 'P2PNetworkState' has no member 'scanning'
152 |             networkState = .disconnected
153 |         case .listening:
154 |             networkState = .scanning
    |                             `- error: type 'P2PNetworkState' has no member 'scanning'
155 |         }
156 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:146:9: error: switch must be exhaustive
144 |     
145 |     private func handleNetworkStateChange(_ state: P2PConnectionStatus) {
146 |         switch state {
    |         |- error: switch must be exhaustive
    |         |- note: add missing case: '.authenticating'
    |         |- note: add missing case: '.authenticated'
    |         |- note: add missing case: '.networkUnavailable'
    |         `- note: add missing cases
147 |         case .connected:
148 |             networkState = .connected

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:181:50: error: extra arguments at positions #1, #5 in call
179 |     private func updateNetworkQuality() async {
180 |         guard !activeConnections.isEmpty else {
181 |             networkQuality = P2PConnectionQuality(
    |                                                  `- error: extra arguments at positions #1, #5 in call
182 |                 signalStrength: 0.0,
183 |                 latency: 0.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:184:31: error: missing argument for parameter 'stabilityScore' in call
182 |                 signalStrength: 0.0,
183 |                 latency: 0.0,
184 |                 bandwidth: 0.0,
    |                               `- error: missing argument for parameter 'stabilityScore' in call
185 |                 packetLoss: 0.0,
186 |                 level: .poor

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:184:28: error: cannot convert value of type 'Double' to expected argument type 'UInt64'
182 |                 signalStrength: 0.0,
183 |                 latency: 0.0,
184 |                 bandwidth: 0.0,
    |                            `- error: cannot convert value of type 'Double' to expected argument type 'UInt64'
185 |                 packetLoss: 0.0,
186 |                 level: .poor

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:186:25: error: cannot infer contextual base in reference to member 'poor'
184 |                 bandwidth: 0.0,
185 |                 packetLoss: 0.0,
186 |                 level: .poor
    |                         `- error: cannot infer contextual base in reference to member 'poor'
187 |             )
188 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:193:62: error: value of type 'P2PConnectionQuality' has no member 'signalStrength'
191 |         // ËÆ°ÁÆóÂπ≥ÂùáÁΩëÁªúË¥®Èáè
192 |         let connections = Array(activeConnections.values)
193 |         let avgSignalStrength = connections.map { $0.quality.signalStrength }.reduce(0, +) / Double(connections.count)
    |                                                              `- error: value of type 'P2PConnectionQuality' has no member 'signalStrength'
194 |         let avgLatency = connections.map { $0.quality.latency }.reduce(0, +) / Double(connections.count)
195 |         let avgBandwidth = connections.map { $0.quality.bandwidth }.reduce(0, +) / Double(connections.count)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:195:57: error: cannot convert value of type 'UInt64' to closure result type 'Double'
193 |         let avgSignalStrength = connections.map { $0.quality.signalStrength }.reduce(0, +) / Double(connections.count)
194 |         let avgLatency = connections.map { $0.quality.latency }.reduce(0, +) / Double(connections.count)
195 |         let avgBandwidth = connections.map { $0.quality.bandwidth }.reduce(0, +) / Double(connections.count)
    |                                                         `- error: cannot convert value of type 'UInt64' to closure result type 'Double'
196 |         let avgPacketLoss = connections.map { $0.quality.packetLoss }.reduce(0, +) / Double(connections.count)
197 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:209:46: error: extra arguments at positions #1, #5 in call
207 |         }
208 |         
209 |         networkQuality = P2PConnectionQuality(
    |                                              `- error: extra arguments at positions #1, #5 in call
210 |             signalStrength: avgSignalStrength,
211 |             latency: avgLatency,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:212:36: error: missing argument for parameter 'stabilityScore' in call
210 |             signalStrength: avgSignalStrength,
211 |             latency: avgLatency,
212 |             bandwidth: avgBandwidth,
    |                                    `- error: missing argument for parameter 'stabilityScore' in call
213 |             packetLoss: avgPacketLoss,
214 |             level: level

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:220:20: error: value of type 'P2PConnection' has no member 'statusPublisher'
218 |     private func monitorConnection(_ connection: P2PConnection) {
219 |         // ÁõëÂê¨ËøûÊé•Áä∂ÊÄÅÂèòÂåñ
220 |         connection.statusPublisher
    |                    `- error: value of type 'P2PConnection' has no member 'statusPublisher'
221 |             .receive(on: DispatchQueue.main)
222 |             .sink { [weak self] status in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:232:62: error: value of type 'P2PConnection' has no member 'remoteDevice'
230 |         case .disconnected, .failed:
231 |             // ËøûÊé•Êñ≠ÂºÄÔºå‰ªéÊ¥ªË∑ÉËøûÊé•‰∏≠ÁßªÈô§
232 |             activeConnections.removeValue(forKey: connection.remoteDevice.deviceId)
    |                                                              `- error: value of type 'P2PConnection' has no member 'remoteDevice'
233 |             
234 |             // Â¶ÇÊûúÊ≤°ÊúâÊ¥ªË∑ÉËøûÊé•ÔºåÊõ¥Êñ∞ÁΩëÁªúÁä∂ÊÄÅ

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:265:26: error: 'closeConnection' is inaccessible due to 'private' protection level
263 |         // ÂÖ≥Èó≠ÊâÄÊúâÊ¥ªË∑ÉËøûÊé•
264 |         for connection in activeConnections.values {
265 |             networkLayer.closeConnection(connection)
    |                          `- error: 'closeConnection' is inaccessible due to 'private' protection level
266 |         }
267 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:687:18: note: 'closeConnection' declared here
685 |     
686 |     /// ÂÖ≥Èó≠Âçï‰∏™ËøûÊé•
687 |     private func closeConnection(_ connection: P2PConnection) {
    |                  `- note: 'closeConnection' declared here
688 |         print("üîå ÂÖ≥Èó≠ËøûÊé•: \(connection.device.name)")
689 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:260:9: error: call to main actor-isolated instance method 'stopDiscovery()' in a synchronous nonisolated context [#ActorIsolatedCall]
 71 |     
 72 |     /// ÂÅúÊ≠¢ËÆæÂ§áÂèëÁé∞
 73 |     public func stopDiscovery() {
    |                 `- note: calls to instance method 'stopDiscovery()' from outside of its actor context are implicitly asynchronous
 74 |         discoveryService.stopDiscovery()
 75 |         stopDiscoveryTimer()
    :
258 |     
259 |     deinit {
260 |         stopDiscovery()
    |         `- error: call to main actor-isolated instance method 'stopDiscovery()' in a synchronous nonisolated context [#ActorIsolatedCall]
261 |         qualityMonitorTimer?.invalidate()
262 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:264:27: error: main actor-isolated property 'activeConnections' can not be referenced from a nonisolated context
 14 |     
 15 |     @Published public var discoveredDevices: [P2PDevice] = []
 16 |     @Published public var activeConnections: [String: P2PConnection] = [:]
    |                           `- note: property declared here
 17 |     @Published public var connectionHistory: [P2PDevice] = []
 18 |     @Published public var networkState: P2PNetworkState = .disconnected
    :
262 |         
263 |         // ÂÖ≥Èó≠ÊâÄÊúâÊ¥ªË∑ÉËøûÊé•
264 |         for connection in activeConnections.values {
    |                           `- error: main actor-isolated property 'activeConnections' can not be referenced from a nonisolated context
265 |             networkLayer.closeConnection(connection)
266 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:284:44: error: cannot convert value of type 'UInt64' to expected argument type 'Double'
282 |             historyConnectionsCount: connectionHistory.count,
283 |             averageLatency: networkQuality.latency,
284 |             totalBandwidth: networkQuality.bandwidth
    |                                            `- error: cannot convert value of type 'UInt64' to expected argument type 'Double'
285 |         )
286 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:306:22: error: extra arguments at positions #1, #3, #6 in call
304 |     public func addMockDevices() {
305 |         let mockDevices = [
306 |             P2PDevice(
    |                      `- error: extra arguments at positions #1, #3, #6 in call
307 |                 deviceId: "mock-mac-1",
308 |                 name: "MacBook Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:306:22: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
304 |     public func addMockDevices() {
305 |         let mockDevices = [
306 |             P2PDevice(
    |                      `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
307 |                 deviceId: "mock-mac-1",
308 |                 name: "MacBook Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:309:30: error: cannot infer contextual base in reference to member 'mac'
307 |                 deviceId: "mock-mac-1",
308 |                 name: "MacBook Pro",
309 |                 deviceType: .mac,
    |                              `- error: cannot infer contextual base in reference to member 'mac'
310 |                 ipAddress: "192.168.1.100",
311 |                 port: 8080,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:316:22: error: extra arguments at positions #1, #3, #6 in call
314 |                 lastSeen: Date()
315 |             ),
316 |             P2PDevice(
    |                      `- error: extra arguments at positions #1, #3, #6 in call
317 |                 deviceId: "mock-iphone-1",
318 |                 name: "iPhone 15 Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:316:22: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
314 |                 lastSeen: Date()
315 |             ),
316 |             P2PDevice(
    |                      `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
317 |                 deviceId: "mock-iphone-1",
318 |                 name: "iPhone 15 Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:319:30: error: cannot infer contextual base in reference to member 'iPhone'
317 |                 deviceId: "mock-iphone-1",
318 |                 name: "iPhone 15 Pro",
319 |                 deviceType: .iPhone,
    |                              `- error: cannot infer contextual base in reference to member 'iPhone'
320 |                 ipAddress: "192.168.1.101",
321 |                 port: 8081,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:326:22: error: extra arguments at positions #1, #3, #6 in call
324 |                 lastSeen: Date().addingTimeInterval(-300)
325 |             ),
326 |             P2PDevice(
    |                      `- error: extra arguments at positions #1, #3, #6 in call
327 |                 deviceId: "mock-windows-1",
328 |                 name: "Windows PC",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:326:22: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
324 |                 lastSeen: Date().addingTimeInterval(-300)
325 |             ),
326 |             P2PDevice(
    |                      `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
327 |                 deviceId: "mock-windows-1",
328 |                 name: "Windows PC",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:329:30: error: cannot infer contextual base in reference to member 'windows'
327 |                 deviceId: "mock-windows-1",
328 |                 name: "Windows PC",
329 |                 deviceType: .windows,
    |                              `- error: cannot infer contextual base in reference to member 'windows'
330 |                 ipAddress: "192.168.1.102",
331 |                 port: 8082,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:141:30: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                              `- error: 'STUNServer' is ambiguous for type lookup in this context
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:151:19: error: 'P2PProtocol' is ambiguous for type lookup in this context
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"
    :
149 |     public init(
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
    |                   `- error: 'P2PProtocol' is ambiguous for type lookup in this context
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
153 |         connectionTimeout: TimeInterval = 30.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: note: found this candidate
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:152:23: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
    |                       `- error: 'STUNServer' is ambiguous for type lookup in this context
153 |         connectionTimeout: TimeInterval = 30.0,
154 |         heartbeatInterval: TimeInterval = 10.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: error: invalid redeclaration of 'P2PNetworkConfiguration'
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- error: invalid redeclaration of 'P2PNetworkConfiguration'
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:66:61: error: 'NATType' is ambiguous for type lookup in this context
 64 |     
 65 |     /// Ê£ÄÊµãNATÁ±ªÂûã
 66 |     public func detectNATType(completion: @escaping (Result<NATType, STUNError>) -> Void) {
    |                                                             `- error: 'NATType' is ambiguous for type lookup in this context
 67 |         print("üîç ÂºÄÂßãÊ£ÄÊµãNATÁ±ªÂûã")
 68 |         
    :
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:183:72: error: 'NATType' is ambiguous for type lookup in this context
181 |     
182 |     /// ÊâßË°åNATÁ±ªÂûãÊ£ÄÊµã
183 |     private func performNATTypeDetection(completion: @escaping (Result<NATType, STUNError>) -> Void) {
    |                                                                        `- error: 'NATType' is ambiguous for type lookup in this context
184 |         // NATÁ±ªÂûãÊ£ÄÊµãÈúÄË¶ÅÂ§ö‰∏™STUNËØ∑Ê±Ç
185 |         // ËøôÈáåÂÆûÁé∞ÁÆÄÂåñÁâàÊú¨ÔºåÂÆûÈôÖÂ∫îÁî®‰∏≠ÈúÄË¶ÅÊõ¥Â§çÊùÇÁöÑÊ£ÄÊµãÈÄªËæë
    :
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:360:37: error: 'TraversalDifficulty' is ambiguous for type lookup in this context
358 |     
359 |     /// NATÁ©øÈÄèÈöæÂ∫¶
360 |     public var traversalDifficulty: TraversalDifficulty {
    |                                     `- error: 'TraversalDifficulty' is ambiguous for type lookup in this context
361 |         switch self {
362 |         case .noNAT, .fullCone:
    :
373 | 
374 | /// Á©øÈÄèÈöæÂ∫¶
375 | public enum TraversalDifficulty: String, CaseIterable {
    |             `- note: found this candidate
376 |     case easy = "ÁÆÄÂçï"
377 |     case medium = "‰∏≠Á≠â"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:61:13: note: found this candidate
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- note: found this candidate
 62 |     case easy = "easy"
 63 |     case medium = "medium"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:347:13: error: invalid redeclaration of 'NATType'
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- error: invalid redeclaration of 'NATType'
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:375:13: error: invalid redeclaration of 'TraversalDifficulty'
373 | 
374 | /// Á©øÈÄèÈöæÂ∫¶
375 | public enum TraversalDifficulty: String, CaseIterable {
    |             `- error: invalid redeclaration of 'TraversalDifficulty'
376 |     case easy = "ÁÆÄÂçï"
377 |     case medium = "‰∏≠Á≠â"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:40:14: error: value of type 'STUNClient' has no member 'server'
 38 |     
 39 |     public init(server: STUNServer) {
 40 |         self.server = server
    |              `- error: value of type 'STUNClient' has no member 'server'
 41 |         self.networkQueue = DispatchQueue(label: "com.skybridge.stun.client", qos: .userInitiated)
 42 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:57:13: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
 55 |         
 56 |         networkQueue.async {
 57 |             self.performSTUNBinding { result in
    |             `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
 58 |                 DispatchQueue.main.async {
 59 |                     completion(result)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:59:21: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
 57 |             self.performSTUNBinding { result in
 58 |                 DispatchQueue.main.async {
 59 |                     completion(result)
    |                     |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 60 |                 }
 61 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:59:21: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in an isolated closure
 57 |             self.performSTUNBinding { result in
 58 |                 DispatchQueue.main.async {
 59 |                     completion(result)
    |                     |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in an isolated closure
    |                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 60 |                 }
 61 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:81:13: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
 79 |     public func disconnect() {
 80 |         networkQueue.async {
 81 |             self.udpConnection?.cancel()
    |             `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |             self.udpConnection = nil
 83 |             print("üîå STUNÂÆ¢Êà∑Á´ØÂ∑≤Êñ≠ÂºÄËøûÊé•")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:93:35: error: cannot find 'server' in scope
 91 |         // ÂàõÂª∫UDPËøûÊé•Âà∞STUNÊúçÂä°Âô®
 92 |         let endpoint = NWEndpoint.hostPort(
 93 |             host: NWEndpoint.Host(server.host),
    |                                   `- error: cannot find 'server' in scope
 94 |             port: NWEndpoint.Port(integerLiteral: server.port)
 95 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:94:51: error: cannot find 'server' in scope
 92 |         let endpoint = NWEndpoint.hostPort(
 93 |             host: NWEndpoint.Host(server.host),
 94 |             port: NWEndpoint.Port(integerLiteral: server.port)
    |                                                   `- error: cannot find 'server' in scope
 95 |         )
 96 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:104:17: error: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
102 |             case .ready:
103 |                 print("‚úÖ STUNËøûÊé•Â∑≤Âª∫Á´ã")
104 |                 self.sendBindingRequest(completion: completion)
    |                 `- error: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
105 |                 
106 |             case .failed(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:104:53: error: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
102 |             case .ready:
103 |                 print("‚úÖ STUNËøûÊé•Â∑≤Âª∫Á´ã")
104 |                 self.sendBindingRequest(completion: completion)
    |                                                     |- error: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                                                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
105 |                 
106 |             case .failed(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:138:17: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
136 |             if let error = error {
137 |                 print("‚ùå STUNËØ∑Ê±ÇÂèëÈÄÅÂ§±Ë¥•: \(error)")
138 |                 completion(.failure(.requestFailed))
    |                 |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                 `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
139 |                 return
140 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:143:13: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
141 |             
142 |             // Êé•Êî∂ÂìçÂ∫î
143 |             self.receiveBindingResponse(
    |             `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
144 |                 expectedTransactionId: transactionId,
145 |                 completion: completion

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:158:17: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
156 |             if let error = error {
157 |                 print("‚ùå STUNÂìçÂ∫îÊé•Êî∂Â§±Ë¥•: \(error)")
158 |                 completion(.failure(.responseFailed))
    |                 |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                 `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
159 |                 return
160 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:172:36: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
170 |             // Ëß£ÊûêSTUNÂìçÂ∫î
171 |             do {
172 |                 let endpoint = try self.parseBindingResponse(data, expectedTransactionId: expectedTransactionId)
    |                                    `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
173 |                 print("‚úÖ Ëß£ÊûêÂà∞ÂÖ¨ÁΩëÁ´ØÁÇπ: \(endpoint)")
174 |                 completion(.success(endpoint))

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:192:29: error: cannot infer contextual base in reference to member 'success'
190 |                 // ÁÆÄÂåñÁöÑNATÁ±ªÂûãÂà§Êñ≠
191 |                 // ÂÆûÈôÖÂÆûÁé∞ÈúÄË¶ÅÂ§öÊ¨°ÊµãËØï‰∏çÂêåÁöÑSTUNÊúçÂä°Âô®ÂíåÁ´ØÂè£
192 |                 completion(.success(.fullCone))
    |                             `- error: cannot infer contextual base in reference to member 'success'
193 |                 
194 |             case .failure(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:192:38: error: cannot infer contextual base in reference to member 'fullCone'
190 |                 // ÁÆÄÂåñÁöÑNATÁ±ªÂûãÂà§Êñ≠
191 |                 // ÂÆûÈôÖÂÆûÁé∞ÈúÄË¶ÅÂ§öÊ¨°ÊµãËØï‰∏çÂêåÁöÑSTUNÊúçÂä°Âô®ÂíåÁ´ØÂè£
192 |                 completion(.success(.fullCone))
    |                                      `- error: cannot infer contextual base in reference to member 'fullCone'
193 |                 
194 |             case .failure(let error):

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#DeprecatedDeclaration]: <https://docs.swift.org/compiler/documentation/diagnostics/deprecated-declaration>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[122/157] Compiling SkyBridgeCore P2PNetworkTypes.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:462:29: error: expected expression in list of expressions
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
    |                      `- error: expected expression in list of expressions
463 |         
464 |         let parameters: NWParameters

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:465:16: error: expected expression in 'switch' statement
463 |         
464 |         let parameters: NWParameters
465 |         switch protocol {
    |                `- error: expected expression in 'switch' statement
466 |         case .udp:
467 |             parameters = NWParameters.udp

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:465:25: error: expected identifier in protocol declaration
463 |         
464 |         let parameters: NWParameters
465 |         switch protocol {
    |                         `- error: expected identifier in protocol declaration
466 |         case .udp:
467 |             parameters = NWParameters.udp

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:23: error: expected expression in list of expressions
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                       `- error: expected expression in list of expressions
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:22: error: consecutive statements on a line must be separated by ';'
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                      `- error: consecutive statements on a line must be separated by ';'
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:31: error: expected identifier in protocol declaration
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                               `- error: expected identifier in protocol declaration
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:15:46: error: 'P2PProtocol' is ambiguous for type lookup in this context
 13 |     @Published public var networkStatistics: P2PNetworkStatistics = P2PNetworkStatistics()
 14 |     @Published public var isNATTraversalEnabled = true
 15 |     @Published public var preferredProtocol: P2PProtocol = .udp
    |                                              `- error: 'P2PProtocol' is ambiguous for type lookup in this context
 16 |     
 17 |     // MARK: - ÂèëÂ∏ÉËÄÖÂ±ûÊÄß
    :
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: note: found this candidate
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:48:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 46 |     
 47 |     // ÈÖçÁΩÆ
 48 |     private let configuration: P2PNetworkConfiguration
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 49 |     
 50 |     // ÁªüËÆ°‰ø°ÊÅØ
    :
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:59:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 57 |     // MARK: - ÂàùÂßãÂåñ
 58 |     
 59 |     public init(configuration: P2PNetworkConfiguration = .defaultConfiguration()) {
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 60 |         self.configuration = configuration
 61 |         self.networkQueue = DispatchQueue(label: "com.skybridge.p2p.network", qos: .userInitiated)
    :
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:461:96: error: 'P2PProtocol' is ambiguous for type lookup in this context
459 |     
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
    |                                                                                                `- error: 'P2PProtocol' is ambiguous for type lookup in this context
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
463 |         
    :
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: note: found this candidate
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:794:30: error: 'STUNServer' is ambiguous for type lookup in this context
792 |     public let tcpPort: UInt16
793 |     /// STUNÊúçÂä°Âô®ÂàóË°®
794 |     public let stunServers: [STUNServer]
    |                              `- error: 'STUNServer' is ambiguous for type lookup in this context
795 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥
796 |     public let connectionTimeout: TimeInterval
    :
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:806:31: error: 'STUNServer' is ambiguous for type lookup in this context
804 |     public init(udpPort: UInt16,
805 |                 tcpPort: UInt16,
806 |                 stunServers: [STUNServer],
    |                               `- error: 'STUNServer' is ambiguous for type lookup in this context
807 |                 connectionTimeout: TimeInterval,
808 |                 heartbeatInterval: TimeInterval,
    :
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:821:50: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16
    :
819 |     
820 |     /// ÈªòËÆ§ÈÖçÁΩÆ
821 |     public static func defaultConfiguration() -> P2PNetworkConfiguration {
    |                                                  `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
822 |         return P2PNetworkConfiguration(
823 |             udpPort: 8888,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: error: invalid redeclaration of 'P2PNetworkConfiguration'
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- error: invalid redeclaration of 'P2PNetworkConfiguration'
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: error: invalid redeclaration of 'P2PProtocol'
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- error: invalid redeclaration of 'P2PProtocol'
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: error: invalid redeclaration of 'STUNServer'
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- error: invalid redeclaration of 'STUNServer'
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:165:13: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
163 |         // ÂºÄÂßãËøûÊé•ÊµÅÁ®ã
164 |         connectionQueue.async {
165 |             self.initiateConnection(to: device)
    |             `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
166 |         }
167 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:165:41: warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
163 |         // ÂºÄÂßãËøûÊé•ÊµÅÁ®ã
164 |         connectionQueue.async {
165 |             self.initiateConnection(to: device)
    |                                         `- warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
166 |         }
167 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:258:15: note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
256 | 
257 | // MARK: - P2PËÆæÂ§á
258 | public struct P2PDevice: Codable, Identifiable, Hashable {
    |               `- note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
259 |     public let id: String
260 |     public let name: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:181:31: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
179 |     public func broadcastData(_ data: Data) {
180 |         networkQueue.async {
181 |             for connection in self.establishedConnections.values {
    |                               `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
182 |                 if connection.status == .connected {
183 |                     self.performSendData(data, to: connection)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:194:33: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
192 |         
193 |         connectionQueue.async {
194 |             if let connection = self.establishedConnections[deviceId] {
    |                                 `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
195 |                 self.closeConnection(connection)
196 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:262:13: error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
260 |         networkMonitor = NWPathMonitor()
261 |         networkMonitor?.pathUpdateHandler = { [weak self] path in
262 |             self?.handleNetworkPathUpdate(path)
    |             `- error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
263 |         }
264 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:39:25: error: 'STUNServer' is ambiguous for type lookup in this context
 37 |     // MARK: - ÂàùÂßãÂåñ
 38 |     
 39 |     public init(server: STUNServer) {
    |                         `- error: 'STUNServer' is ambiguous for type lookup in this context
 40 |         self.server = server
 41 |         self.networkQueue = DispatchQueue(label: "com.skybridge.stun.client", qos: .userInitiated)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:35:57: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 33 |     // MARK: - ÂàùÂßãÂåñ
 34 |     
 35 |     public init(stunClient: STUNClient?, configuration: P2PNetworkConfiguration) {
    |                                                         `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 36 |         self.stunClient = stunClient
 37 |         self.configuration = configuration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: note: found this candidate
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:295:13: error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
293 |         
294 |         udpListener?.newConnectionHandler = { [weak self] connection in
295 |             self?.handleNewUDPConnection(connection)
    |             `- error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
296 |         }
297 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:311:13: error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
309 |         
310 |         tcpListener?.newConnectionHandler = { [weak self] connection in
311 |             self?.handleNewTCPConnection(connection)
    |             `- error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
312 |         }
313 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:380:35: warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
378 |                 
379 |                 if result == 0 {
380 |                     let address = String(cString: hostname)
    |                                   `- warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
381 |                     addresses.append(address)
382 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:427:81: error: cannot infer contextual base in reference to member 'udp'
425 |             case .success(let endpoint):
426 |                 print("‚úÖ NATÁ©øÈÄèÊàêÂäüÔºåÁ´ØÁÇπ: \(endpoint)")
427 |                 self?.establishConnection(to: device, via: endpoint, protocol: .udp)
    |                                                                                 `- error: cannot infer contextual base in reference to member 'udp'
428 |                 
429 |             case .failure(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:441:32: error: value of type 'P2PDevice' has no member 'endpoints'
439 |         
440 |         // Â∞ùËØïÂ∑≤Áü•ÁöÑËÆæÂ§áÁ´ØÁÇπ
441 |         for endpoint in device.endpoints {
    |                                `- error: value of type 'P2PDevice' has no member 'endpoints'
442 |             if preferredProtocol == .udp {
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:443:75: error: cannot infer contextual base in reference to member 'udp'
441 |         for endpoint in device.endpoints {
442 |             if preferredProtocol == .udp {
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)
    |                                                                           `- error: cannot infer contextual base in reference to member 'udp'
444 |             } else {
445 |                 establishConnection(to: device, via: endpoint, protocol: .tcp)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:445:75: error: cannot infer contextual base in reference to member 'tcp'
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)
444 |             } else {
445 |                 establishConnection(to: device, via: endpoint, protocol: .tcp)
    |                                                                           `- error: cannot infer contextual base in reference to member 'tcp'
446 |             }
447 |             

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:453:88: error: cannot infer contextual base in reference to member 'tcp'
451 |                     if self.pendingConnections[device.id] != nil {
452 |                         print("üîÑ UDPËøûÊé•Ë∂ÖÊó∂ÔºåÂ∞ùËØïTCP fallback")
453 |                         self.establishConnection(to: device, via: endpoint, protocol: .tcp)
    |                                                                                        `- error: cannot infer contextual base in reference to member 'tcp'
454 |                     }
455 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:462:28: error: missing argument for parameter #1 in call
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
    |                     `- error: missing argument for parameter #1 in call
463 |         
464 |         let parameters: NWParameters

Swift.DefaultStringInterpolation.appendInterpolation:2:22: note: 'appendInterpolation' declared here
1 | struct DefaultStringInterpolation {
2 | public mutating func appendInterpolation(_ value: any Any.Type)}
  |                      `- note: 'appendInterpolation' declared here
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:477:24: error: extra argument 'id' in call
475 |         
476 |         let connection = P2PConnection(
477 |             id: UUID().uuidString,
    |                        `- error: extra argument 'id' in call
478 |             device: device,
479 |             nwConnection: nwConnection,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:478:27: error: missing argument for parameter 'securityManager' in call
476 |         let connection = P2PConnection(
477 |             id: UUID().uuidString,
478 |             device: device,
    |                           `- error: missing argument for parameter 'securityManager' in call
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:522:20: error: value of type 'P2PConnection' has no member 'state'
520 |         
521 |         // Êõ¥Êñ∞ËøûÊé•Áä∂ÊÄÅ
522 |         connection.state = .connected
    |                    `- error: value of type 'P2PConnection' has no member 'state'
523 |         connection.connectedAt = Date()
524 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:522:29: error: cannot infer contextual base in reference to member 'connected'
520 |         
521 |         // Êõ¥Êñ∞ËøûÊé•Áä∂ÊÄÅ
522 |         connection.state = .connected
    |                             `- error: cannot infer contextual base in reference to member 'connected'
523 |         connection.connectedAt = Date()
524 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:523:20: error: value of type 'P2PConnection' has no member 'connectedAt'
521 |         // Êõ¥Êñ∞ËøûÊé•Áä∂ÊÄÅ
522 |         connection.state = .connected
523 |         connection.connectedAt = Date()
    |                    `- error: value of type 'P2PConnection' has no member 'connectedAt'
524 |         
525 |         // Ê∑ªÂä†Âà∞Â∑≤Âª∫Á´ãËøûÊé•

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:553:27: error: value of type 'P2PConnection' has no member 'protocol'
551 |         if let pendingConnection = pendingConnections[deviceId] {
552 |             // Â¶ÇÊûúÊòØUDPËøûÊé•Â§±Ë¥•ÔºåÂ∞ùËØïTCP fallback
553 |             if connection.protocol == .udp {
    |                           `- error: value of type 'P2PConnection' has no member 'protocol'
554 |                 print("üîÑ UDPËøûÊé•Â§±Ë¥•ÔºåÂ∞ùËØïTCP fallback")
555 |                 attemptDirectConnection(to: pendingConnection.device)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:20: error: value of type 'P2PConnection' has no member 'nwConnection'
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                    `- error: value of type 'P2PConnection' has no member 'nwConnection'
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:105: error: cannot infer type of closure parameter 'data' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                         `- error: cannot infer type of closure parameter 'data' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:111: error: cannot infer type of closure parameter '_' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                               `- error: cannot infer type of closure parameter '_' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:114: error: cannot infer type of closure parameter 'isComplete' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                                  `- error: cannot infer type of closure parameter 'isComplete' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:126: error: cannot infer type of closure parameter 'error' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                                              `- error: cannot infer type of closure parameter 'error' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:618:20: error: value of type 'P2PConnection' has no member 'nwConnection'
616 |     /// ÊâßË°åÊï∞ÊçÆÂèëÈÄÅ
617 |     private func performSendData(_ data: Data, to connection: P2PConnection) {
618 |         connection.nwConnection.send(content: data, completion: .contentProcessed { [weak self] error in
    |                    `- error: value of type 'P2PConnection' has no member 'nwConnection'
619 |             if let error = error {
620 |                 print("‚ùå Êï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:618:66: error: cannot infer contextual base in reference to member 'contentProcessed'
616 |     /// ÊâßË°åÊï∞ÊçÆÂèëÈÄÅ
617 |     private func performSendData(_ data: Data, to connection: P2PConnection) {
618 |         connection.nwConnection.send(content: data, completion: .contentProcessed { [weak self] error in
    |                                                                  `- error: cannot infer contextual base in reference to member 'contentProcessed'
619 |             if let error = error {
620 |                 print("‚ùå Êï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:618:97: error: cannot infer type of closure parameter 'error' without a type annotation
616 |     /// ÊâßË°åÊï∞ÊçÆÂèëÈÄÅ
617 |     private func performSendData(_ data: Data, to connection: P2PConnection) {
618 |         connection.nwConnection.send(content: data, completion: .contentProcessed { [weak self] error in
    |                                                                                                 `- error: cannot infer type of closure parameter 'error' without a type annotation
619 |             if let error = error {
620 |                 print("‚ùå Êï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:21: error: no exact matches in call to initializer 
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                     |- error: no exact matches in call to initializer 
    |                     `- note: candidate has partially matching parameter list (from: any Decoder)
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:273:12: note: candidate has partially matching parameter list (from: P2PDeviceInfo)
271 |     public var deviceType: P2PDeviceType { return type }
272 |     
273 |     public init(from deviceInfo: P2PDeviceInfo) {
    |            `- note: candidate has partially matching parameter list (from: P2PDeviceInfo)
274 |         self.id = deviceInfo.id
275 |         self.name = deviceInfo.name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:638:43: error: extra arguments at positions #1, #4, #5 in call
636 |         
637 |         // ÂàõÂª∫‰∏¥Êó∂ËøûÊé•ÂØπË±°Â§ÑÁêÜÊè°Êâã
638 |         let tempConnection = P2PConnection(
    |                                           `- error: extra arguments at positions #1, #4, #5 in call
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:93: error: missing argument for parameter 'securityManager' in call
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                                             `- error: missing argument for parameter 'securityManager' in call
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:70: error: cannot infer contextual base in reference to member 'unknown'
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                      `- error: cannot infer contextual base in reference to member 'unknown'
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:642:24: error: cannot infer contextual base in reference to member 'udp'
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,
    |                        `- error: cannot infer contextual base in reference to member 'udp'
643 |             endpoint: nwConnection.endpoint
644 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:21: error: no exact matches in call to initializer 
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                     |- error: no exact matches in call to initializer 
    |                     `- note: candidate has partially matching parameter list (from: any Decoder)
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:273:12: note: candidate has partially matching parameter list (from: P2PDeviceInfo)
271 |     public var deviceType: P2PDeviceType { return type }
272 |     
273 |     public init(from deviceInfo: P2PDeviceInfo) {
    |            `- note: candidate has partially matching parameter list (from: P2PDeviceInfo)
274 |         self.id = deviceInfo.id
275 |         self.name = deviceInfo.name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:657:43: error: extra arguments at positions #1, #4, #5 in call
655 |         
656 |         // ÂàõÂª∫‰∏¥Êó∂ËøûÊé•ÂØπË±°Â§ÑÁêÜÊè°Êâã
657 |         let tempConnection = P2PConnection(
    |                                           `- error: extra arguments at positions #1, #4, #5 in call
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:93: error: missing argument for parameter 'securityManager' in call
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                                             `- error: missing argument for parameter 'securityManager' in call
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:70: error: cannot infer contextual base in reference to member 'unknown'
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                      `- error: cannot infer contextual base in reference to member 'unknown'
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:661:24: error: cannot infer contextual base in reference to member 'tcp'
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,
    |                        `- error: cannot infer contextual base in reference to member 'tcp'
662 |             endpoint: nwConnection.endpoint
663 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:690:20: error: value of type 'P2PConnection' has no member 'nwConnection'
688 |         print("üîå ÂÖ≥Èó≠ËøûÊé•: \(connection.device.name)")
689 |         
690 |         connection.nwConnection.cancel()
    |                    `- error: value of type 'P2PConnection' has no member 'nwConnection'
691 |         connection.state = .disconnected
692 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:691:20: error: value of type 'P2PConnection' has no member 'state'
689 |         
690 |         connection.nwConnection.cancel()
691 |         connection.state = .disconnected
    |                    `- error: value of type 'P2PConnection' has no member 'state'
692 |         
693 |         establishedConnections.removeValue(forKey: connection.device.id)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:691:29: error: cannot infer contextual base in reference to member 'disconnected'
689 |         
690 |         connection.nwConnection.cancel()
691 |         connection.state = .disconnected
    |                             `- error: cannot infer contextual base in reference to member 'disconnected'
692 |         
693 |         establishedConnections.removeValue(forKey: connection.device.id)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:735:17: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
733 |         statisticsTimer = Timer.scheduledTimer(withTimeInterval: 1.0, repeats: true) { [weak self] _ in
734 |             Task { @MainActor in
735 |                 self?.updateNetworkStatistics()
    |                 `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
736 |             }
737 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:771:24: error: value of type 'P2PConnection' has no member 'connectedAt'
769 |         let currentTime = Date()
770 |         let totalUptime = connections.compactMap { connection in
771 |             connection.connectedAt?.timeIntervalSince(currentTime)
    |                        `- error: value of type 'P2PConnection' has no member 'connectedAt'
772 |         }.reduce(0, +)
773 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:53:17: warning: no 'async' operations occur within 'await' expression
 51 |         
 52 |         do {
 53 |             try await discoveryService.startDiscovery()
    |                 `- warning: no 'async' operations occur within 'await' expression
 54 |             
 55 |             // ÁõëÂê¨ÂèëÁé∞ÁöÑËÆæÂ§á

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:53:13: warning: no calls to throwing functions occur within 'try' expression
 51 |         
 52 |         do {
 53 |             try await discoveryService.startDiscovery()
    |             `- warning: no calls to throwing functions occur within 'try' expression
 54 |             
 55 |             // ÁõëÂê¨ÂèëÁé∞ÁöÑËÆæÂ§á

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:66:11: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
 64 |             startDiscoveryTimer()
 65 |             
 66 |         } catch {
    |           `- warning: 'catch' block is unreachable because no errors are thrown in 'do' block
 67 |             print("ÂêØÂä®ËÆæÂ§áÂèëÁé∞Â§±Ë¥•: \(error)")
 68 |             networkState = .disconnected

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:96:23: warning: value 'self' was defined but never used; consider replacing with boolean test [#no-usage]
 94 |         // Âª∫Á´ãËøûÊé•
 95 |         networkLayer.connectToDevice(device) { [weak self] connection in
 96 |             guard let self = self else { return }
    |                       `- warning: value 'self' was defined but never used; consider replacing with boolean test [#no-usage]
 97 |             
 98 |             // ËÆ§ËØÅËøûÊé•

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:117:22: error: 'closeConnection' is inaccessible due to 'private' protection level
115 |         
116 |         // ÂÖ≥Èó≠ËøûÊé•
117 |         networkLayer.closeConnection(connection)
    |                      `- error: 'closeConnection' is inaccessible due to 'private' protection level
118 |         
119 |         // ÁßªÈô§Ê¥ªË∑ÉËøûÊé•

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:687:18: note: 'closeConnection' declared here
685 |     
686 |     /// ÂÖ≥Èó≠Âçï‰∏™ËøûÊé•
687 |     private func closeConnection(_ connection: P2PConnection) {
    |                  `- note: 'closeConnection' declared here
688 |         print("üîå ÂÖ≥Èó≠ËøûÊé•: \(connection.device.name)")
689 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:154:29: error: type 'P2PNetworkState' has no member 'scanning'
152 |             networkState = .disconnected
153 |         case .listening:
154 |             networkState = .scanning
    |                             `- error: type 'P2PNetworkState' has no member 'scanning'
155 |         }
156 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:146:9: error: switch must be exhaustive
144 |     
145 |     private func handleNetworkStateChange(_ state: P2PConnectionStatus) {
146 |         switch state {
    |         |- error: switch must be exhaustive
    |         |- note: add missing case: '.authenticating'
    |         |- note: add missing case: '.authenticated'
    |         |- note: add missing case: '.networkUnavailable'
    |         `- note: add missing cases
147 |         case .connected:
148 |             networkState = .connected

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:181:50: error: extra arguments at positions #1, #5 in call
179 |     private func updateNetworkQuality() async {
180 |         guard !activeConnections.isEmpty else {
181 |             networkQuality = P2PConnectionQuality(
    |                                                  `- error: extra arguments at positions #1, #5 in call
182 |                 signalStrength: 0.0,
183 |                 latency: 0.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:184:31: error: missing argument for parameter 'stabilityScore' in call
182 |                 signalStrength: 0.0,
183 |                 latency: 0.0,
184 |                 bandwidth: 0.0,
    |                               `- error: missing argument for parameter 'stabilityScore' in call
185 |                 packetLoss: 0.0,
186 |                 level: .poor

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:184:28: error: cannot convert value of type 'Double' to expected argument type 'UInt64'
182 |                 signalStrength: 0.0,
183 |                 latency: 0.0,
184 |                 bandwidth: 0.0,
    |                            `- error: cannot convert value of type 'Double' to expected argument type 'UInt64'
185 |                 packetLoss: 0.0,
186 |                 level: .poor

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:186:25: error: cannot infer contextual base in reference to member 'poor'
184 |                 bandwidth: 0.0,
185 |                 packetLoss: 0.0,
186 |                 level: .poor
    |                         `- error: cannot infer contextual base in reference to member 'poor'
187 |             )
188 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:193:62: error: value of type 'P2PConnectionQuality' has no member 'signalStrength'
191 |         // ËÆ°ÁÆóÂπ≥ÂùáÁΩëÁªúË¥®Èáè
192 |         let connections = Array(activeConnections.values)
193 |         let avgSignalStrength = connections.map { $0.quality.signalStrength }.reduce(0, +) / Double(connections.count)
    |                                                              `- error: value of type 'P2PConnectionQuality' has no member 'signalStrength'
194 |         let avgLatency = connections.map { $0.quality.latency }.reduce(0, +) / Double(connections.count)
195 |         let avgBandwidth = connections.map { $0.quality.bandwidth }.reduce(0, +) / Double(connections.count)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:195:57: error: cannot convert value of type 'UInt64' to closure result type 'Double'
193 |         let avgSignalStrength = connections.map { $0.quality.signalStrength }.reduce(0, +) / Double(connections.count)
194 |         let avgLatency = connections.map { $0.quality.latency }.reduce(0, +) / Double(connections.count)
195 |         let avgBandwidth = connections.map { $0.quality.bandwidth }.reduce(0, +) / Double(connections.count)
    |                                                         `- error: cannot convert value of type 'UInt64' to closure result type 'Double'
196 |         let avgPacketLoss = connections.map { $0.quality.packetLoss }.reduce(0, +) / Double(connections.count)
197 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:209:46: error: extra arguments at positions #1, #5 in call
207 |         }
208 |         
209 |         networkQuality = P2PConnectionQuality(
    |                                              `- error: extra arguments at positions #1, #5 in call
210 |             signalStrength: avgSignalStrength,
211 |             latency: avgLatency,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:212:36: error: missing argument for parameter 'stabilityScore' in call
210 |             signalStrength: avgSignalStrength,
211 |             latency: avgLatency,
212 |             bandwidth: avgBandwidth,
    |                                    `- error: missing argument for parameter 'stabilityScore' in call
213 |             packetLoss: avgPacketLoss,
214 |             level: level

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:220:20: error: value of type 'P2PConnection' has no member 'statusPublisher'
218 |     private func monitorConnection(_ connection: P2PConnection) {
219 |         // ÁõëÂê¨ËøûÊé•Áä∂ÊÄÅÂèòÂåñ
220 |         connection.statusPublisher
    |                    `- error: value of type 'P2PConnection' has no member 'statusPublisher'
221 |             .receive(on: DispatchQueue.main)
222 |             .sink { [weak self] status in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:232:62: error: value of type 'P2PConnection' has no member 'remoteDevice'
230 |         case .disconnected, .failed:
231 |             // ËøûÊé•Êñ≠ÂºÄÔºå‰ªéÊ¥ªË∑ÉËøûÊé•‰∏≠ÁßªÈô§
232 |             activeConnections.removeValue(forKey: connection.remoteDevice.deviceId)
    |                                                              `- error: value of type 'P2PConnection' has no member 'remoteDevice'
233 |             
234 |             // Â¶ÇÊûúÊ≤°ÊúâÊ¥ªË∑ÉËøûÊé•ÔºåÊõ¥Êñ∞ÁΩëÁªúÁä∂ÊÄÅ

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:265:26: error: 'closeConnection' is inaccessible due to 'private' protection level
263 |         // ÂÖ≥Èó≠ÊâÄÊúâÊ¥ªË∑ÉËøûÊé•
264 |         for connection in activeConnections.values {
265 |             networkLayer.closeConnection(connection)
    |                          `- error: 'closeConnection' is inaccessible due to 'private' protection level
266 |         }
267 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:687:18: note: 'closeConnection' declared here
685 |     
686 |     /// ÂÖ≥Èó≠Âçï‰∏™ËøûÊé•
687 |     private func closeConnection(_ connection: P2PConnection) {
    |                  `- note: 'closeConnection' declared here
688 |         print("üîå ÂÖ≥Èó≠ËøûÊé•: \(connection.device.name)")
689 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:260:9: error: call to main actor-isolated instance method 'stopDiscovery()' in a synchronous nonisolated context [#ActorIsolatedCall]
 71 |     
 72 |     /// ÂÅúÊ≠¢ËÆæÂ§áÂèëÁé∞
 73 |     public func stopDiscovery() {
    |                 `- note: calls to instance method 'stopDiscovery()' from outside of its actor context are implicitly asynchronous
 74 |         discoveryService.stopDiscovery()
 75 |         stopDiscoveryTimer()
    :
258 |     
259 |     deinit {
260 |         stopDiscovery()
    |         `- error: call to main actor-isolated instance method 'stopDiscovery()' in a synchronous nonisolated context [#ActorIsolatedCall]
261 |         qualityMonitorTimer?.invalidate()
262 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:264:27: error: main actor-isolated property 'activeConnections' can not be referenced from a nonisolated context
 14 |     
 15 |     @Published public var discoveredDevices: [P2PDevice] = []
 16 |     @Published public var activeConnections: [String: P2PConnection] = [:]
    |                           `- note: property declared here
 17 |     @Published public var connectionHistory: [P2PDevice] = []
 18 |     @Published public var networkState: P2PNetworkState = .disconnected
    :
262 |         
263 |         // ÂÖ≥Èó≠ÊâÄÊúâÊ¥ªË∑ÉËøûÊé•
264 |         for connection in activeConnections.values {
    |                           `- error: main actor-isolated property 'activeConnections' can not be referenced from a nonisolated context
265 |             networkLayer.closeConnection(connection)
266 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:284:44: error: cannot convert value of type 'UInt64' to expected argument type 'Double'
282 |             historyConnectionsCount: connectionHistory.count,
283 |             averageLatency: networkQuality.latency,
284 |             totalBandwidth: networkQuality.bandwidth
    |                                            `- error: cannot convert value of type 'UInt64' to expected argument type 'Double'
285 |         )
286 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:306:22: error: extra arguments at positions #1, #3, #6 in call
304 |     public func addMockDevices() {
305 |         let mockDevices = [
306 |             P2PDevice(
    |                      `- error: extra arguments at positions #1, #3, #6 in call
307 |                 deviceId: "mock-mac-1",
308 |                 name: "MacBook Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:306:22: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
304 |     public func addMockDevices() {
305 |         let mockDevices = [
306 |             P2PDevice(
    |                      `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
307 |                 deviceId: "mock-mac-1",
308 |                 name: "MacBook Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:309:30: error: cannot infer contextual base in reference to member 'mac'
307 |                 deviceId: "mock-mac-1",
308 |                 name: "MacBook Pro",
309 |                 deviceType: .mac,
    |                              `- error: cannot infer contextual base in reference to member 'mac'
310 |                 ipAddress: "192.168.1.100",
311 |                 port: 8080,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:316:22: error: extra arguments at positions #1, #3, #6 in call
314 |                 lastSeen: Date()
315 |             ),
316 |             P2PDevice(
    |                      `- error: extra arguments at positions #1, #3, #6 in call
317 |                 deviceId: "mock-iphone-1",
318 |                 name: "iPhone 15 Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:316:22: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
314 |                 lastSeen: Date()
315 |             ),
316 |             P2PDevice(
    |                      `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
317 |                 deviceId: "mock-iphone-1",
318 |                 name: "iPhone 15 Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:319:30: error: cannot infer contextual base in reference to member 'iPhone'
317 |                 deviceId: "mock-iphone-1",
318 |                 name: "iPhone 15 Pro",
319 |                 deviceType: .iPhone,
    |                              `- error: cannot infer contextual base in reference to member 'iPhone'
320 |                 ipAddress: "192.168.1.101",
321 |                 port: 8081,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:326:22: error: extra arguments at positions #1, #3, #6 in call
324 |                 lastSeen: Date().addingTimeInterval(-300)
325 |             ),
326 |             P2PDevice(
    |                      `- error: extra arguments at positions #1, #3, #6 in call
327 |                 deviceId: "mock-windows-1",
328 |                 name: "Windows PC",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:326:22: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
324 |                 lastSeen: Date().addingTimeInterval(-300)
325 |             ),
326 |             P2PDevice(
    |                      `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
327 |                 deviceId: "mock-windows-1",
328 |                 name: "Windows PC",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:329:30: error: cannot infer contextual base in reference to member 'windows'
327 |                 deviceId: "mock-windows-1",
328 |                 name: "Windows PC",
329 |                 deviceType: .windows,
    |                              `- error: cannot infer contextual base in reference to member 'windows'
330 |                 ipAddress: "192.168.1.102",
331 |                 port: 8082,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:141:30: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                              `- error: 'STUNServer' is ambiguous for type lookup in this context
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:151:19: error: 'P2PProtocol' is ambiguous for type lookup in this context
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"
    :
149 |     public init(
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
    |                   `- error: 'P2PProtocol' is ambiguous for type lookup in this context
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
153 |         connectionTimeout: TimeInterval = 30.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: note: found this candidate
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:152:23: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
    |                       `- error: 'STUNServer' is ambiguous for type lookup in this context
153 |         connectionTimeout: TimeInterval = 30.0,
154 |         heartbeatInterval: TimeInterval = 10.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: error: invalid redeclaration of 'P2PNetworkConfiguration'
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- error: invalid redeclaration of 'P2PNetworkConfiguration'
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:66:61: error: 'NATType' is ambiguous for type lookup in this context
 64 |     
 65 |     /// Ê£ÄÊµãNATÁ±ªÂûã
 66 |     public func detectNATType(completion: @escaping (Result<NATType, STUNError>) -> Void) {
    |                                                             `- error: 'NATType' is ambiguous for type lookup in this context
 67 |         print("üîç ÂºÄÂßãÊ£ÄÊµãNATÁ±ªÂûã")
 68 |         
    :
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:183:72: error: 'NATType' is ambiguous for type lookup in this context
181 |     
182 |     /// ÊâßË°åNATÁ±ªÂûãÊ£ÄÊµã
183 |     private func performNATTypeDetection(completion: @escaping (Result<NATType, STUNError>) -> Void) {
    |                                                                        `- error: 'NATType' is ambiguous for type lookup in this context
184 |         // NATÁ±ªÂûãÊ£ÄÊµãÈúÄË¶ÅÂ§ö‰∏™STUNËØ∑Ê±Ç
185 |         // ËøôÈáåÂÆûÁé∞ÁÆÄÂåñÁâàÊú¨ÔºåÂÆûÈôÖÂ∫îÁî®‰∏≠ÈúÄË¶ÅÊõ¥Â§çÊùÇÁöÑÊ£ÄÊµãÈÄªËæë
    :
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:360:37: error: 'TraversalDifficulty' is ambiguous for type lookup in this context
358 |     
359 |     /// NATÁ©øÈÄèÈöæÂ∫¶
360 |     public var traversalDifficulty: TraversalDifficulty {
    |                                     `- error: 'TraversalDifficulty' is ambiguous for type lookup in this context
361 |         switch self {
362 |         case .noNAT, .fullCone:
    :
373 | 
374 | /// Á©øÈÄèÈöæÂ∫¶
375 | public enum TraversalDifficulty: String, CaseIterable {
    |             `- note: found this candidate
376 |     case easy = "ÁÆÄÂçï"
377 |     case medium = "‰∏≠Á≠â"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:61:13: note: found this candidate
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- note: found this candidate
 62 |     case easy = "easy"
 63 |     case medium = "medium"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:347:13: error: invalid redeclaration of 'NATType'
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- error: invalid redeclaration of 'NATType'
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:375:13: error: invalid redeclaration of 'TraversalDifficulty'
373 | 
374 | /// Á©øÈÄèÈöæÂ∫¶
375 | public enum TraversalDifficulty: String, CaseIterable {
    |             `- error: invalid redeclaration of 'TraversalDifficulty'
376 |     case easy = "ÁÆÄÂçï"
377 |     case medium = "‰∏≠Á≠â"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:40:14: error: value of type 'STUNClient' has no member 'server'
 38 |     
 39 |     public init(server: STUNServer) {
 40 |         self.server = server
    |              `- error: value of type 'STUNClient' has no member 'server'
 41 |         self.networkQueue = DispatchQueue(label: "com.skybridge.stun.client", qos: .userInitiated)
 42 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:57:13: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
 55 |         
 56 |         networkQueue.async {
 57 |             self.performSTUNBinding { result in
    |             `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
 58 |                 DispatchQueue.main.async {
 59 |                     completion(result)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:59:21: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
 57 |             self.performSTUNBinding { result in
 58 |                 DispatchQueue.main.async {
 59 |                     completion(result)
    |                     |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 60 |                 }
 61 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:59:21: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in an isolated closure
 57 |             self.performSTUNBinding { result in
 58 |                 DispatchQueue.main.async {
 59 |                     completion(result)
    |                     |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in an isolated closure
    |                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 60 |                 }
 61 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:81:13: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
 79 |     public func disconnect() {
 80 |         networkQueue.async {
 81 |             self.udpConnection?.cancel()
    |             `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |             self.udpConnection = nil
 83 |             print("üîå STUNÂÆ¢Êà∑Á´ØÂ∑≤Êñ≠ÂºÄËøûÊé•")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:93:35: error: cannot find 'server' in scope
 91 |         // ÂàõÂª∫UDPËøûÊé•Âà∞STUNÊúçÂä°Âô®
 92 |         let endpoint = NWEndpoint.hostPort(
 93 |             host: NWEndpoint.Host(server.host),
    |                                   `- error: cannot find 'server' in scope
 94 |             port: NWEndpoint.Port(integerLiteral: server.port)
 95 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:94:51: error: cannot find 'server' in scope
 92 |         let endpoint = NWEndpoint.hostPort(
 93 |             host: NWEndpoint.Host(server.host),
 94 |             port: NWEndpoint.Port(integerLiteral: server.port)
    |                                                   `- error: cannot find 'server' in scope
 95 |         )
 96 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:104:17: error: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
102 |             case .ready:
103 |                 print("‚úÖ STUNËøûÊé•Â∑≤Âª∫Á´ã")
104 |                 self.sendBindingRequest(completion: completion)
    |                 `- error: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
105 |                 
106 |             case .failed(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:104:53: error: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
102 |             case .ready:
103 |                 print("‚úÖ STUNËøûÊé•Â∑≤Âª∫Á´ã")
104 |                 self.sendBindingRequest(completion: completion)
    |                                                     |- error: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                                                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
105 |                 
106 |             case .failed(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:138:17: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
136 |             if let error = error {
137 |                 print("‚ùå STUNËØ∑Ê±ÇÂèëÈÄÅÂ§±Ë¥•: \(error)")
138 |                 completion(.failure(.requestFailed))
    |                 |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                 `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
139 |                 return
140 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:143:13: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
141 |             
142 |             // Êé•Êî∂ÂìçÂ∫î
143 |             self.receiveBindingResponse(
    |             `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
144 |                 expectedTransactionId: transactionId,
145 |                 completion: completion

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:158:17: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
156 |             if let error = error {
157 |                 print("‚ùå STUNÂìçÂ∫îÊé•Êî∂Â§±Ë¥•: \(error)")
158 |                 completion(.failure(.responseFailed))
    |                 |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                 `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
159 |                 return
160 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:172:36: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
170 |             // Ëß£ÊûêSTUNÂìçÂ∫î
171 |             do {
172 |                 let endpoint = try self.parseBindingResponse(data, expectedTransactionId: expectedTransactionId)
    |                                    `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
173 |                 print("‚úÖ Ëß£ÊûêÂà∞ÂÖ¨ÁΩëÁ´ØÁÇπ: \(endpoint)")
174 |                 completion(.success(endpoint))

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:192:29: error: cannot infer contextual base in reference to member 'success'
190 |                 // ÁÆÄÂåñÁöÑNATÁ±ªÂûãÂà§Êñ≠
191 |                 // ÂÆûÈôÖÂÆûÁé∞ÈúÄË¶ÅÂ§öÊ¨°ÊµãËØï‰∏çÂêåÁöÑSTUNÊúçÂä°Âô®ÂíåÁ´ØÂè£
192 |                 completion(.success(.fullCone))
    |                             `- error: cannot infer contextual base in reference to member 'success'
193 |                 
194 |             case .failure(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:192:38: error: cannot infer contextual base in reference to member 'fullCone'
190 |                 // ÁÆÄÂåñÁöÑNATÁ±ªÂûãÂà§Êñ≠
191 |                 // ÂÆûÈôÖÂÆûÁé∞ÈúÄË¶ÅÂ§öÊ¨°ÊµãËØï‰∏çÂêåÁöÑSTUNÊúçÂä°Âô®ÂíåÁ´ØÂè£
192 |                 completion(.success(.fullCone))
    |                                      `- error: cannot infer contextual base in reference to member 'fullCone'
193 |                 
194 |             case .failure(let error):

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#DeprecatedDeclaration]: <https://docs.swift.org/compiler/documentation/diagnostics/deprecated-declaration>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[123/157] Compiling SkyBridgeCore STUNClient.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:462:29: error: expected expression in list of expressions
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
    |                      `- error: expected expression in list of expressions
463 |         
464 |         let parameters: NWParameters

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:465:16: error: expected expression in 'switch' statement
463 |         
464 |         let parameters: NWParameters
465 |         switch protocol {
    |                `- error: expected expression in 'switch' statement
466 |         case .udp:
467 |             parameters = NWParameters.udp

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:465:25: error: expected identifier in protocol declaration
463 |         
464 |         let parameters: NWParameters
465 |         switch protocol {
    |                         `- error: expected identifier in protocol declaration
466 |         case .udp:
467 |             parameters = NWParameters.udp

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:23: error: expected expression in list of expressions
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                       `- error: expected expression in list of expressions
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:22: error: consecutive statements on a line must be separated by ';'
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                      `- error: consecutive statements on a line must be separated by ';'
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:31: error: expected identifier in protocol declaration
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                               `- error: expected identifier in protocol declaration
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:15:46: error: 'P2PProtocol' is ambiguous for type lookup in this context
 13 |     @Published public var networkStatistics: P2PNetworkStatistics = P2PNetworkStatistics()
 14 |     @Published public var isNATTraversalEnabled = true
 15 |     @Published public var preferredProtocol: P2PProtocol = .udp
    |                                              `- error: 'P2PProtocol' is ambiguous for type lookup in this context
 16 |     
 17 |     // MARK: - ÂèëÂ∏ÉËÄÖÂ±ûÊÄß
    :
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: note: found this candidate
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:48:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 46 |     
 47 |     // ÈÖçÁΩÆ
 48 |     private let configuration: P2PNetworkConfiguration
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 49 |     
 50 |     // ÁªüËÆ°‰ø°ÊÅØ
    :
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:59:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 57 |     // MARK: - ÂàùÂßãÂåñ
 58 |     
 59 |     public init(configuration: P2PNetworkConfiguration = .defaultConfiguration()) {
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 60 |         self.configuration = configuration
 61 |         self.networkQueue = DispatchQueue(label: "com.skybridge.p2p.network", qos: .userInitiated)
    :
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:461:96: error: 'P2PProtocol' is ambiguous for type lookup in this context
459 |     
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
    |                                                                                                `- error: 'P2PProtocol' is ambiguous for type lookup in this context
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
463 |         
    :
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: note: found this candidate
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:794:30: error: 'STUNServer' is ambiguous for type lookup in this context
792 |     public let tcpPort: UInt16
793 |     /// STUNÊúçÂä°Âô®ÂàóË°®
794 |     public let stunServers: [STUNServer]
    |                              `- error: 'STUNServer' is ambiguous for type lookup in this context
795 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥
796 |     public let connectionTimeout: TimeInterval
    :
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:806:31: error: 'STUNServer' is ambiguous for type lookup in this context
804 |     public init(udpPort: UInt16,
805 |                 tcpPort: UInt16,
806 |                 stunServers: [STUNServer],
    |                               `- error: 'STUNServer' is ambiguous for type lookup in this context
807 |                 connectionTimeout: TimeInterval,
808 |                 heartbeatInterval: TimeInterval,
    :
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:821:50: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16
    :
819 |     
820 |     /// ÈªòËÆ§ÈÖçÁΩÆ
821 |     public static func defaultConfiguration() -> P2PNetworkConfiguration {
    |                                                  `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
822 |         return P2PNetworkConfiguration(
823 |             udpPort: 8888,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: error: invalid redeclaration of 'P2PNetworkConfiguration'
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- error: invalid redeclaration of 'P2PNetworkConfiguration'
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: error: invalid redeclaration of 'P2PProtocol'
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- error: invalid redeclaration of 'P2PProtocol'
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: error: invalid redeclaration of 'STUNServer'
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- error: invalid redeclaration of 'STUNServer'
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:165:13: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
163 |         // ÂºÄÂßãËøûÊé•ÊµÅÁ®ã
164 |         connectionQueue.async {
165 |             self.initiateConnection(to: device)
    |             `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
166 |         }
167 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:165:41: warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
163 |         // ÂºÄÂßãËøûÊé•ÊµÅÁ®ã
164 |         connectionQueue.async {
165 |             self.initiateConnection(to: device)
    |                                         `- warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
166 |         }
167 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:258:15: note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
256 | 
257 | // MARK: - P2PËÆæÂ§á
258 | public struct P2PDevice: Codable, Identifiable, Hashable {
    |               `- note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
259 |     public let id: String
260 |     public let name: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:181:31: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
179 |     public func broadcastData(_ data: Data) {
180 |         networkQueue.async {
181 |             for connection in self.establishedConnections.values {
    |                               `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
182 |                 if connection.status == .connected {
183 |                     self.performSendData(data, to: connection)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:194:33: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
192 |         
193 |         connectionQueue.async {
194 |             if let connection = self.establishedConnections[deviceId] {
    |                                 `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer' in a '@Sendable' closure [#SendableClosureCaptures]
195 |                 self.closeConnection(connection)
196 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:262:13: error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
260 |         networkMonitor = NWPathMonitor()
261 |         networkMonitor?.pathUpdateHandler = { [weak self] path in
262 |             self?.handleNetworkPathUpdate(path)
    |             `- error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
263 |         }
264 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:39:25: error: 'STUNServer' is ambiguous for type lookup in this context
 37 |     // MARK: - ÂàùÂßãÂåñ
 38 |     
 39 |     public init(server: STUNServer) {
    |                         `- error: 'STUNServer' is ambiguous for type lookup in this context
 40 |         self.server = server
 41 |         self.networkQueue = DispatchQueue(label: "com.skybridge.stun.client", qos: .userInitiated)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:35:57: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 33 |     // MARK: - ÂàùÂßãÂåñ
 34 |     
 35 |     public init(stunClient: STUNClient?, configuration: P2PNetworkConfiguration) {
    |                                                         `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 36 |         self.stunClient = stunClient
 37 |         self.configuration = configuration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: note: found this candidate
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:295:13: error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
293 |         
294 |         udpListener?.newConnectionHandler = { [weak self] connection in
295 |             self?.handleNewUDPConnection(connection)
    |             `- error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
296 |         }
297 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:311:13: error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
309 |         
310 |         tcpListener?.newConnectionHandler = { [weak self] connection in
311 |             self?.handleNewTCPConnection(connection)
    |             `- error: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
312 |         }
313 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:380:35: warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
378 |                 
379 |                 if result == 0 {
380 |                     let address = String(cString: hostname)
    |                                   `- warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
381 |                     addresses.append(address)
382 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:427:81: error: cannot infer contextual base in reference to member 'udp'
425 |             case .success(let endpoint):
426 |                 print("‚úÖ NATÁ©øÈÄèÊàêÂäüÔºåÁ´ØÁÇπ: \(endpoint)")
427 |                 self?.establishConnection(to: device, via: endpoint, protocol: .udp)
    |                                                                                 `- error: cannot infer contextual base in reference to member 'udp'
428 |                 
429 |             case .failure(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:441:32: error: value of type 'P2PDevice' has no member 'endpoints'
439 |         
440 |         // Â∞ùËØïÂ∑≤Áü•ÁöÑËÆæÂ§áÁ´ØÁÇπ
441 |         for endpoint in device.endpoints {
    |                                `- error: value of type 'P2PDevice' has no member 'endpoints'
442 |             if preferredProtocol == .udp {
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:443:75: error: cannot infer contextual base in reference to member 'udp'
441 |         for endpoint in device.endpoints {
442 |             if preferredProtocol == .udp {
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)
    |                                                                           `- error: cannot infer contextual base in reference to member 'udp'
444 |             } else {
445 |                 establishConnection(to: device, via: endpoint, protocol: .tcp)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:445:75: error: cannot infer contextual base in reference to member 'tcp'
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)
444 |             } else {
445 |                 establishConnection(to: device, via: endpoint, protocol: .tcp)
    |                                                                           `- error: cannot infer contextual base in reference to member 'tcp'
446 |             }
447 |             

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:453:88: error: cannot infer contextual base in reference to member 'tcp'
451 |                     if self.pendingConnections[device.id] != nil {
452 |                         print("üîÑ UDPËøûÊé•Ë∂ÖÊó∂ÔºåÂ∞ùËØïTCP fallback")
453 |                         self.establishConnection(to: device, via: endpoint, protocol: .tcp)
    |                                                                                        `- error: cannot infer contextual base in reference to member 'tcp'
454 |                     }
455 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:462:28: error: missing argument for parameter #1 in call
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
    |                     `- error: missing argument for parameter #1 in call
463 |         
464 |         let parameters: NWParameters

Swift.DefaultStringInterpolation.appendInterpolation:2:22: note: 'appendInterpolation' declared here
1 | struct DefaultStringInterpolation {
2 | public mutating func appendInterpolation(_ value: any Any.Type)}
  |                      `- note: 'appendInterpolation' declared here
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:477:24: error: extra argument 'id' in call
475 |         
476 |         let connection = P2PConnection(
477 |             id: UUID().uuidString,
    |                        `- error: extra argument 'id' in call
478 |             device: device,
479 |             nwConnection: nwConnection,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:478:27: error: missing argument for parameter 'securityManager' in call
476 |         let connection = P2PConnection(
477 |             id: UUID().uuidString,
478 |             device: device,
    |                           `- error: missing argument for parameter 'securityManager' in call
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:522:20: error: value of type 'P2PConnection' has no member 'state'
520 |         
521 |         // Êõ¥Êñ∞ËøûÊé•Áä∂ÊÄÅ
522 |         connection.state = .connected
    |                    `- error: value of type 'P2PConnection' has no member 'state'
523 |         connection.connectedAt = Date()
524 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:522:29: error: cannot infer contextual base in reference to member 'connected'
520 |         
521 |         // Êõ¥Êñ∞ËøûÊé•Áä∂ÊÄÅ
522 |         connection.state = .connected
    |                             `- error: cannot infer contextual base in reference to member 'connected'
523 |         connection.connectedAt = Date()
524 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:523:20: error: value of type 'P2PConnection' has no member 'connectedAt'
521 |         // Êõ¥Êñ∞ËøûÊé•Áä∂ÊÄÅ
522 |         connection.state = .connected
523 |         connection.connectedAt = Date()
    |                    `- error: value of type 'P2PConnection' has no member 'connectedAt'
524 |         
525 |         // Ê∑ªÂä†Âà∞Â∑≤Âª∫Á´ãËøûÊé•

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:553:27: error: value of type 'P2PConnection' has no member 'protocol'
551 |         if let pendingConnection = pendingConnections[deviceId] {
552 |             // Â¶ÇÊûúÊòØUDPËøûÊé•Â§±Ë¥•ÔºåÂ∞ùËØïTCP fallback
553 |             if connection.protocol == .udp {
    |                           `- error: value of type 'P2PConnection' has no member 'protocol'
554 |                 print("üîÑ UDPËøûÊé•Â§±Ë¥•ÔºåÂ∞ùËØïTCP fallback")
555 |                 attemptDirectConnection(to: pendingConnection.device)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:20: error: value of type 'P2PConnection' has no member 'nwConnection'
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                    `- error: value of type 'P2PConnection' has no member 'nwConnection'
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:105: error: cannot infer type of closure parameter 'data' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                         `- error: cannot infer type of closure parameter 'data' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:111: error: cannot infer type of closure parameter '_' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                               `- error: cannot infer type of closure parameter '_' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:114: error: cannot infer type of closure parameter 'isComplete' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                                  `- error: cannot infer type of closure parameter 'isComplete' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:586:126: error: cannot infer type of closure parameter 'error' without a type annotation
584 |     /// ËÆæÁΩÆÊï∞ÊçÆÊé•Êî∂
585 |     private func setupDataReceiving(for connection: P2PConnection) {
586 |         connection.nwConnection.receive(minimumIncompleteLength: 1, maximumLength: 65536) { [weak self] data, _, isComplete, error in
    |                                                                                                                              `- error: cannot infer type of closure parameter 'error' without a type annotation
587 |             
588 |             if let error = error {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:618:20: error: value of type 'P2PConnection' has no member 'nwConnection'
616 |     /// ÊâßË°åÊï∞ÊçÆÂèëÈÄÅ
617 |     private func performSendData(_ data: Data, to connection: P2PConnection) {
618 |         connection.nwConnection.send(content: data, completion: .contentProcessed { [weak self] error in
    |                    `- error: value of type 'P2PConnection' has no member 'nwConnection'
619 |             if let error = error {
620 |                 print("‚ùå Êï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:618:66: error: cannot infer contextual base in reference to member 'contentProcessed'
616 |     /// ÊâßË°åÊï∞ÊçÆÂèëÈÄÅ
617 |     private func performSendData(_ data: Data, to connection: P2PConnection) {
618 |         connection.nwConnection.send(content: data, completion: .contentProcessed { [weak self] error in
    |                                                                  `- error: cannot infer contextual base in reference to member 'contentProcessed'
619 |             if let error = error {
620 |                 print("‚ùå Êï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:618:97: error: cannot infer type of closure parameter 'error' without a type annotation
616 |     /// ÊâßË°åÊï∞ÊçÆÂèëÈÄÅ
617 |     private func performSendData(_ data: Data, to connection: P2PConnection) {
618 |         connection.nwConnection.send(content: data, completion: .contentProcessed { [weak self] error in
    |                                                                                                 `- error: cannot infer type of closure parameter 'error' without a type annotation
619 |             if let error = error {
620 |                 print("‚ùå Êï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:21: error: no exact matches in call to initializer 
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                     |- error: no exact matches in call to initializer 
    |                     `- note: candidate has partially matching parameter list (from: any Decoder)
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:273:12: note: candidate has partially matching parameter list (from: P2PDeviceInfo)
271 |     public var deviceType: P2PDeviceType { return type }
272 |     
273 |     public init(from deviceInfo: P2PDeviceInfo) {
    |            `- note: candidate has partially matching parameter list (from: P2PDeviceInfo)
274 |         self.id = deviceInfo.id
275 |         self.name = deviceInfo.name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:638:43: error: extra arguments at positions #1, #4, #5 in call
636 |         
637 |         // ÂàõÂª∫‰∏¥Êó∂ËøûÊé•ÂØπË±°Â§ÑÁêÜÊè°Êâã
638 |         let tempConnection = P2PConnection(
    |                                           `- error: extra arguments at positions #1, #4, #5 in call
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:93: error: missing argument for parameter 'securityManager' in call
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                                             `- error: missing argument for parameter 'securityManager' in call
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:70: error: cannot infer contextual base in reference to member 'unknown'
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                      `- error: cannot infer contextual base in reference to member 'unknown'
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:642:24: error: cannot infer contextual base in reference to member 'udp'
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,
    |                        `- error: cannot infer contextual base in reference to member 'udp'
643 |             endpoint: nwConnection.endpoint
644 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:21: error: no exact matches in call to initializer 
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                     |- error: no exact matches in call to initializer 
    |                     `- note: candidate has partially matching parameter list (from: any Decoder)
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:273:12: note: candidate has partially matching parameter list (from: P2PDeviceInfo)
271 |     public var deviceType: P2PDeviceType { return type }
272 |     
273 |     public init(from deviceInfo: P2PDeviceInfo) {
    |            `- note: candidate has partially matching parameter list (from: P2PDeviceInfo)
274 |         self.id = deviceInfo.id
275 |         self.name = deviceInfo.name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:657:43: error: extra arguments at positions #1, #4, #5 in call
655 |         
656 |         // ÂàõÂª∫‰∏¥Êó∂ËøûÊé•ÂØπË±°Â§ÑÁêÜÊè°Êâã
657 |         let tempConnection = P2PConnection(
    |                                           `- error: extra arguments at positions #1, #4, #5 in call
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:93: error: missing argument for parameter 'securityManager' in call
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                                             `- error: missing argument for parameter 'securityManager' in call
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:70: error: cannot infer contextual base in reference to member 'unknown'
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                      `- error: cannot infer contextual base in reference to member 'unknown'
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:661:24: error: cannot infer contextual base in reference to member 'tcp'
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,
    |                        `- error: cannot infer contextual base in reference to member 'tcp'
662 |             endpoint: nwConnection.endpoint
663 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:690:20: error: value of type 'P2PConnection' has no member 'nwConnection'
688 |         print("üîå ÂÖ≥Èó≠ËøûÊé•: \(connection.device.name)")
689 |         
690 |         connection.nwConnection.cancel()
    |                    `- error: value of type 'P2PConnection' has no member 'nwConnection'
691 |         connection.state = .disconnected
692 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:691:20: error: value of type 'P2PConnection' has no member 'state'
689 |         
690 |         connection.nwConnection.cancel()
691 |         connection.state = .disconnected
    |                    `- error: value of type 'P2PConnection' has no member 'state'
692 |         
693 |         establishedConnections.removeValue(forKey: connection.device.id)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:691:29: error: cannot infer contextual base in reference to member 'disconnected'
689 |         
690 |         connection.nwConnection.cancel()
691 |         connection.state = .disconnected
    |                             `- error: cannot infer contextual base in reference to member 'disconnected'
692 |         
693 |         establishedConnections.removeValue(forKey: connection.device.id)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:735:17: warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
  6 | 
  7 | /// P2PÁΩëÁªúÈÄö‰ø°Â±Ç - ÂÆûÁé∞NATÁ©øÈÄè„ÄÅUDPÊâìÊ¥ûÂíåTCP fallbackÊú∫Âà∂
  8 | public class P2PNetworkLayer: ObservableObject {
    |              `- note: class 'P2PNetworkLayer' does not conform to the 'Sendable' protocol
  9 |     
 10 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
733 |         statisticsTimer = Timer.scheduledTimer(withTimeInterval: 1.0, repeats: true) { [weak self] _ in
734 |             Task { @MainActor in
735 |                 self?.updateNetworkStatistics()
    |                 `- warning: capture of 'self' with non-Sendable type 'P2PNetworkLayer?' in a '@Sendable' closure [#SendableClosureCaptures]
736 |             }
737 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:771:24: error: value of type 'P2PConnection' has no member 'connectedAt'
769 |         let currentTime = Date()
770 |         let totalUptime = connections.compactMap { connection in
771 |             connection.connectedAt?.timeIntervalSince(currentTime)
    |                        `- error: value of type 'P2PConnection' has no member 'connectedAt'
772 |         }.reduce(0, +)
773 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:53:17: warning: no 'async' operations occur within 'await' expression
 51 |         
 52 |         do {
 53 |             try await discoveryService.startDiscovery()
    |                 `- warning: no 'async' operations occur within 'await' expression
 54 |             
 55 |             // ÁõëÂê¨ÂèëÁé∞ÁöÑËÆæÂ§á

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:53:13: warning: no calls to throwing functions occur within 'try' expression
 51 |         
 52 |         do {
 53 |             try await discoveryService.startDiscovery()
    |             `- warning: no calls to throwing functions occur within 'try' expression
 54 |             
 55 |             // ÁõëÂê¨ÂèëÁé∞ÁöÑËÆæÂ§á

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:66:11: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
 64 |             startDiscoveryTimer()
 65 |             
 66 |         } catch {
    |           `- warning: 'catch' block is unreachable because no errors are thrown in 'do' block
 67 |             print("ÂêØÂä®ËÆæÂ§áÂèëÁé∞Â§±Ë¥•: \(error)")
 68 |             networkState = .disconnected

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:96:23: warning: value 'self' was defined but never used; consider replacing with boolean test [#no-usage]
 94 |         // Âª∫Á´ãËøûÊé•
 95 |         networkLayer.connectToDevice(device) { [weak self] connection in
 96 |             guard let self = self else { return }
    |                       `- warning: value 'self' was defined but never used; consider replacing with boolean test [#no-usage]
 97 |             
 98 |             // ËÆ§ËØÅËøûÊé•

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:117:22: error: 'closeConnection' is inaccessible due to 'private' protection level
115 |         
116 |         // ÂÖ≥Èó≠ËøûÊé•
117 |         networkLayer.closeConnection(connection)
    |                      `- error: 'closeConnection' is inaccessible due to 'private' protection level
118 |         
119 |         // ÁßªÈô§Ê¥ªË∑ÉËøûÊé•

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:687:18: note: 'closeConnection' declared here
685 |     
686 |     /// ÂÖ≥Èó≠Âçï‰∏™ËøûÊé•
687 |     private func closeConnection(_ connection: P2PConnection) {
    |                  `- note: 'closeConnection' declared here
688 |         print("üîå ÂÖ≥Èó≠ËøûÊé•: \(connection.device.name)")
689 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:154:29: error: type 'P2PNetworkState' has no member 'scanning'
152 |             networkState = .disconnected
153 |         case .listening:
154 |             networkState = .scanning
    |                             `- error: type 'P2PNetworkState' has no member 'scanning'
155 |         }
156 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:146:9: error: switch must be exhaustive
144 |     
145 |     private func handleNetworkStateChange(_ state: P2PConnectionStatus) {
146 |         switch state {
    |         |- error: switch must be exhaustive
    |         |- note: add missing case: '.authenticating'
    |         |- note: add missing case: '.authenticated'
    |         |- note: add missing case: '.networkUnavailable'
    |         `- note: add missing cases
147 |         case .connected:
148 |             networkState = .connected

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:181:50: error: extra arguments at positions #1, #5 in call
179 |     private func updateNetworkQuality() async {
180 |         guard !activeConnections.isEmpty else {
181 |             networkQuality = P2PConnectionQuality(
    |                                                  `- error: extra arguments at positions #1, #5 in call
182 |                 signalStrength: 0.0,
183 |                 latency: 0.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:184:31: error: missing argument for parameter 'stabilityScore' in call
182 |                 signalStrength: 0.0,
183 |                 latency: 0.0,
184 |                 bandwidth: 0.0,
    |                               `- error: missing argument for parameter 'stabilityScore' in call
185 |                 packetLoss: 0.0,
186 |                 level: .poor

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:184:28: error: cannot convert value of type 'Double' to expected argument type 'UInt64'
182 |                 signalStrength: 0.0,
183 |                 latency: 0.0,
184 |                 bandwidth: 0.0,
    |                            `- error: cannot convert value of type 'Double' to expected argument type 'UInt64'
185 |                 packetLoss: 0.0,
186 |                 level: .poor

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:186:25: error: cannot infer contextual base in reference to member 'poor'
184 |                 bandwidth: 0.0,
185 |                 packetLoss: 0.0,
186 |                 level: .poor
    |                         `- error: cannot infer contextual base in reference to member 'poor'
187 |             )
188 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:193:62: error: value of type 'P2PConnectionQuality' has no member 'signalStrength'
191 |         // ËÆ°ÁÆóÂπ≥ÂùáÁΩëÁªúË¥®Èáè
192 |         let connections = Array(activeConnections.values)
193 |         let avgSignalStrength = connections.map { $0.quality.signalStrength }.reduce(0, +) / Double(connections.count)
    |                                                              `- error: value of type 'P2PConnectionQuality' has no member 'signalStrength'
194 |         let avgLatency = connections.map { $0.quality.latency }.reduce(0, +) / Double(connections.count)
195 |         let avgBandwidth = connections.map { $0.quality.bandwidth }.reduce(0, +) / Double(connections.count)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:195:57: error: cannot convert value of type 'UInt64' to closure result type 'Double'
193 |         let avgSignalStrength = connections.map { $0.quality.signalStrength }.reduce(0, +) / Double(connections.count)
194 |         let avgLatency = connections.map { $0.quality.latency }.reduce(0, +) / Double(connections.count)
195 |         let avgBandwidth = connections.map { $0.quality.bandwidth }.reduce(0, +) / Double(connections.count)
    |                                                         `- error: cannot convert value of type 'UInt64' to closure result type 'Double'
196 |         let avgPacketLoss = connections.map { $0.quality.packetLoss }.reduce(0, +) / Double(connections.count)
197 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:209:46: error: extra arguments at positions #1, #5 in call
207 |         }
208 |         
209 |         networkQuality = P2PConnectionQuality(
    |                                              `- error: extra arguments at positions #1, #5 in call
210 |             signalStrength: avgSignalStrength,
211 |             latency: avgLatency,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:212:36: error: missing argument for parameter 'stabilityScore' in call
210 |             signalStrength: avgSignalStrength,
211 |             latency: avgLatency,
212 |             bandwidth: avgBandwidth,
    |                                    `- error: missing argument for parameter 'stabilityScore' in call
213 |             packetLoss: avgPacketLoss,
214 |             level: level

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:220:20: error: value of type 'P2PConnection' has no member 'statusPublisher'
218 |     private func monitorConnection(_ connection: P2PConnection) {
219 |         // ÁõëÂê¨ËøûÊé•Áä∂ÊÄÅÂèòÂåñ
220 |         connection.statusPublisher
    |                    `- error: value of type 'P2PConnection' has no member 'statusPublisher'
221 |             .receive(on: DispatchQueue.main)
222 |             .sink { [weak self] status in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:232:62: error: value of type 'P2PConnection' has no member 'remoteDevice'
230 |         case .disconnected, .failed:
231 |             // ËøûÊé•Êñ≠ÂºÄÔºå‰ªéÊ¥ªË∑ÉËøûÊé•‰∏≠ÁßªÈô§
232 |             activeConnections.removeValue(forKey: connection.remoteDevice.deviceId)
    |                                                              `- error: value of type 'P2PConnection' has no member 'remoteDevice'
233 |             
234 |             // Â¶ÇÊûúÊ≤°ÊúâÊ¥ªË∑ÉËøûÊé•ÔºåÊõ¥Êñ∞ÁΩëÁªúÁä∂ÊÄÅ

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:265:26: error: 'closeConnection' is inaccessible due to 'private' protection level
263 |         // ÂÖ≥Èó≠ÊâÄÊúâÊ¥ªË∑ÉËøûÊé•
264 |         for connection in activeConnections.values {
265 |             networkLayer.closeConnection(connection)
    |                          `- error: 'closeConnection' is inaccessible due to 'private' protection level
266 |         }
267 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:687:18: note: 'closeConnection' declared here
685 |     
686 |     /// ÂÖ≥Èó≠Âçï‰∏™ËøûÊé•
687 |     private func closeConnection(_ connection: P2PConnection) {
    |                  `- note: 'closeConnection' declared here
688 |         print("üîå ÂÖ≥Èó≠ËøûÊé•: \(connection.device.name)")
689 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:260:9: error: call to main actor-isolated instance method 'stopDiscovery()' in a synchronous nonisolated context [#ActorIsolatedCall]
 71 |     
 72 |     /// ÂÅúÊ≠¢ËÆæÂ§áÂèëÁé∞
 73 |     public func stopDiscovery() {
    |                 `- note: calls to instance method 'stopDiscovery()' from outside of its actor context are implicitly asynchronous
 74 |         discoveryService.stopDiscovery()
 75 |         stopDiscoveryTimer()
    :
258 |     
259 |     deinit {
260 |         stopDiscovery()
    |         `- error: call to main actor-isolated instance method 'stopDiscovery()' in a synchronous nonisolated context [#ActorIsolatedCall]
261 |         qualityMonitorTimer?.invalidate()
262 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:264:27: error: main actor-isolated property 'activeConnections' can not be referenced from a nonisolated context
 14 |     
 15 |     @Published public var discoveredDevices: [P2PDevice] = []
 16 |     @Published public var activeConnections: [String: P2PConnection] = [:]
    |                           `- note: property declared here
 17 |     @Published public var connectionHistory: [P2PDevice] = []
 18 |     @Published public var networkState: P2PNetworkState = .disconnected
    :
262 |         
263 |         // ÂÖ≥Èó≠ÊâÄÊúâÊ¥ªË∑ÉËøûÊé•
264 |         for connection in activeConnections.values {
    |                           `- error: main actor-isolated property 'activeConnections' can not be referenced from a nonisolated context
265 |             networkLayer.closeConnection(connection)
266 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:284:44: error: cannot convert value of type 'UInt64' to expected argument type 'Double'
282 |             historyConnectionsCount: connectionHistory.count,
283 |             averageLatency: networkQuality.latency,
284 |             totalBandwidth: networkQuality.bandwidth
    |                                            `- error: cannot convert value of type 'UInt64' to expected argument type 'Double'
285 |         )
286 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:306:22: error: extra arguments at positions #1, #3, #6 in call
304 |     public func addMockDevices() {
305 |         let mockDevices = [
306 |             P2PDevice(
    |                      `- error: extra arguments at positions #1, #3, #6 in call
307 |                 deviceId: "mock-mac-1",
308 |                 name: "MacBook Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:306:22: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
304 |     public func addMockDevices() {
305 |         let mockDevices = [
306 |             P2PDevice(
    |                      `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
307 |                 deviceId: "mock-mac-1",
308 |                 name: "MacBook Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:309:30: error: cannot infer contextual base in reference to member 'mac'
307 |                 deviceId: "mock-mac-1",
308 |                 name: "MacBook Pro",
309 |                 deviceType: .mac,
    |                              `- error: cannot infer contextual base in reference to member 'mac'
310 |                 ipAddress: "192.168.1.100",
311 |                 port: 8080,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:316:22: error: extra arguments at positions #1, #3, #6 in call
314 |                 lastSeen: Date()
315 |             ),
316 |             P2PDevice(
    |                      `- error: extra arguments at positions #1, #3, #6 in call
317 |                 deviceId: "mock-iphone-1",
318 |                 name: "iPhone 15 Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:316:22: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
314 |                 lastSeen: Date()
315 |             ),
316 |             P2PDevice(
    |                      `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
317 |                 deviceId: "mock-iphone-1",
318 |                 name: "iPhone 15 Pro",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:319:30: error: cannot infer contextual base in reference to member 'iPhone'
317 |                 deviceId: "mock-iphone-1",
318 |                 name: "iPhone 15 Pro",
319 |                 deviceType: .iPhone,
    |                              `- error: cannot infer contextual base in reference to member 'iPhone'
320 |                 ipAddress: "192.168.1.101",
321 |                 port: 8081,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:326:22: error: extra arguments at positions #1, #3, #6 in call
324 |                 lastSeen: Date().addingTimeInterval(-300)
325 |             ),
326 |             P2PDevice(
    |                      `- error: extra arguments at positions #1, #3, #6 in call
327 |                 deviceId: "mock-windows-1",
328 |                 name: "Windows PC",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:326:22: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
324 |                 lastSeen: Date().addingTimeInterval(-300)
325 |             ),
326 |             P2PDevice(
    |                      `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
327 |                 deviceId: "mock-windows-1",
328 |                 name: "Windows PC",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:285:12: note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:329:30: error: cannot infer contextual base in reference to member 'windows'
327 |                 deviceId: "mock-windows-1",
328 |                 name: "Windows PC",
329 |                 deviceType: .windows,
    |                              `- error: cannot infer contextual base in reference to member 'windows'
330 |                 ipAddress: "192.168.1.102",
331 |                 port: 8082,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:141:30: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                              `- error: 'STUNServer' is ambiguous for type lookup in this context
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:151:19: error: 'P2PProtocol' is ambiguous for type lookup in this context
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"
    :
149 |     public init(
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
    |                   `- error: 'P2PProtocol' is ambiguous for type lookup in this context
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
153 |         connectionTimeout: TimeInterval = 30.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: note: found this candidate
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:152:23: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
    |                       `- error: 'STUNServer' is ambiguous for type lookup in this context
153 |         connectionTimeout: TimeInterval = 30.0,
154 |         heartbeatInterval: TimeInterval = 10.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: error: invalid redeclaration of 'P2PNetworkConfiguration'
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- error: invalid redeclaration of 'P2PNetworkConfiguration'
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:66:61: error: 'NATType' is ambiguous for type lookup in this context
 64 |     
 65 |     /// Ê£ÄÊµãNATÁ±ªÂûã
 66 |     public func detectNATType(completion: @escaping (Result<NATType, STUNError>) -> Void) {
    |                                                             `- error: 'NATType' is ambiguous for type lookup in this context
 67 |         print("üîç ÂºÄÂßãÊ£ÄÊµãNATÁ±ªÂûã")
 68 |         
    :
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:183:72: error: 'NATType' is ambiguous for type lookup in this context
181 |     
182 |     /// ÊâßË°åNATÁ±ªÂûãÊ£ÄÊµã
183 |     private func performNATTypeDetection(completion: @escaping (Result<NATType, STUNError>) -> Void) {
    |                                                                        `- error: 'NATType' is ambiguous for type lookup in this context
184 |         // NATÁ±ªÂûãÊ£ÄÊµãÈúÄË¶ÅÂ§ö‰∏™STUNËØ∑Ê±Ç
185 |         // ËøôÈáåÂÆûÁé∞ÁÆÄÂåñÁâàÊú¨ÔºåÂÆûÈôÖÂ∫îÁî®‰∏≠ÈúÄË¶ÅÊõ¥Â§çÊùÇÁöÑÊ£ÄÊµãÈÄªËæë
    :
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:360:37: error: 'TraversalDifficulty' is ambiguous for type lookup in this context
358 |     
359 |     /// NATÁ©øÈÄèÈöæÂ∫¶
360 |     public var traversalDifficulty: TraversalDifficulty {
    |                                     `- error: 'TraversalDifficulty' is ambiguous for type lookup in this context
361 |         switch self {
362 |         case .noNAT, .fullCone:
    :
373 | 
374 | /// Á©øÈÄèÈöæÂ∫¶
375 | public enum TraversalDifficulty: String, CaseIterable {
    |             `- note: found this candidate
376 |     case easy = "ÁÆÄÂçï"
377 |     case medium = "‰∏≠Á≠â"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:61:13: note: found this candidate
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- note: found this candidate
 62 |     case easy = "easy"
 63 |     case medium = "medium"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:347:13: error: invalid redeclaration of 'NATType'
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- error: invalid redeclaration of 'NATType'
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:375:13: error: invalid redeclaration of 'TraversalDifficulty'
373 | 
374 | /// Á©øÈÄèÈöæÂ∫¶
375 | public enum TraversalDifficulty: String, CaseIterable {
    |             `- error: invalid redeclaration of 'TraversalDifficulty'
376 |     case easy = "ÁÆÄÂçï"
377 |     case medium = "‰∏≠Á≠â"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:40:14: error: value of type 'STUNClient' has no member 'server'
 38 |     
 39 |     public init(server: STUNServer) {
 40 |         self.server = server
    |              `- error: value of type 'STUNClient' has no member 'server'
 41 |         self.networkQueue = DispatchQueue(label: "com.skybridge.stun.client", qos: .userInitiated)
 42 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:57:13: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
 55 |         
 56 |         networkQueue.async {
 57 |             self.performSTUNBinding { result in
    |             `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
 58 |                 DispatchQueue.main.async {
 59 |                     completion(result)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:59:21: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
 57 |             self.performSTUNBinding { result in
 58 |                 DispatchQueue.main.async {
 59 |                     completion(result)
    |                     |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 60 |                 }
 61 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:59:21: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in an isolated closure
 57 |             self.performSTUNBinding { result in
 58 |                 DispatchQueue.main.async {
 59 |                     completion(result)
    |                     |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in an isolated closure
    |                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 60 |                 }
 61 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:81:13: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
 79 |     public func disconnect() {
 80 |         networkQueue.async {
 81 |             self.udpConnection?.cancel()
    |             `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |             self.udpConnection = nil
 83 |             print("üîå STUNÂÆ¢Êà∑Á´ØÂ∑≤Êñ≠ÂºÄËøûÊé•")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:93:35: error: cannot find 'server' in scope
 91 |         // ÂàõÂª∫UDPËøûÊé•Âà∞STUNÊúçÂä°Âô®
 92 |         let endpoint = NWEndpoint.hostPort(
 93 |             host: NWEndpoint.Host(server.host),
    |                                   `- error: cannot find 'server' in scope
 94 |             port: NWEndpoint.Port(integerLiteral: server.port)
 95 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:94:51: error: cannot find 'server' in scope
 92 |         let endpoint = NWEndpoint.hostPort(
 93 |             host: NWEndpoint.Host(server.host),
 94 |             port: NWEndpoint.Port(integerLiteral: server.port)
    |                                                   `- error: cannot find 'server' in scope
 95 |         )
 96 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:104:17: error: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
102 |             case .ready:
103 |                 print("‚úÖ STUNËøûÊé•Â∑≤Âª∫Á´ã")
104 |                 self.sendBindingRequest(completion: completion)
    |                 `- error: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
105 |                 
106 |             case .failed(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:104:53: error: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
102 |             case .ready:
103 |                 print("‚úÖ STUNËøûÊé•Â∑≤Âª∫Á´ã")
104 |                 self.sendBindingRequest(completion: completion)
    |                                                     |- error: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                                                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
105 |                 
106 |             case .failed(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:138:17: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
136 |             if let error = error {
137 |                 print("‚ùå STUNËØ∑Ê±ÇÂèëÈÄÅÂ§±Ë¥•: \(error)")
138 |                 completion(.failure(.requestFailed))
    |                 |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                 `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
139 |                 return
140 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:143:13: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
141 |             
142 |             // Êé•Êî∂ÂìçÂ∫î
143 |             self.receiveBindingResponse(
    |             `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
144 |                 expectedTransactionId: transactionId,
145 |                 completion: completion

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:158:17: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
156 |             if let error = error {
157 |                 print("‚ùå STUNÂìçÂ∫îÊé•Êî∂Â§±Ë¥•: \(error)")
158 |                 completion(.failure(.responseFailed))
    |                 |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, STUNError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                 `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
159 |                 return
160 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:172:36: warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
  3 | 
  4 | /// STUNÂÆ¢Êà∑Á´ØÔºåÁî®‰∫éNATÁ±ªÂûãÊ£ÄÊµãÂíåÂÖ¨ÁΩëIPËé∑Âèñ
  5 | public class STUNClient: ObservableObject {
    |              `- note: class 'STUNClient' does not conform to the 'Sendable' protocol
  6 |     
  7 |     // MARK: - Â±ûÊÄß
    :
170 |             // Ëß£ÊûêSTUNÂìçÂ∫î
171 |             do {
172 |                 let endpoint = try self.parseBindingResponse(data, expectedTransactionId: expectedTransactionId)
    |                                    `- warning: capture of 'self' with non-Sendable type 'STUNClient' in a '@Sendable' closure [#SendableClosureCaptures]
173 |                 print("‚úÖ Ëß£ÊûêÂà∞ÂÖ¨ÁΩëÁ´ØÁÇπ: \(endpoint)")
174 |                 completion(.success(endpoint))

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:192:29: error: cannot infer contextual base in reference to member 'success'
190 |                 // ÁÆÄÂåñÁöÑNATÁ±ªÂûãÂà§Êñ≠
191 |                 // ÂÆûÈôÖÂÆûÁé∞ÈúÄË¶ÅÂ§öÊ¨°ÊµãËØï‰∏çÂêåÁöÑSTUNÊúçÂä°Âô®ÂíåÁ´ØÂè£
192 |                 completion(.success(.fullCone))
    |                             `- error: cannot infer contextual base in reference to member 'success'
193 |                 
194 |             case .failure(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:192:38: error: cannot infer contextual base in reference to member 'fullCone'
190 |                 // ÁÆÄÂåñÁöÑNATÁ±ªÂûãÂà§Êñ≠
191 |                 // ÂÆûÈôÖÂÆûÁé∞ÈúÄË¶ÅÂ§öÊ¨°ÊµãËØï‰∏çÂêåÁöÑSTUNÊúçÂä°Âô®ÂíåÁ´ØÂè£
192 |                 completion(.success(.fullCone))
    |                                      `- error: cannot infer contextual base in reference to member 'fullCone'
193 |                 
194 |             case .failure(let error):

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#DeprecatedDeclaration]: <https://docs.swift.org/compiler/documentation/diagnostics/deprecated-declaration>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[124/160] Compiling SkyBridgeCore P2PConnectionView.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:35:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 33 |             }
 34 |             .navigationTitle("SkyBridge ËøúÁ®ãËøûÊé•")
 35 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 36 |             .toolbar {
 37 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:37:41: error: 'navigationBarTrailing' is unavailable in macOS
 35 |             .navigationBarTitleDisplayMode(.large)
 36 |             .toolbar {
 37 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
 38 |                     Button(action: { showingSecuritySettings = true }) {
 39 |                         Image(systemName: "shield.checkered")

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:113:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
111 |         }
112 |         .padding()
113 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
114 |     }
115 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:146:20: error: 'InsetGroupedListStyle' is unavailable in macOS
144 |             }
145 |         }
146 |         .listStyle(InsetGroupedListStyle())
    |                    `- error: 'InsetGroupedListStyle' is unavailable in macOS
147 |         .refreshable {
148 |             await refreshDeviceList()

SwiftUI.InsetGroupedListStyle:5:15: note: 'InsetGroupedListStyle' has been explicitly marked unavailable here
3 | @available(tvOS, unavailable)
4 | @available(watchOS, unavailable)
5 | public struct InsetGroupedListStyle : ListStyle {
  |               `- note: 'InsetGroupedListStyle' has been explicitly marked unavailable here
6 |     public init()
7 |     nonisolated public static func _makeView<SelectionValue>(value: _GraphValue<_ListValue<InsetGroupedListStyle, SelectionValue>>, inputs: _ViewInputs) -> _ViewOutputs where SelectionValue : Hashable

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:201:28: error: reference to member 'systemBackground' cannot be resolved without a contextual type
199 |         }
200 |         .padding(.vertical, 8)
201 |         .background(Color(.systemBackground))
    |                            `- error: reference to member 'systemBackground' cannot be resolved without a contextual type
202 |         .overlay(
203 |             Rectangle()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:205:34: error: initializer 'init(_:)' requires the types 'SeparatorShapeStyle.Resolved' (aka 'Never') and 'Color.Resolved' be equivalent
203 |             Rectangle()
204 |                 .frame(height: 0.5)
205 |                 .foregroundColor(Color(.separator)),
    |                                  `- error: initializer 'init(_:)' requires the types 'SeparatorShapeStyle.Resolved' (aka 'Never') and 'Color.Resolved' be equivalent
206 |             alignment: .top
207 |         )

SwiftUI.Color.init:3:10: note: where 'T.Resolved' = 'SeparatorShapeStyle.Resolved' (aka 'Never')
1 | struct Color {
2 | @available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
3 |   public init<T>(_ color: T) where T : Hashable, T : ShapeStyle, T.Resolved == Color.Resolved}
  |          `- note: where 'T.Resolved' = 'SeparatorShapeStyle.Resolved' (aka 'Never')
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:205:34: error: initializer 'init(_:)' requires that 'SeparatorShapeStyle' conform to 'Hashable'
203 |             Rectangle()
204 |                 .frame(height: 0.5)
205 |                 .foregroundColor(Color(.separator)),
    |                                  `- error: initializer 'init(_:)' requires that 'SeparatorShapeStyle' conform to 'Hashable'
206 |             alignment: .top
207 |         )

SwiftUI.Color.init:3:10: note: where 'T' = 'SeparatorShapeStyle'
1 | struct Color {
2 | @available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
3 |   public init<T>(_ color: T) where T : Hashable, T : ShapeStyle, T.Resolved == Color.Resolved}
  |          `- note: where 'T' = 'SeparatorShapeStyle'
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:220:15: error: type 'P2PNetworkState' has no member 'scanning'
218 |         case .disconnected:
219 |             return .red
220 |         case .scanning:
    |               `- error: type 'P2PNetworkState' has no member 'scanning'
221 |             return .blue
222 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:233:15: error: type 'P2PNetworkState' has no member 'scanning'
231 |         case .disconnected:
232 |             return "ÁΩëÁªúÊú™ËøûÊé•"
233 |         case .scanning:
    |               `- error: type 'P2PNetworkState' has no member 'scanning'
234 |             return "Ê≠£Âú®Êâ´ÊèèËÆæÂ§á..."
235 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:262:58: error: missing arguments for parameters 'connectionEstablished', 'connectionFailed' in call
260 |         Task {
261 |             do {
262 |                 try await networkManager.connectToDevice(device)
    |                                                          `- error: missing arguments for parameters 'connectionEstablished', 'connectionFailed' in call
263 |                 showAlert("ËøûÊé•ÊàêÂäü", "Â∑≤ÊàêÂäüËøûÊé•Âà∞ \(device.name)")
264 |             } catch {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:87:17: note: 'connectToDevice(_:connectionEstablished:connectionFailed:)' declared here
 85 |     
 86 |     /// ËøûÊé•Âà∞ËÆæÂ§á
 87 |     public func connectToDevice(_ device: P2PDevice,
    |                 `- note: 'connectToDevice(_:connectionEstablished:connectionFailed:)' declared here
 88 |                                connectionEstablished: @escaping () -> Void,
 89 |                                connectionFailed: @escaping (Error) -> Void) {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:366:40: error: ambiguous use of 'displayName'
364 |                     .foregroundColor(.primary)
365 |                 
366 |                 Text(device.deviceType.displayName)
    |                                        `- error: ambiguous use of 'displayName'
367 |                     .font(.subheadline)
368 |                     .foregroundColor(.secondary)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:15:16: note: found this candidate 
 13 |     
 14 |     /// ËÆæÂ§áÁ±ªÂûãÊòæÁ§∫ÂêçÁß∞
 15 |     public var displayName: String {
    |                `- note: found this candidate 
 16 |         switch self {
 17 |         case .macOS: return "Mac"
    :
645 | extension P2PDeviceType {
646 |     /// ËÆæÂ§áÁ±ªÂûãÁöÑÊòæÁ§∫ÂêçÁß∞
647 |     public var displayName: String {
    |                `- note: found this candidate 
648 |         switch self {
649 |         case .mac:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:411:15: error: type 'P2PDeviceType' has no member 'mac'
409 |     private var deviceIcon: String {
410 |         switch device.deviceType {
411 |         case .mac:
    |               `- error: type 'P2PDeviceType' has no member 'mac'
412 |             return "desktopcomputer"
413 |         case .iPhone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:413:15: error: type 'P2PDeviceType' has no member 'iPhone'
411 |         case .mac:
412 |             return "desktopcomputer"
413 |         case .iPhone:
    |               `- error: type 'P2PDeviceType' has no member 'iPhone'
414 |             return "iphone"
415 |         case .iPad:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:415:15: error: type 'P2PDeviceType' has no member 'iPad'
413 |         case .iPhone:
414 |             return "iphone"
415 |         case .iPad:
    |               `- error: type 'P2PDeviceType' has no member 'iPad'
416 |             return "ipad"
417 |         case .windows:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:421:15: error: type 'P2PDeviceType' has no member 'unknown'
419 |         case .android:
420 |             return "smartphone"
421 |         case .unknown:
    |               `- error: type 'P2PDeviceType' has no member 'unknown'
422 |             return "questionmark.circle"
423 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:514:24: error: value of type 'P2PConnectionQuality' has no member 'level'
512 |     
513 |     private var qualityColor: Color {
514 |         switch quality.level {
    |                        `- error: value of type 'P2PConnectionQuality' has no member 'level'
515 |         case .excellent:
516 |             return .green

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:527:24: error: value of type 'P2PConnectionQuality' has no member 'level'
525 |     
526 |     private var qualityText: String {
527 |         switch quality.level {
    |                        `- error: value of type 'P2PConnectionQuality' has no member 'level'
528 |         case .excellent:
529 |             return "‰ºòÁßÄ"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:551:49: error: value of type 'P2PConnection' has no member 'remoteDevice'
549 |             
550 |             VStack(alignment: .leading, spacing: 2) {
551 |                 Text("Â∑≤ËøûÊé•Âà∞ \(connection.remoteDevice.name)")
    |                                         `- error: value of type 'P2PConnection' has no member 'remoteDevice'
552 |                     .font(.subheadline)
553 |                     .fontWeight(.medium)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:103:47: error: value of type 'P2PSecurityManager' has no dynamic member 'activeSecureConnections' using key path from root type 'P2PSecurityManager'
101 |                 SecurityStatView(
102 |                     title: "Ê¥ªË∑ÉËøûÊé•",
103 |                     value: "\(securityManager.activeSecureConnections.count)",
    |                                               `- error: value of type 'P2PSecurityManager' has no dynamic member 'activeSecureConnections' using key path from root type 'P2PSecurityManager'
104 |                     icon: "lock.shield"
105 |                 )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:103:31: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
101 |                 SecurityStatView(
102 |                     title: "Ê¥ªË∑ÉËøûÊé•",
103 |                     value: "\(securityManager.activeSecureConnections.count)",
    |                               `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
104 |                     icon: "lock.shield"
105 |                 )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:122:9: error: generic parameter 'R' could not be inferred
120 |     
121 |     private var trustedDevicesSection: some View {
122 |         Group {
    |         `- error: generic parameter 'R' could not be inferred
123 |             if securityManager.trustedDevices.isEmpty {
124 |                 HStack {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:122:9: error: generic parameter 'C' could not be inferred
120 |     
121 |     private var trustedDevicesSection: some View {
122 |         Group {
    |         `- error: generic parameter 'C' could not be inferred
123 |             if securityManager.trustedDevices.isEmpty {
124 |                 HStack {

SwiftUI.Group.init:2:31: note: in call to initializer
1 | generic struct Group {
2 | @inlinable nonisolated public init<R, C>(@TableColumnBuilder<R, C> content: () -> Content) where R == Content.TableRowValue, C == Content.TableColumnSortComparator}
  |                               `- note: in call to initializer
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:139:18: error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
137 |                     Spacer()
138 |                 }
139 |                 .padding(.vertical, 4)
    |                  `- error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
140 |             } else {
141 |                 ForEach(securityManager.trustedDevices, id: \.deviceId) { device in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:124:17: error: generic parameter 'Content' could not be inferred
122 |         Group {
123 |             if securityManager.trustedDevices.isEmpty {
124 |                 HStack {
    |                 `- error: generic parameter 'Content' could not be inferred
125 |                     Image(systemName: "shield.slash")
126 |                         .foregroundColor(.orange)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:124:17: error: generic parameter 'Label' could not be inferred
122 |         Group {
123 |             if securityManager.trustedDevices.isEmpty {
124 |                 HStack {
    |                 `- error: generic parameter 'Label' could not be inferred
125 |                     Image(systemName: "shield.slash")
126 |                         .foregroundColor(.orange)

SwiftUI.TableColumnBuilder.buildExpression:2:20: note: in call to function 'buildExpression'
1 | generic struct TableColumnBuilder {
2 | public static func buildExpression<Content, Label>(_ column: TableColumn<RowValue, Sort, Content, Label>) -> TableColumn<RowValue, Sort, Content, Label> where Content : View, Label : View}
  |                    `- note: in call to function 'buildExpression'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:260:35: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
258 |         if securityManager.trustedDevices.isEmpty {
259 |             return "ÈúÄË¶ÅÈÖçÁΩÆ‰ø°‰ªªËÆæÂ§á"
260 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
261 |             return "ÂÆâÂÖ®ÈÖçÁΩÆÊ≠£Â∏∏"
262 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:260:19: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
258 |         if securityManager.trustedDevices.isEmpty {
259 |             return "ÈúÄË¶ÅÈÖçÁΩÆ‰ø°‰ªªËÆæÂ§á"
260 |         } else if securityManager.hasValidCertificates {
    |                   `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
261 |             return "ÂÆâÂÖ®ÈÖçÁΩÆÊ≠£Â∏∏"
262 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:260:35: error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
258 |         if securityManager.trustedDevices.isEmpty {
259 |             return "ÈúÄË¶ÅÈÖçÁΩÆ‰ø°‰ªªËÆæÂ§á"
260 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
261 |             return "ÂÆâÂÖ®ÈÖçÁΩÆÊ≠£Â∏∏"
262 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:270:35: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
268 |         if securityManager.trustedDevices.isEmpty {
269 |             return .orange
270 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
271 |             return .green
272 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:270:19: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
268 |         if securityManager.trustedDevices.isEmpty {
269 |             return .orange
270 |         } else if securityManager.hasValidCertificates {
    |                   `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
271 |             return .green
272 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:270:35: error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
268 |         if securityManager.trustedDevices.isEmpty {
269 |             return .orange
270 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
271 |             return .green
272 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:280:35: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
278 |         if securityManager.trustedDevices.isEmpty {
279 |             return "shield.slash"
280 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
281 |             return "shield.checkered"
282 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:280:19: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
278 |         if securityManager.trustedDevices.isEmpty {
279 |             return "shield.slash"
280 |         } else if securityManager.hasValidCertificates {
    |                   `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
281 |             return "shield.checkered"
282 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:280:35: error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
278 |         if securityManager.trustedDevices.isEmpty {
279 |             return "shield.slash"
280 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
281 |             return "shield.checkered"
282 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:288:25: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
286 |     
287 |     private var certificateStatusText: String {
288 |         securityManager.hasValidCertificates ? "ÊúâÊïà" : "ËøáÊúü"
    |                         `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
289 |     }
290 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:288:9: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
286 |     
287 |     private var certificateStatusText: String {
288 |         securityManager.hasValidCertificates ? "ÊúâÊïà" : "ËøáÊúü"
    |         `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
289 |     }
290 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:288:25: error: cannot convert value of type 'Binding<Subject>' to expected condition type 'Bool'
286 |     
287 |     private var certificateStatusText: String {
288 |         securityManager.hasValidCertificates ? "ÊúâÊïà" : "ËøáÊúü"
    |                         `- error: cannot convert value of type 'Binding<Subject>' to expected condition type 'Bool'
289 |     }
290 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:308:35: error: value of type 'P2PSecurityManager' has no dynamic member 'regenerateKeys' using key path from root type 'P2PSecurityManager'
306 |     private func regenerateKeys() {
307 |         Task {
308 |             await securityManager.regenerateKeys()
    |                                   `- error: value of type 'P2PSecurityManager' has no dynamic member 'regenerateKeys' using key path from root type 'P2PSecurityManager'
309 |         }
310 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:308:19: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
306 |     private func regenerateKeys() {
307 |         Task {
308 |             await securityManager.regenerateKeys()
    |                   `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
309 |         }
310 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:308:35: error: cannot call value of non-function type 'Binding<Subject>'
306 |     private func regenerateKeys() {
307 |         Task {
308 |             await securityManager.regenerateKeys()
    |                                   `- error: cannot call value of non-function type 'Binding<Subject>'
309 |         }
310 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:317:25: error: cannot call value of non-function type 'Binding<Subject>'
315 |     
316 |     private func clearSecurityCache() {
317 |         securityManager.clearSecurityCache()
    |                         `- error: cannot call value of non-function type 'Binding<Subject>'
318 |     }
319 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:317:25: error: value of type 'P2PSecurityManager' has no dynamic member 'clearSecurityCache' using key path from root type 'P2PSecurityManager'
315 |     
316 |     private func clearSecurityCache() {
317 |         securityManager.clearSecurityCache()
    |                         `- error: value of type 'P2PSecurityManager' has no dynamic member 'clearSecurityCache' using key path from root type 'P2PSecurityManager'
318 |     }
319 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:317:9: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
315 |     
316 |     private func clearSecurityCache() {
317 |         securityManager.clearSecurityCache()
    |         `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
318 |     }
319 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:321:25: error: value of type 'P2PSecurityManager' has no dynamic member 'resetAllSecuritySettings' using key path from root type 'P2PSecurityManager'
319 |     
320 |     private func resetAllSecurity() {
321 |         securityManager.resetAllSecuritySettings()
    |                         `- error: value of type 'P2PSecurityManager' has no dynamic member 'resetAllSecuritySettings' using key path from root type 'P2PSecurityManager'
322 |     }
323 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:321:9: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
319 |     
320 |     private func resetAllSecurity() {
321 |         securityManager.resetAllSecuritySettings()
    |         `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
322 |     }
323 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:321:25: error: cannot call value of non-function type 'Binding<Subject>'
319 |     
320 |     private func resetAllSecurity() {
321 |         securityManager.resetAllSecuritySettings()
    |                         `- error: cannot call value of non-function type 'Binding<Subject>'
322 |     }
323 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:391:15: error: type 'P2PDeviceType' has no member 'mac'
389 |     private var deviceIcon: String {
390 |         switch device.deviceType {
391 |         case .mac:
    |               `- error: type 'P2PDeviceType' has no member 'mac'
392 |             return "desktopcomputer"
393 |         case .iPhone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:393:15: error: type 'P2PDeviceType' has no member 'iPhone'
391 |         case .mac:
392 |             return "desktopcomputer"
393 |         case .iPhone:
    |               `- error: type 'P2PDeviceType' has no member 'iPhone'
394 |             return "iphone"
395 |         case .iPad:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:395:15: error: type 'P2PDeviceType' has no member 'iPad'
393 |         case .iPhone:
394 |             return "iphone"
395 |         case .iPad:
    |               `- error: type 'P2PDeviceType' has no member 'iPad'
396 |             return "ipad"
397 |         case .windows:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:401:15: error: type 'P2PDeviceType' has no member 'unknown'
399 |         case .android:
400 |             return "smartphone"
401 |         case .unknown:
    |               `- error: type 'P2PDeviceType' has no member 'unknown'
402 |             return "questionmark.circle"
403 |         }
[125/160] Compiling SkyBridgeCore SecuritySettingsView.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:35:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 33 |             }
 34 |             .navigationTitle("SkyBridge ËøúÁ®ãËøûÊé•")
 35 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 36 |             .toolbar {
 37 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:37:41: error: 'navigationBarTrailing' is unavailable in macOS
 35 |             .navigationBarTitleDisplayMode(.large)
 36 |             .toolbar {
 37 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
 38 |                     Button(action: { showingSecuritySettings = true }) {
 39 |                         Image(systemName: "shield.checkered")

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:113:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
111 |         }
112 |         .padding()
113 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
114 |     }
115 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:146:20: error: 'InsetGroupedListStyle' is unavailable in macOS
144 |             }
145 |         }
146 |         .listStyle(InsetGroupedListStyle())
    |                    `- error: 'InsetGroupedListStyle' is unavailable in macOS
147 |         .refreshable {
148 |             await refreshDeviceList()

SwiftUI.InsetGroupedListStyle:5:15: note: 'InsetGroupedListStyle' has been explicitly marked unavailable here
3 | @available(tvOS, unavailable)
4 | @available(watchOS, unavailable)
5 | public struct InsetGroupedListStyle : ListStyle {
  |               `- note: 'InsetGroupedListStyle' has been explicitly marked unavailable here
6 |     public init()
7 |     nonisolated public static func _makeView<SelectionValue>(value: _GraphValue<_ListValue<InsetGroupedListStyle, SelectionValue>>, inputs: _ViewInputs) -> _ViewOutputs where SelectionValue : Hashable

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:201:28: error: reference to member 'systemBackground' cannot be resolved without a contextual type
199 |         }
200 |         .padding(.vertical, 8)
201 |         .background(Color(.systemBackground))
    |                            `- error: reference to member 'systemBackground' cannot be resolved without a contextual type
202 |         .overlay(
203 |             Rectangle()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:205:34: error: initializer 'init(_:)' requires the types 'SeparatorShapeStyle.Resolved' (aka 'Never') and 'Color.Resolved' be equivalent
203 |             Rectangle()
204 |                 .frame(height: 0.5)
205 |                 .foregroundColor(Color(.separator)),
    |                                  `- error: initializer 'init(_:)' requires the types 'SeparatorShapeStyle.Resolved' (aka 'Never') and 'Color.Resolved' be equivalent
206 |             alignment: .top
207 |         )

SwiftUI.Color.init:3:10: note: where 'T.Resolved' = 'SeparatorShapeStyle.Resolved' (aka 'Never')
1 | struct Color {
2 | @available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
3 |   public init<T>(_ color: T) where T : Hashable, T : ShapeStyle, T.Resolved == Color.Resolved}
  |          `- note: where 'T.Resolved' = 'SeparatorShapeStyle.Resolved' (aka 'Never')
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:205:34: error: initializer 'init(_:)' requires that 'SeparatorShapeStyle' conform to 'Hashable'
203 |             Rectangle()
204 |                 .frame(height: 0.5)
205 |                 .foregroundColor(Color(.separator)),
    |                                  `- error: initializer 'init(_:)' requires that 'SeparatorShapeStyle' conform to 'Hashable'
206 |             alignment: .top
207 |         )

SwiftUI.Color.init:3:10: note: where 'T' = 'SeparatorShapeStyle'
1 | struct Color {
2 | @available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
3 |   public init<T>(_ color: T) where T : Hashable, T : ShapeStyle, T.Resolved == Color.Resolved}
  |          `- note: where 'T' = 'SeparatorShapeStyle'
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:220:15: error: type 'P2PNetworkState' has no member 'scanning'
218 |         case .disconnected:
219 |             return .red
220 |         case .scanning:
    |               `- error: type 'P2PNetworkState' has no member 'scanning'
221 |             return .blue
222 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:233:15: error: type 'P2PNetworkState' has no member 'scanning'
231 |         case .disconnected:
232 |             return "ÁΩëÁªúÊú™ËøûÊé•"
233 |         case .scanning:
    |               `- error: type 'P2PNetworkState' has no member 'scanning'
234 |             return "Ê≠£Âú®Êâ´ÊèèËÆæÂ§á..."
235 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:262:58: error: missing arguments for parameters 'connectionEstablished', 'connectionFailed' in call
260 |         Task {
261 |             do {
262 |                 try await networkManager.connectToDevice(device)
    |                                                          `- error: missing arguments for parameters 'connectionEstablished', 'connectionFailed' in call
263 |                 showAlert("ËøûÊé•ÊàêÂäü", "Â∑≤ÊàêÂäüËøûÊé•Âà∞ \(device.name)")
264 |             } catch {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:87:17: note: 'connectToDevice(_:connectionEstablished:connectionFailed:)' declared here
 85 |     
 86 |     /// ËøûÊé•Âà∞ËÆæÂ§á
 87 |     public func connectToDevice(_ device: P2PDevice,
    |                 `- note: 'connectToDevice(_:connectionEstablished:connectionFailed:)' declared here
 88 |                                connectionEstablished: @escaping () -> Void,
 89 |                                connectionFailed: @escaping (Error) -> Void) {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:366:40: error: ambiguous use of 'displayName'
364 |                     .foregroundColor(.primary)
365 |                 
366 |                 Text(device.deviceType.displayName)
    |                                        `- error: ambiguous use of 'displayName'
367 |                     .font(.subheadline)
368 |                     .foregroundColor(.secondary)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:15:16: note: found this candidate 
 13 |     
 14 |     /// ËÆæÂ§áÁ±ªÂûãÊòæÁ§∫ÂêçÁß∞
 15 |     public var displayName: String {
    |                `- note: found this candidate 
 16 |         switch self {
 17 |         case .macOS: return "Mac"
    :
645 | extension P2PDeviceType {
646 |     /// ËÆæÂ§áÁ±ªÂûãÁöÑÊòæÁ§∫ÂêçÁß∞
647 |     public var displayName: String {
    |                `- note: found this candidate 
648 |         switch self {
649 |         case .mac:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:411:15: error: type 'P2PDeviceType' has no member 'mac'
409 |     private var deviceIcon: String {
410 |         switch device.deviceType {
411 |         case .mac:
    |               `- error: type 'P2PDeviceType' has no member 'mac'
412 |             return "desktopcomputer"
413 |         case .iPhone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:413:15: error: type 'P2PDeviceType' has no member 'iPhone'
411 |         case .mac:
412 |             return "desktopcomputer"
413 |         case .iPhone:
    |               `- error: type 'P2PDeviceType' has no member 'iPhone'
414 |             return "iphone"
415 |         case .iPad:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:415:15: error: type 'P2PDeviceType' has no member 'iPad'
413 |         case .iPhone:
414 |             return "iphone"
415 |         case .iPad:
    |               `- error: type 'P2PDeviceType' has no member 'iPad'
416 |             return "ipad"
417 |         case .windows:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:421:15: error: type 'P2PDeviceType' has no member 'unknown'
419 |         case .android:
420 |             return "smartphone"
421 |         case .unknown:
    |               `- error: type 'P2PDeviceType' has no member 'unknown'
422 |             return "questionmark.circle"
423 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:514:24: error: value of type 'P2PConnectionQuality' has no member 'level'
512 |     
513 |     private var qualityColor: Color {
514 |         switch quality.level {
    |                        `- error: value of type 'P2PConnectionQuality' has no member 'level'
515 |         case .excellent:
516 |             return .green

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:527:24: error: value of type 'P2PConnectionQuality' has no member 'level'
525 |     
526 |     private var qualityText: String {
527 |         switch quality.level {
    |                        `- error: value of type 'P2PConnectionQuality' has no member 'level'
528 |         case .excellent:
529 |             return "‰ºòÁßÄ"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:551:49: error: value of type 'P2PConnection' has no member 'remoteDevice'
549 |             
550 |             VStack(alignment: .leading, spacing: 2) {
551 |                 Text("Â∑≤ËøûÊé•Âà∞ \(connection.remoteDevice.name)")
    |                                         `- error: value of type 'P2PConnection' has no member 'remoteDevice'
552 |                     .font(.subheadline)
553 |                     .fontWeight(.medium)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:103:47: error: value of type 'P2PSecurityManager' has no dynamic member 'activeSecureConnections' using key path from root type 'P2PSecurityManager'
101 |                 SecurityStatView(
102 |                     title: "Ê¥ªË∑ÉËøûÊé•",
103 |                     value: "\(securityManager.activeSecureConnections.count)",
    |                                               `- error: value of type 'P2PSecurityManager' has no dynamic member 'activeSecureConnections' using key path from root type 'P2PSecurityManager'
104 |                     icon: "lock.shield"
105 |                 )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:103:31: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
101 |                 SecurityStatView(
102 |                     title: "Ê¥ªË∑ÉËøûÊé•",
103 |                     value: "\(securityManager.activeSecureConnections.count)",
    |                               `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
104 |                     icon: "lock.shield"
105 |                 )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:122:9: error: generic parameter 'R' could not be inferred
120 |     
121 |     private var trustedDevicesSection: some View {
122 |         Group {
    |         `- error: generic parameter 'R' could not be inferred
123 |             if securityManager.trustedDevices.isEmpty {
124 |                 HStack {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:122:9: error: generic parameter 'C' could not be inferred
120 |     
121 |     private var trustedDevicesSection: some View {
122 |         Group {
    |         `- error: generic parameter 'C' could not be inferred
123 |             if securityManager.trustedDevices.isEmpty {
124 |                 HStack {

SwiftUI.Group.init:2:31: note: in call to initializer
1 | generic struct Group {
2 | @inlinable nonisolated public init<R, C>(@TableColumnBuilder<R, C> content: () -> Content) where R == Content.TableRowValue, C == Content.TableColumnSortComparator}
  |                               `- note: in call to initializer
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:139:18: error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
137 |                     Spacer()
138 |                 }
139 |                 .padding(.vertical, 4)
    |                  `- error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
140 |             } else {
141 |                 ForEach(securityManager.trustedDevices, id: \.deviceId) { device in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:124:17: error: generic parameter 'Content' could not be inferred
122 |         Group {
123 |             if securityManager.trustedDevices.isEmpty {
124 |                 HStack {
    |                 `- error: generic parameter 'Content' could not be inferred
125 |                     Image(systemName: "shield.slash")
126 |                         .foregroundColor(.orange)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:124:17: error: generic parameter 'Label' could not be inferred
122 |         Group {
123 |             if securityManager.trustedDevices.isEmpty {
124 |                 HStack {
    |                 `- error: generic parameter 'Label' could not be inferred
125 |                     Image(systemName: "shield.slash")
126 |                         .foregroundColor(.orange)

SwiftUI.TableColumnBuilder.buildExpression:2:20: note: in call to function 'buildExpression'
1 | generic struct TableColumnBuilder {
2 | public static func buildExpression<Content, Label>(_ column: TableColumn<RowValue, Sort, Content, Label>) -> TableColumn<RowValue, Sort, Content, Label> where Content : View, Label : View}
  |                    `- note: in call to function 'buildExpression'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:260:35: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
258 |         if securityManager.trustedDevices.isEmpty {
259 |             return "ÈúÄË¶ÅÈÖçÁΩÆ‰ø°‰ªªËÆæÂ§á"
260 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
261 |             return "ÂÆâÂÖ®ÈÖçÁΩÆÊ≠£Â∏∏"
262 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:260:19: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
258 |         if securityManager.trustedDevices.isEmpty {
259 |             return "ÈúÄË¶ÅÈÖçÁΩÆ‰ø°‰ªªËÆæÂ§á"
260 |         } else if securityManager.hasValidCertificates {
    |                   `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
261 |             return "ÂÆâÂÖ®ÈÖçÁΩÆÊ≠£Â∏∏"
262 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:260:35: error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
258 |         if securityManager.trustedDevices.isEmpty {
259 |             return "ÈúÄË¶ÅÈÖçÁΩÆ‰ø°‰ªªËÆæÂ§á"
260 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
261 |             return "ÂÆâÂÖ®ÈÖçÁΩÆÊ≠£Â∏∏"
262 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:270:35: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
268 |         if securityManager.trustedDevices.isEmpty {
269 |             return .orange
270 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
271 |             return .green
272 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:270:19: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
268 |         if securityManager.trustedDevices.isEmpty {
269 |             return .orange
270 |         } else if securityManager.hasValidCertificates {
    |                   `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
271 |             return .green
272 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:270:35: error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
268 |         if securityManager.trustedDevices.isEmpty {
269 |             return .orange
270 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
271 |             return .green
272 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:280:35: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
278 |         if securityManager.trustedDevices.isEmpty {
279 |             return "shield.slash"
280 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
281 |             return "shield.checkered"
282 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:280:19: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
278 |         if securityManager.trustedDevices.isEmpty {
279 |             return "shield.slash"
280 |         } else if securityManager.hasValidCertificates {
    |                   `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
281 |             return "shield.checkered"
282 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:280:35: error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
278 |         if securityManager.trustedDevices.isEmpty {
279 |             return "shield.slash"
280 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
281 |             return "shield.checkered"
282 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:288:25: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
286 |     
287 |     private var certificateStatusText: String {
288 |         securityManager.hasValidCertificates ? "ÊúâÊïà" : "ËøáÊúü"
    |                         `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
289 |     }
290 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:288:9: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
286 |     
287 |     private var certificateStatusText: String {
288 |         securityManager.hasValidCertificates ? "ÊúâÊïà" : "ËøáÊúü"
    |         `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
289 |     }
290 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:288:25: error: cannot convert value of type 'Binding<Subject>' to expected condition type 'Bool'
286 |     
287 |     private var certificateStatusText: String {
288 |         securityManager.hasValidCertificates ? "ÊúâÊïà" : "ËøáÊúü"
    |                         `- error: cannot convert value of type 'Binding<Subject>' to expected condition type 'Bool'
289 |     }
290 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:308:35: error: value of type 'P2PSecurityManager' has no dynamic member 'regenerateKeys' using key path from root type 'P2PSecurityManager'
306 |     private func regenerateKeys() {
307 |         Task {
308 |             await securityManager.regenerateKeys()
    |                                   `- error: value of type 'P2PSecurityManager' has no dynamic member 'regenerateKeys' using key path from root type 'P2PSecurityManager'
309 |         }
310 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:308:19: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
306 |     private func regenerateKeys() {
307 |         Task {
308 |             await securityManager.regenerateKeys()
    |                   `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
309 |         }
310 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:308:35: error: cannot call value of non-function type 'Binding<Subject>'
306 |     private func regenerateKeys() {
307 |         Task {
308 |             await securityManager.regenerateKeys()
    |                                   `- error: cannot call value of non-function type 'Binding<Subject>'
309 |         }
310 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:317:25: error: cannot call value of non-function type 'Binding<Subject>'
315 |     
316 |     private func clearSecurityCache() {
317 |         securityManager.clearSecurityCache()
    |                         `- error: cannot call value of non-function type 'Binding<Subject>'
318 |     }
319 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:317:25: error: value of type 'P2PSecurityManager' has no dynamic member 'clearSecurityCache' using key path from root type 'P2PSecurityManager'
315 |     
316 |     private func clearSecurityCache() {
317 |         securityManager.clearSecurityCache()
    |                         `- error: value of type 'P2PSecurityManager' has no dynamic member 'clearSecurityCache' using key path from root type 'P2PSecurityManager'
318 |     }
319 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:317:9: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
315 |     
316 |     private func clearSecurityCache() {
317 |         securityManager.clearSecurityCache()
    |         `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
318 |     }
319 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:321:25: error: value of type 'P2PSecurityManager' has no dynamic member 'resetAllSecuritySettings' using key path from root type 'P2PSecurityManager'
319 |     
320 |     private func resetAllSecurity() {
321 |         securityManager.resetAllSecuritySettings()
    |                         `- error: value of type 'P2PSecurityManager' has no dynamic member 'resetAllSecuritySettings' using key path from root type 'P2PSecurityManager'
322 |     }
323 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:321:9: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
319 |     
320 |     private func resetAllSecurity() {
321 |         securityManager.resetAllSecuritySettings()
    |         `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
322 |     }
323 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:321:25: error: cannot call value of non-function type 'Binding<Subject>'
319 |     
320 |     private func resetAllSecurity() {
321 |         securityManager.resetAllSecuritySettings()
    |                         `- error: cannot call value of non-function type 'Binding<Subject>'
322 |     }
323 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:391:15: error: type 'P2PDeviceType' has no member 'mac'
389 |     private var deviceIcon: String {
390 |         switch device.deviceType {
391 |         case .mac:
    |               `- error: type 'P2PDeviceType' has no member 'mac'
392 |             return "desktopcomputer"
393 |         case .iPhone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:393:15: error: type 'P2PDeviceType' has no member 'iPhone'
391 |         case .mac:
392 |             return "desktopcomputer"
393 |         case .iPhone:
    |               `- error: type 'P2PDeviceType' has no member 'iPhone'
394 |             return "iphone"
395 |         case .iPad:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:395:15: error: type 'P2PDeviceType' has no member 'iPad'
393 |         case .iPhone:
394 |             return "iphone"
395 |         case .iPad:
    |               `- error: type 'P2PDeviceType' has no member 'iPad'
396 |             return "ipad"
397 |         case .windows:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:401:15: error: type 'P2PDeviceType' has no member 'unknown'
399 |         case .android:
400 |             return "smartphone"
401 |         case .unknown:
    |               `- error: type 'P2PDeviceType' has no member 'unknown'
402 |             return "questionmark.circle"
403 |         }
[126/160] Compiling SkyBridgeCore resource_bundle_accessor.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:35:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 33 |             }
 34 |             .navigationTitle("SkyBridge ËøúÁ®ãËøûÊé•")
 35 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 36 |             .toolbar {
 37 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:37:41: error: 'navigationBarTrailing' is unavailable in macOS
 35 |             .navigationBarTitleDisplayMode(.large)
 36 |             .toolbar {
 37 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
 38 |                     Button(action: { showingSecuritySettings = true }) {
 39 |                         Image(systemName: "shield.checkered")

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:113:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
111 |         }
112 |         .padding()
113 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
114 |     }
115 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:146:20: error: 'InsetGroupedListStyle' is unavailable in macOS
144 |             }
145 |         }
146 |         .listStyle(InsetGroupedListStyle())
    |                    `- error: 'InsetGroupedListStyle' is unavailable in macOS
147 |         .refreshable {
148 |             await refreshDeviceList()

SwiftUI.InsetGroupedListStyle:5:15: note: 'InsetGroupedListStyle' has been explicitly marked unavailable here
3 | @available(tvOS, unavailable)
4 | @available(watchOS, unavailable)
5 | public struct InsetGroupedListStyle : ListStyle {
  |               `- note: 'InsetGroupedListStyle' has been explicitly marked unavailable here
6 |     public init()
7 |     nonisolated public static func _makeView<SelectionValue>(value: _GraphValue<_ListValue<InsetGroupedListStyle, SelectionValue>>, inputs: _ViewInputs) -> _ViewOutputs where SelectionValue : Hashable

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:201:28: error: reference to member 'systemBackground' cannot be resolved without a contextual type
199 |         }
200 |         .padding(.vertical, 8)
201 |         .background(Color(.systemBackground))
    |                            `- error: reference to member 'systemBackground' cannot be resolved without a contextual type
202 |         .overlay(
203 |             Rectangle()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:205:34: error: initializer 'init(_:)' requires the types 'SeparatorShapeStyle.Resolved' (aka 'Never') and 'Color.Resolved' be equivalent
203 |             Rectangle()
204 |                 .frame(height: 0.5)
205 |                 .foregroundColor(Color(.separator)),
    |                                  `- error: initializer 'init(_:)' requires the types 'SeparatorShapeStyle.Resolved' (aka 'Never') and 'Color.Resolved' be equivalent
206 |             alignment: .top
207 |         )

SwiftUI.Color.init:3:10: note: where 'T.Resolved' = 'SeparatorShapeStyle.Resolved' (aka 'Never')
1 | struct Color {
2 | @available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
3 |   public init<T>(_ color: T) where T : Hashable, T : ShapeStyle, T.Resolved == Color.Resolved}
  |          `- note: where 'T.Resolved' = 'SeparatorShapeStyle.Resolved' (aka 'Never')
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:205:34: error: initializer 'init(_:)' requires that 'SeparatorShapeStyle' conform to 'Hashable'
203 |             Rectangle()
204 |                 .frame(height: 0.5)
205 |                 .foregroundColor(Color(.separator)),
    |                                  `- error: initializer 'init(_:)' requires that 'SeparatorShapeStyle' conform to 'Hashable'
206 |             alignment: .top
207 |         )

SwiftUI.Color.init:3:10: note: where 'T' = 'SeparatorShapeStyle'
1 | struct Color {
2 | @available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
3 |   public init<T>(_ color: T) where T : Hashable, T : ShapeStyle, T.Resolved == Color.Resolved}
  |          `- note: where 'T' = 'SeparatorShapeStyle'
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:220:15: error: type 'P2PNetworkState' has no member 'scanning'
218 |         case .disconnected:
219 |             return .red
220 |         case .scanning:
    |               `- error: type 'P2PNetworkState' has no member 'scanning'
221 |             return .blue
222 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:233:15: error: type 'P2PNetworkState' has no member 'scanning'
231 |         case .disconnected:
232 |             return "ÁΩëÁªúÊú™ËøûÊé•"
233 |         case .scanning:
    |               `- error: type 'P2PNetworkState' has no member 'scanning'
234 |             return "Ê≠£Âú®Êâ´ÊèèËÆæÂ§á..."
235 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:262:58: error: missing arguments for parameters 'connectionEstablished', 'connectionFailed' in call
260 |         Task {
261 |             do {
262 |                 try await networkManager.connectToDevice(device)
    |                                                          `- error: missing arguments for parameters 'connectionEstablished', 'connectionFailed' in call
263 |                 showAlert("ËøûÊé•ÊàêÂäü", "Â∑≤ÊàêÂäüËøûÊé•Âà∞ \(device.name)")
264 |             } catch {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:87:17: note: 'connectToDevice(_:connectionEstablished:connectionFailed:)' declared here
 85 |     
 86 |     /// ËøûÊé•Âà∞ËÆæÂ§á
 87 |     public func connectToDevice(_ device: P2PDevice,
    |                 `- note: 'connectToDevice(_:connectionEstablished:connectionFailed:)' declared here
 88 |                                connectionEstablished: @escaping () -> Void,
 89 |                                connectionFailed: @escaping (Error) -> Void) {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:366:40: error: ambiguous use of 'displayName'
364 |                     .foregroundColor(.primary)
365 |                 
366 |                 Text(device.deviceType.displayName)
    |                                        `- error: ambiguous use of 'displayName'
367 |                     .font(.subheadline)
368 |                     .foregroundColor(.secondary)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:15:16: note: found this candidate 
 13 |     
 14 |     /// ËÆæÂ§áÁ±ªÂûãÊòæÁ§∫ÂêçÁß∞
 15 |     public var displayName: String {
    |                `- note: found this candidate 
 16 |         switch self {
 17 |         case .macOS: return "Mac"
    :
645 | extension P2PDeviceType {
646 |     /// ËÆæÂ§áÁ±ªÂûãÁöÑÊòæÁ§∫ÂêçÁß∞
647 |     public var displayName: String {
    |                `- note: found this candidate 
648 |         switch self {
649 |         case .mac:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:411:15: error: type 'P2PDeviceType' has no member 'mac'
409 |     private var deviceIcon: String {
410 |         switch device.deviceType {
411 |         case .mac:
    |               `- error: type 'P2PDeviceType' has no member 'mac'
412 |             return "desktopcomputer"
413 |         case .iPhone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:413:15: error: type 'P2PDeviceType' has no member 'iPhone'
411 |         case .mac:
412 |             return "desktopcomputer"
413 |         case .iPhone:
    |               `- error: type 'P2PDeviceType' has no member 'iPhone'
414 |             return "iphone"
415 |         case .iPad:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:415:15: error: type 'P2PDeviceType' has no member 'iPad'
413 |         case .iPhone:
414 |             return "iphone"
415 |         case .iPad:
    |               `- error: type 'P2PDeviceType' has no member 'iPad'
416 |             return "ipad"
417 |         case .windows:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:421:15: error: type 'P2PDeviceType' has no member 'unknown'
419 |         case .android:
420 |             return "smartphone"
421 |         case .unknown:
    |               `- error: type 'P2PDeviceType' has no member 'unknown'
422 |             return "questionmark.circle"
423 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:514:24: error: value of type 'P2PConnectionQuality' has no member 'level'
512 |     
513 |     private var qualityColor: Color {
514 |         switch quality.level {
    |                        `- error: value of type 'P2PConnectionQuality' has no member 'level'
515 |         case .excellent:
516 |             return .green

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:527:24: error: value of type 'P2PConnectionQuality' has no member 'level'
525 |     
526 |     private var qualityText: String {
527 |         switch quality.level {
    |                        `- error: value of type 'P2PConnectionQuality' has no member 'level'
528 |         case .excellent:
529 |             return "‰ºòÁßÄ"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/P2PConnectionView.swift:551:49: error: value of type 'P2PConnection' has no member 'remoteDevice'
549 |             
550 |             VStack(alignment: .leading, spacing: 2) {
551 |                 Text("Â∑≤ËøûÊé•Âà∞ \(connection.remoteDevice.name)")
    |                                         `- error: value of type 'P2PConnection' has no member 'remoteDevice'
552 |                     .font(.subheadline)
553 |                     .fontWeight(.medium)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:103:47: error: value of type 'P2PSecurityManager' has no dynamic member 'activeSecureConnections' using key path from root type 'P2PSecurityManager'
101 |                 SecurityStatView(
102 |                     title: "Ê¥ªË∑ÉËøûÊé•",
103 |                     value: "\(securityManager.activeSecureConnections.count)",
    |                                               `- error: value of type 'P2PSecurityManager' has no dynamic member 'activeSecureConnections' using key path from root type 'P2PSecurityManager'
104 |                     icon: "lock.shield"
105 |                 )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:103:31: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
101 |                 SecurityStatView(
102 |                     title: "Ê¥ªË∑ÉËøûÊé•",
103 |                     value: "\(securityManager.activeSecureConnections.count)",
    |                               `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
104 |                     icon: "lock.shield"
105 |                 )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:122:9: error: generic parameter 'R' could not be inferred
120 |     
121 |     private var trustedDevicesSection: some View {
122 |         Group {
    |         `- error: generic parameter 'R' could not be inferred
123 |             if securityManager.trustedDevices.isEmpty {
124 |                 HStack {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:122:9: error: generic parameter 'C' could not be inferred
120 |     
121 |     private var trustedDevicesSection: some View {
122 |         Group {
    |         `- error: generic parameter 'C' could not be inferred
123 |             if securityManager.trustedDevices.isEmpty {
124 |                 HStack {

SwiftUI.Group.init:2:31: note: in call to initializer
1 | generic struct Group {
2 | @inlinable nonisolated public init<R, C>(@TableColumnBuilder<R, C> content: () -> Content) where R == Content.TableRowValue, C == Content.TableColumnSortComparator}
  |                               `- note: in call to initializer
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:139:18: error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
137 |                     Spacer()
138 |                 }
139 |                 .padding(.vertical, 4)
    |                  `- error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
140 |             } else {
141 |                 ForEach(securityManager.trustedDevices, id: \.deviceId) { device in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:124:17: error: generic parameter 'Content' could not be inferred
122 |         Group {
123 |             if securityManager.trustedDevices.isEmpty {
124 |                 HStack {
    |                 `- error: generic parameter 'Content' could not be inferred
125 |                     Image(systemName: "shield.slash")
126 |                         .foregroundColor(.orange)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:124:17: error: generic parameter 'Label' could not be inferred
122 |         Group {
123 |             if securityManager.trustedDevices.isEmpty {
124 |                 HStack {
    |                 `- error: generic parameter 'Label' could not be inferred
125 |                     Image(systemName: "shield.slash")
126 |                         .foregroundColor(.orange)

SwiftUI.TableColumnBuilder.buildExpression:2:20: note: in call to function 'buildExpression'
1 | generic struct TableColumnBuilder {
2 | public static func buildExpression<Content, Label>(_ column: TableColumn<RowValue, Sort, Content, Label>) -> TableColumn<RowValue, Sort, Content, Label> where Content : View, Label : View}
  |                    `- note: in call to function 'buildExpression'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:260:35: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
258 |         if securityManager.trustedDevices.isEmpty {
259 |             return "ÈúÄË¶ÅÈÖçÁΩÆ‰ø°‰ªªËÆæÂ§á"
260 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
261 |             return "ÂÆâÂÖ®ÈÖçÁΩÆÊ≠£Â∏∏"
262 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:260:19: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
258 |         if securityManager.trustedDevices.isEmpty {
259 |             return "ÈúÄË¶ÅÈÖçÁΩÆ‰ø°‰ªªËÆæÂ§á"
260 |         } else if securityManager.hasValidCertificates {
    |                   `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
261 |             return "ÂÆâÂÖ®ÈÖçÁΩÆÊ≠£Â∏∏"
262 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:260:35: error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
258 |         if securityManager.trustedDevices.isEmpty {
259 |             return "ÈúÄË¶ÅÈÖçÁΩÆ‰ø°‰ªªËÆæÂ§á"
260 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
261 |             return "ÂÆâÂÖ®ÈÖçÁΩÆÊ≠£Â∏∏"
262 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:270:35: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
268 |         if securityManager.trustedDevices.isEmpty {
269 |             return .orange
270 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
271 |             return .green
272 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:270:19: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
268 |         if securityManager.trustedDevices.isEmpty {
269 |             return .orange
270 |         } else if securityManager.hasValidCertificates {
    |                   `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
271 |             return .green
272 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:270:35: error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
268 |         if securityManager.trustedDevices.isEmpty {
269 |             return .orange
270 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
271 |             return .green
272 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:280:35: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
278 |         if securityManager.trustedDevices.isEmpty {
279 |             return "shield.slash"
280 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
281 |             return "shield.checkered"
282 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:280:19: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
278 |         if securityManager.trustedDevices.isEmpty {
279 |             return "shield.slash"
280 |         } else if securityManager.hasValidCertificates {
    |                   `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
281 |             return "shield.checkered"
282 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:280:35: error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
278 |         if securityManager.trustedDevices.isEmpty {
279 |             return "shield.slash"
280 |         } else if securityManager.hasValidCertificates {
    |                                   `- error: cannot convert value of type 'Binding<_>' to expected condition type 'Bool'
281 |             return "shield.checkered"
282 |         } else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:288:25: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
286 |     
287 |     private var certificateStatusText: String {
288 |         securityManager.hasValidCertificates ? "ÊúâÊïà" : "ËøáÊúü"
    |                         `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificates' using key path from root type 'P2PSecurityManager'
289 |     }
290 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:288:9: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
286 |     
287 |     private var certificateStatusText: String {
288 |         securityManager.hasValidCertificates ? "ÊúâÊïà" : "ËøáÊúü"
    |         `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
289 |     }
290 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:288:25: error: cannot convert value of type 'Binding<Subject>' to expected condition type 'Bool'
286 |     
287 |     private var certificateStatusText: String {
288 |         securityManager.hasValidCertificates ? "ÊúâÊïà" : "ËøáÊúü"
    |                         `- error: cannot convert value of type 'Binding<Subject>' to expected condition type 'Bool'
289 |     }
290 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:308:35: error: value of type 'P2PSecurityManager' has no dynamic member 'regenerateKeys' using key path from root type 'P2PSecurityManager'
306 |     private func regenerateKeys() {
307 |         Task {
308 |             await securityManager.regenerateKeys()
    |                                   `- error: value of type 'P2PSecurityManager' has no dynamic member 'regenerateKeys' using key path from root type 'P2PSecurityManager'
309 |         }
310 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:308:19: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
306 |     private func regenerateKeys() {
307 |         Task {
308 |             await securityManager.regenerateKeys()
    |                   `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
309 |         }
310 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:308:35: error: cannot call value of non-function type 'Binding<Subject>'
306 |     private func regenerateKeys() {
307 |         Task {
308 |             await securityManager.regenerateKeys()
    |                                   `- error: cannot call value of non-function type 'Binding<Subject>'
309 |         }
310 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:317:25: error: cannot call value of non-function type 'Binding<Subject>'
315 |     
316 |     private func clearSecurityCache() {
317 |         securityManager.clearSecurityCache()
    |                         `- error: cannot call value of non-function type 'Binding<Subject>'
318 |     }
319 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:317:25: error: value of type 'P2PSecurityManager' has no dynamic member 'clearSecurityCache' using key path from root type 'P2PSecurityManager'
315 |     
316 |     private func clearSecurityCache() {
317 |         securityManager.clearSecurityCache()
    |                         `- error: value of type 'P2PSecurityManager' has no dynamic member 'clearSecurityCache' using key path from root type 'P2PSecurityManager'
318 |     }
319 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:317:9: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
315 |     
316 |     private func clearSecurityCache() {
317 |         securityManager.clearSecurityCache()
    |         `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
318 |     }
319 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:321:25: error: value of type 'P2PSecurityManager' has no dynamic member 'resetAllSecuritySettings' using key path from root type 'P2PSecurityManager'
319 |     
320 |     private func resetAllSecurity() {
321 |         securityManager.resetAllSecuritySettings()
    |                         `- error: value of type 'P2PSecurityManager' has no dynamic member 'resetAllSecuritySettings' using key path from root type 'P2PSecurityManager'
322 |     }
323 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:321:9: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
319 |     
320 |     private func resetAllSecurity() {
321 |         securityManager.resetAllSecuritySettings()
    |         `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
322 |     }
323 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:321:25: error: cannot call value of non-function type 'Binding<Subject>'
319 |     
320 |     private func resetAllSecurity() {
321 |         securityManager.resetAllSecuritySettings()
    |                         `- error: cannot call value of non-function type 'Binding<Subject>'
322 |     }
323 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:391:15: error: type 'P2PDeviceType' has no member 'mac'
389 |     private var deviceIcon: String {
390 |         switch device.deviceType {
391 |         case .mac:
    |               `- error: type 'P2PDeviceType' has no member 'mac'
392 |             return "desktopcomputer"
393 |         case .iPhone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:393:15: error: type 'P2PDeviceType' has no member 'iPhone'
391 |         case .mac:
392 |             return "desktopcomputer"
393 |         case .iPhone:
    |               `- error: type 'P2PDeviceType' has no member 'iPhone'
394 |             return "iphone"
395 |         case .iPad:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:395:15: error: type 'P2PDeviceType' has no member 'iPad'
393 |         case .iPhone:
394 |             return "iphone"
395 |         case .iPad:
    |               `- error: type 'P2PDeviceType' has no member 'iPad'
396 |             return "ipad"
397 |         case .windows:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/SecuritySettingsView.swift:401:15: error: type 'P2PDeviceType' has no member 'unknown'
399 |         case .android:
400 |             return "smartphone"
401 |         case .unknown:
    |               `- error: type 'P2PDeviceType' has no member 'unknown'
402 |             return "questionmark.circle"
403 |         }
error: emit-module command failed with exit code 1 (use -v to see invocation)
[127/160] Emitting module SkyBridgeCore
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:29:27: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'FileTransferEngine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 18 |     // MARK: - ÈÖçÁΩÆ
 19 |     
 20 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 21 |         public let maxConcurrentTransfers: Int
 22 |         public let chunkSize: Int
    :
 27 |         public let bufferSize: Int
 28 |         
 29 |         public static let `default` = Configuration(
    |                           |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'FileTransferEngine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 30 |             maxConcurrentTransfers: 5,
 31 |             chunkSize: 1024 * 1024, // 1MB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:108:18: error: 'FileTransferRequest' is ambiguous for type lookup in this context
106 |     /// Êé•Êî∂Êñá‰ª∂
107 |     public func receiveFile(
108 |         request: FileTransferRequest,
    |                  `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
109 |         saveToDirectory: URL
110 |     ) async throws -> String {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:202:76: error: 'FileTransferRequest' is ambiguous for type lookup in this context
200 |     }
201 |     
202 |     private func startFileReceive(_ session: FileTransferSession, request: FileTransferRequest) async throws {
    |                                                                            `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
203 |         // Ëé∑ÂèñËøûÊé•
204 |         guard let connection = networkManager.activeConnections[session.remoteDeviceId] else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:406:49: error: 'FileTransferRequest' is ambiguous for type lookup in this context
404 |     // MARK: - ÁΩëÁªúÈÄö‰ø°
405 |     
406 |     private func sendTransferRequest(_ request: FileTransferRequest, to connection: P2PConnection) async throws {
    |                                                 `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
407 |         // TODO: ÂÆûÁé∞ÁΩëÁªúÂèëÈÄÅÈÄªËæë
408 |         print("ÂèëÈÄÅ‰º†ËæìËØ∑Ê±Ç: \(request.fileName)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: error: invalid redeclaration of 'FileTransferRequest'
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- error: invalid redeclaration of 'FileTransferRequest'
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:590:23: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
588 |     public let timeoutInterval: TimeInterval
589 |     
590 |     public static let `default` = TransferQualitySettings(
    |                       |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
591 |         priority: .normal,
592 |         compressionLevel: .balanced,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:598:23: error: static property 'highSpeed' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
596 |     )
597 |     
598 |     public static let highSpeed = TransferQualitySettings(
    |                       |- error: static property 'highSpeed' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'highSpeed' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
599 |         priority: .high,
600 |         compressionLevel: .fast,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:606:23: error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
604 |     )
605 |     
606 |     public static let highSecurity = TransferQualitySettings(
    |                       |- error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'highSecurity' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
607 |         priority: .normal,
608 |         compressionLevel: .maximum,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:747:8: error: type 'FilePickerView' does not conform to protocol 'NSViewControllerRepresentable'
745 | // MARK: - Êñá‰ª∂ÈÄâÊã©Âô®
746 | 
747 | struct FilePickerView: NSViewControllerRepresentable {
    |        `- error: type 'FilePickerView' does not conform to protocol 'NSViewControllerRepresentable'
748 |     let onFilesSelected: ([URL]) -> Void
749 |     
750 |     func makeNSViewController(context: Context) -> NSOpenPanel {
    |          `- note: candidate would match and infer 'NSViewControllerType' = 'NSOpenPanel' if 'NSOpenPanel' inherited from 'NSViewController'
751 |         let panel = NSOpenPanel()
752 |         panel.allowsMultipleSelection = true
    :
756 |     }
757 |     
758 |     func updateNSViewController(_ nsViewController: NSOpenPanel, context: Context) {
    |          `- note: candidate would match and infer 'NSViewControllerType' = 'NSOpenPanel' if 'NSOpenPanel' inherited from 'NSViewController'
759 |         nsViewController.begin { response in
760 |             if response == .OK {

SwiftUI.NSViewControllerRepresentable.NSViewControllerType:2:16: note: unable to infer associated type 'NSViewControllerType' for protocol 'NSViewControllerRepresentable'
1 | protocol NSViewControllerRepresentable {
2 | associatedtype NSViewControllerType : NSViewController}
  |                `- note: unable to infer associated type 'NSViewControllerType' for protocol 'NSViewControllerRepresentable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:16:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 14 |     // MARK: - ÁßÅÊúâÂ±ûÊÄß
 15 |     private let stunClient: STUNClient?
 16 |     private let configuration: P2PNetworkConfiguration
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 17 |     private let networkQueue: DispatchQueue
 18 |     private let coordinationQueue: DispatchQueue

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: note: found this candidate
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:35:57: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 33 |     // MARK: - ÂàùÂßãÂåñ
 34 |     
 35 |     public init(stunClient: STUNClient?, configuration: P2PNetworkConfiguration) {
    |                                                         `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 36 |         self.stunClient = stunClient
 37 |         self.configuration = configuration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: note: found this candidate
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:563:25: error: 'NATType' is ambiguous for type lookup in this context
561 |     public let supportedMethods: [TraversalMethod]
562 |     /// NATÁ±ªÂûã
563 |     public let natType: NATType
    |                         `- error: 'NATType' is ambiguous for type lookup in this context
564 |     /// ÂÖ¨ÁΩëÁ´ØÁÇπ
565 |     public let publicEndpoint: NWEndpoint?

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:347:13: note: found this candidate
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:571:26: error: 'NATType' is ambiguous for type lookup in this context
569 |     public init(level: TraversalCapabilityLevel,
570 |                 supportedMethods: [TraversalMethod],
571 |                 natType: NATType,
    |                          `- error: 'NATType' is ambiguous for type lookup in this context
572 |                 publicEndpoint: NWEndpoint?,
573 |                 estimatedSuccessRate: Double) {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:347:13: note: found this candidate
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:285:1: error: cannot declare conformance to 'NSObjectProtocol' in Swift; 'P2PDiscoveryService' should inherit 'NSObject' instead
283 | 
284 | // MARK: - NetServiceDelegate
285 | extension P2PDiscoveryService: NetServiceDelegate {
    | |- error: cannot declare conformance to 'NSObjectProtocol' in Swift; 'P2PDiscoveryService' should inherit 'NSObject' instead
    | `- note: add stubs for conformance
286 |     nonisolated public func netServiceDidPublish(_ sender: NetService) {
287 |         print("üì° ËÆæÂ§áÂπøÊí≠ÊàêÂäü")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:52:23: error: static property 'defaultServers' is not concurrency-safe because non-'Sendable' type '[STUNServer]' may have shared mutable state [#MutableGlobalVariable]
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: consider making struct 'STUNServer' conform to the 'Sendable' protocol
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
 50 |     
 51 |     /// ÈªòËÆ§STUNÊúçÂä°Âô®ÂàóË°®
 52 |     public static let defaultServers = [
    |                       |- error: static property 'defaultServers' is not concurrency-safe because non-'Sendable' type '[STUNServer]' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'defaultServers' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 53 |         STUNServer(host: "stun.l.google.com"),
 54 |         STUNServer(host: "stun1.l.google.com"),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: error: invalid redeclaration of 'STUNServer'
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- error: invalid redeclaration of 'STUNServer'
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:61:13: error: invalid redeclaration of 'TraversalDifficulty'
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'TraversalDifficulty'
 62 |     case easy = "easy"
 63 |     case medium = "medium"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:97:37: error: 'TraversalDifficulty' is ambiguous for type lookup in this context
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- note: found this candidate
 62 |     case easy = "easy"
 63 |     case medium = "medium"
    :
 95 |     }
 96 |     
 97 |     public var traversalDifficulty: TraversalDifficulty {
    |                                     `- error: 'TraversalDifficulty' is ambiguous for type lookup in this context
 98 |         switch self {
 99 |         case .noNAT, .fullCone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:375:13: note: found this candidate
373 | 
374 | /// Á©øÈÄèÈöæÂ∫¶
375 | public enum TraversalDifficulty: String, CaseIterable {
    |             `- note: found this candidate
376 |     case easy = "ÁÆÄÂçï"
377 |     case medium = "‰∏≠Á≠â"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: error: invalid redeclaration of 'NATType'
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'NATType'
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: error: invalid redeclaration of 'P2PProtocol'
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'P2PProtocol'
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:141:30: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                              `- error: 'STUNServer' is ambiguous for type lookup in this context
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:26: error: 'P2PProtocol' is ambiguous for type lookup in this context
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"
    :
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                          `- error: 'P2PProtocol' is ambiguous for type lookup in this context
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: note: found this candidate
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:151:19: error: 'P2PProtocol' is ambiguous for type lookup in this context
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"
    :
149 |     public init(
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
    |                   `- error: 'P2PProtocol' is ambiguous for type lookup in this context
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
153 |         connectionTimeout: TimeInterval = 30.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: note: found this candidate
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:152:23: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
    |                       `- error: 'STUNServer' is ambiguous for type lookup in this context
153 |         connectionTimeout: TimeInterval = 30.0,
154 |         heartbeatInterval: TimeInterval = 10.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:806:31: error: 'STUNServer' is ambiguous for type lookup in this context
804 |     public init(udpPort: UInt16,
805 |                 tcpPort: UInt16,
806 |                 stunServers: [STUNServer],
    |                               `- error: 'STUNServer' is ambiguous for type lookup in this context
807 |                 connectionTimeout: TimeInterval,
808 |                 heartbeatInterval: TimeInterval,
    :
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Encodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Encodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Encodable' because '[STUNServer]' does not conform to 'Encodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Encodable.encode:2:6: note: protocol requires function 'encode(to:)' with type 'Encodable'
1 | protocol Encodable {
2 | func encode(to encoder: any Encoder) throws}
  |      `- note: protocol requires function 'encode(to:)' with type 'Encodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: invalid redeclaration of 'P2PNetworkConfiguration'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: invalid redeclaration of 'P2PNetworkConfiguration'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:530:30: error: 'FileTransferRequest' is ambiguous for type lookup in this context
528 |     case authResponse(Data)
529 |     case remoteDesktopFrame(Data)
530 |     case fileTransferRequest(FileTransferRequest)
    |                              `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
531 |     case fileTransferData(Data)
532 |     case systemCommand(SystemCommand)
    :
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:647:16: error: invalid redeclaration of 'displayName'
 13 |     
 14 |     /// ËÆæÂ§áÁ±ªÂûãÊòæÁ§∫ÂêçÁß∞
 15 |     public var displayName: String {
    |                `- note: 'displayName' previously declared here
 16 |         switch self {
 17 |         case .macOS: return "Mac"
    :
645 | extension P2PDeviceType {
646 |     /// ËÆæÂ§áÁ±ªÂûãÁöÑÊòæÁ§∫ÂêçÁß∞
647 |     public var displayName: String {
    |                `- error: invalid redeclaration of 'displayName'
648 |         switch self {
649 |         case .mac:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:708:16: error: invalid redeclaration of 'bytesReceived'
412 |     @Published public var status: P2PConnectionStatus = .connecting
413 |     @Published public var lastActivity: Date = Date()
414 |     @Published public var bytesReceived: UInt64 = 0
    |                           `- note: 'bytesReceived' previously declared here
415 |     @Published public var bytesSent: UInt64 = 0
416 |     
    :
706 |     
707 |     /// Êé•Êî∂Â≠óËäÇÊï∞
708 |     public var bytesReceived: Int64 {
    |                `- error: invalid redeclaration of 'bytesReceived'
709 |         // Ê®°ÊãüÊé•Êî∂Êï∞ÊçÆ
710 |         return 1024 * 1024 // 1MB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:714:16: error: invalid redeclaration of 'bytesSent'
413 |     @Published public var lastActivity: Date = Date()
414 |     @Published public var bytesReceived: UInt64 = 0
415 |     @Published public var bytesSent: UInt64 = 0
    |                           `- note: 'bytesSent' previously declared here
416 |     
417 |     private var isEncrypted = false
    :
712 |     
713 |     /// ÂèëÈÄÅÂ≠óËäÇÊï∞
714 |     public var bytesSent: Int64 {
    |                `- error: invalid redeclaration of 'bytesSent'
715 |         // Ê®°ÊãüÂèëÈÄÅÊï∞ÊçÆ
716 |         return 512 * 1024 // 512KB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:158:14: error: value of type 'P2PNetworkConfiguration' has no member 'protocol'
156 |     ) {
157 |         self.listenPort = listenPort
158 |         self.protocol = `protocol`
    |              `- error: value of type 'P2PNetworkConfiguration' has no member 'protocol'
159 |         self.stunServers = stunServers
160 |         self.connectionTimeout = connectionTimeout

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:15:46: error: 'P2PProtocol' is ambiguous for type lookup in this context
 13 |     @Published public var networkStatistics: P2PNetworkStatistics = P2PNetworkStatistics()
 14 |     @Published public var isNATTraversalEnabled = true
 15 |     @Published public var preferredProtocol: P2PProtocol = .udp
    |                                              `- error: 'P2PProtocol' is ambiguous for type lookup in this context
 16 |     
 17 |     // MARK: - ÂèëÂ∏ÉËÄÖÂ±ûÊÄß
    :
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: note: found this candidate
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:48:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 46 |     
 47 |     // ÈÖçÁΩÆ
 48 |     private let configuration: P2PNetworkConfiguration
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 49 |     
 50 |     // ÁªüËÆ°‰ø°ÊÅØ
    :
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:59:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 57 |     // MARK: - ÂàùÂßãÂåñ
 58 |     
 59 |     public init(configuration: P2PNetworkConfiguration = .defaultConfiguration()) {
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 60 |         self.configuration = configuration
 61 |         self.networkQueue = DispatchQueue(label: "com.skybridge.p2p.network", qos: .userInitiated)
    :
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:461:96: error: 'P2PProtocol' is ambiguous for type lookup in this context
459 |     
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
    |                                                                                                `- error: 'P2PProtocol' is ambiguous for type lookup in this context
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
463 |         
    :
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: note: found this candidate
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:462:29: error: expected expression in list of expressions
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
    |                      `- error: expected expression in list of expressions
463 |         
464 |         let parameters: NWParameters

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:465:16: error: expected expression in 'switch' statement
463 |         
464 |         let parameters: NWParameters
465 |         switch protocol {
    |                `- error: expected expression in 'switch' statement
466 |         case .udp:
467 |             parameters = NWParameters.udp

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:465:25: error: expected identifier in protocol declaration
463 |         
464 |         let parameters: NWParameters
465 |         switch protocol {
    |                         `- error: expected identifier in protocol declaration
466 |         case .udp:
467 |             parameters = NWParameters.udp

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:23: error: expected expression in list of expressions
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                       `- error: expected expression in list of expressions
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:22: error: consecutive statements on a line must be separated by ';'
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                      `- error: consecutive statements on a line must be separated by ';'
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:480:31: error: expected identifier in protocol declaration
478 |             device: device,
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,
    |                               `- error: expected identifier in protocol declaration
481 |             endpoint: endpoint
482 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:794:30: error: 'STUNServer' is ambiguous for type lookup in this context
792 |     public let tcpPort: UInt16
793 |     /// STUNÊúçÂä°Âô®ÂàóË°®
794 |     public let stunServers: [STUNServer]
    |                              `- error: 'STUNServer' is ambiguous for type lookup in this context
795 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥
796 |     public let connectionTimeout: TimeInterval
    :
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:821:50: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16
    :
819 |     
820 |     /// ÈªòËÆ§ÈÖçÁΩÆ
821 |     public static func defaultConfiguration() -> P2PNetworkConfiguration {
    |                                                  `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
822 |         return P2PNetworkConfiguration(
823 |             udpPort: 8888,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: error: invalid redeclaration of 'P2PNetworkConfiguration'
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- error: invalid redeclaration of 'P2PNetworkConfiguration'
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:427:81: error: cannot infer contextual base in reference to member 'udp'
425 |             case .success(let endpoint):
426 |                 print("‚úÖ NATÁ©øÈÄèÊàêÂäüÔºåÁ´ØÁÇπ: \(endpoint)")
427 |                 self?.establishConnection(to: device, via: endpoint, protocol: .udp)
    |                                                                                 `- error: cannot infer contextual base in reference to member 'udp'
428 |                 
429 |             case .failure(let error):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:441:32: error: value of type 'P2PDevice' has no member 'endpoints'
439 |         
440 |         // Â∞ùËØïÂ∑≤Áü•ÁöÑËÆæÂ§áÁ´ØÁÇπ
441 |         for endpoint in device.endpoints {
    |                                `- error: value of type 'P2PDevice' has no member 'endpoints'
442 |             if preferredProtocol == .udp {
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:443:75: error: cannot infer contextual base in reference to member 'udp'
441 |         for endpoint in device.endpoints {
442 |             if preferredProtocol == .udp {
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)
    |                                                                           `- error: cannot infer contextual base in reference to member 'udp'
444 |             } else {
445 |                 establishConnection(to: device, via: endpoint, protocol: .tcp)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:445:75: error: cannot infer contextual base in reference to member 'tcp'
443 |                 establishConnection(to: device, via: endpoint, protocol: .udp)
444 |             } else {
445 |                 establishConnection(to: device, via: endpoint, protocol: .tcp)
    |                                                                           `- error: cannot infer contextual base in reference to member 'tcp'
446 |             }
447 |             

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:453:88: error: cannot infer contextual base in reference to member 'tcp'
451 |                     if self.pendingConnections[device.id] != nil {
452 |                         print("üîÑ UDPËøûÊé•Ë∂ÖÊó∂ÔºåÂ∞ùËØïTCP fallback")
453 |                         self.establishConnection(to: device, via: endpoint, protocol: .tcp)
    |                                                                                        `- error: cannot infer contextual base in reference to member 'tcp'
454 |                     }
455 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:462:28: error: missing argument for parameter #1 in call
460 |     /// Âª∫Á´ãËøûÊé•
461 |     private func establishConnection(to device: P2PDevice, via endpoint: NWEndpoint, protocol: P2PProtocol) {
462 |         print("üîå Âª∫Á´ã\(protocol.rawValue)ËøûÊé•Âà∞: \(endpoint)")
    |                     `- error: missing argument for parameter #1 in call
463 |         
464 |         let parameters: NWParameters

Swift.DefaultStringInterpolation.appendInterpolation:2:22: note: 'appendInterpolation' declared here
1 | struct DefaultStringInterpolation {
2 | public mutating func appendInterpolation(_ value: any Any.Type)}
  |                      `- note: 'appendInterpolation' declared here
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:477:24: error: extra argument 'id' in call
475 |         
476 |         let connection = P2PConnection(
477 |             id: UUID().uuidString,
    |                        `- error: extra argument 'id' in call
478 |             device: device,
479 |             nwConnection: nwConnection,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:478:27: error: missing argument for parameter 'securityManager' in call
476 |         let connection = P2PConnection(
477 |             id: UUID().uuidString,
478 |             device: device,
    |                           `- error: missing argument for parameter 'securityManager' in call
479 |             nwConnection: nwConnection,
480 |             protocol: protocol,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:553:27: error: value of type 'P2PConnection' has no member 'protocol'
551 |         if let pendingConnection = pendingConnections[deviceId] {
552 |             // Â¶ÇÊûúÊòØUDPËøûÊé•Â§±Ë¥•ÔºåÂ∞ùËØïTCP fallback
553 |             if connection.protocol == .udp {
    |                           `- error: value of type 'P2PConnection' has no member 'protocol'
554 |                 print("üîÑ UDPËøûÊé•Â§±Ë¥•ÔºåÂ∞ùËØïTCP fallback")
555 |                 attemptDirectConnection(to: pendingConnection.device)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:21: error: no exact matches in call to initializer 
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                     |- error: no exact matches in call to initializer 
    |                     `- note: candidate has partially matching parameter list (from: any Decoder)
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:273:12: note: candidate has partially matching parameter list (from: P2PDeviceInfo)
271 |     public var deviceType: P2PDeviceType { return type }
272 |     
273 |     public init(from deviceInfo: P2PDeviceInfo) {
    |            `- note: candidate has partially matching parameter list (from: P2PDeviceInfo)
274 |         self.id = deviceInfo.id
275 |         self.name = deviceInfo.name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:638:43: error: extra arguments at positions #1, #4, #5 in call
636 |         
637 |         // ÂàõÂª∫‰∏¥Êó∂ËøûÊé•ÂØπË±°Â§ÑÁêÜÊè°Êâã
638 |         let tempConnection = P2PConnection(
    |                                           `- error: extra arguments at positions #1, #4, #5 in call
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:93: error: missing argument for parameter 'securityManager' in call
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                                             `- error: missing argument for parameter 'securityManager' in call
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:640:70: error: cannot infer contextual base in reference to member 'unknown'
638 |         let tempConnection = P2PConnection(
639 |             id: UUID().uuidString,
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                      `- error: cannot infer contextual base in reference to member 'unknown'
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:642:24: error: cannot infer contextual base in reference to member 'udp'
640 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
641 |             nwConnection: nwConnection,
642 |             protocol: .udp,
    |                        `- error: cannot infer contextual base in reference to member 'udp'
643 |             endpoint: nwConnection.endpoint
644 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:21: error: no exact matches in call to initializer 
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                     |- error: no exact matches in call to initializer 
    |                     `- note: candidate has partially matching parameter list (from: any Decoder)
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:273:12: note: candidate has partially matching parameter list (from: P2PDeviceInfo)
271 |     public var deviceType: P2PDeviceType { return type }
272 |     
273 |     public init(from deviceInfo: P2PDeviceInfo) {
    |            `- note: candidate has partially matching parameter list (from: P2PDeviceInfo)
274 |         self.id = deviceInfo.id
275 |         self.name = deviceInfo.name

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:657:43: error: extra arguments at positions #1, #4, #5 in call
655 |         
656 |         // ÂàõÂª∫‰∏¥Êó∂ËøûÊé•ÂØπË±°Â§ÑÁêÜÊè°Êâã
657 |         let tempConnection = P2PConnection(
    |                                           `- error: extra arguments at positions #1, #4, #5 in call
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:93: error: missing argument for parameter 'securityManager' in call
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                                             `- error: missing argument for parameter 'securityManager' in call
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:420:12: note: 'init(device:connection:securityManager:)' declared here
418 |     private var receiveBuffer = Data()
419 |     
420 |     public init(device: P2PDevice, connection: NWConnection, securityManager: P2PSecurityManager) {
    |            `- note: 'init(device:connection:securityManager:)' declared here
421 |         self.device = device
422 |         self.connection = connection

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:659:70: error: cannot infer contextual base in reference to member 'unknown'
657 |         let tempConnection = P2PConnection(
658 |             id: UUID().uuidString,
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
    |                                                                      `- error: cannot infer contextual base in reference to member 'unknown'
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:661:24: error: cannot infer contextual base in reference to member 'tcp'
659 |             device: P2PDevice(id: "unknown", name: "Unknown", type: .unknown, endpoints: []),
660 |             nwConnection: nwConnection,
661 |             protocol: .tcp,
    |                        `- error: cannot infer contextual base in reference to member 'tcp'
662 |             endpoint: nwConnection.endpoint
663 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:39:25: error: 'STUNServer' is ambiguous for type lookup in this context
 37 |     // MARK: - ÂàùÂßãÂåñ
 38 |     
 39 |     public init(server: STUNServer) {
    |                         `- error: 'STUNServer' is ambiguous for type lookup in this context
 40 |         self.server = server
 41 |         self.networkQueue = DispatchQueue(label: "com.skybridge.stun.client", qos: .userInitiated)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:66:61: error: 'NATType' is ambiguous for type lookup in this context
 64 |     
 65 |     /// Ê£ÄÊµãNATÁ±ªÂûã
 66 |     public func detectNATType(completion: @escaping (Result<NATType, STUNError>) -> Void) {
    |                                                             `- error: 'NATType' is ambiguous for type lookup in this context
 67 |         print("üîç ÂºÄÂßãÊ£ÄÊµãNATÁ±ªÂûã")
 68 |         
    :
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:183:72: error: 'NATType' is ambiguous for type lookup in this context
181 |     
182 |     /// ÊâßË°åNATÁ±ªÂûãÊ£ÄÊµã
183 |     private func performNATTypeDetection(completion: @escaping (Result<NATType, STUNError>) -> Void) {
    |                                                                        `- error: 'NATType' is ambiguous for type lookup in this context
184 |         // NATÁ±ªÂûãÊ£ÄÊµãÈúÄË¶ÅÂ§ö‰∏™STUNËØ∑Ê±Ç
185 |         // ËøôÈáåÂÆûÁé∞ÁÆÄÂåñÁâàÊú¨ÔºåÂÆûÈôÖÂ∫îÁî®‰∏≠ÈúÄË¶ÅÊõ¥Â§çÊùÇÁöÑÊ£ÄÊµãÈÄªËæë
    :
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:360:37: error: 'TraversalDifficulty' is ambiguous for type lookup in this context
358 |     
359 |     /// NATÁ©øÈÄèÈöæÂ∫¶
360 |     public var traversalDifficulty: TraversalDifficulty {
    |                                     `- error: 'TraversalDifficulty' is ambiguous for type lookup in this context
361 |         switch self {
362 |         case .noNAT, .fullCone:
    :
373 | 
374 | /// Á©øÈÄèÈöæÂ∫¶
375 | public enum TraversalDifficulty: String, CaseIterable {
    |             `- note: found this candidate
376 |     case easy = "ÁÆÄÂçï"
377 |     case medium = "‰∏≠Á≠â"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:61:13: note: found this candidate
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- note: found this candidate
 62 |     case easy = "easy"
 63 |     case medium = "medium"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:25:38: error: 'ScreenCaptureEngine' is ambiguous for type lookup in this context
 23 |     private let metalDevice: MTLDevice
 24 |     private let metalCommandQueue: MTLCommandQueue
 25 |     private let screenCaptureEngine: ScreenCaptureEngine
    |                                      `- error: 'ScreenCaptureEngine' is ambiguous for type lookup in this context
 26 |     private let videoEncoder: HardwareVideoEncoder
 27 |     private let frameProcessor: MetalFrameProcessor
    :
214 | 
215 | // MARK: - Â±èÂπïÊçïËé∑ÂºïÊìé
216 | private class ScreenCaptureEngine {
    |               `- note: found this candidate
217 |     private let metalDevice: MTLDevice
218 |     private var captureSession: AVCaptureSession?

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/ScreenCaptureEngine.swift:12:14: note: found this candidate
 10 | /// È´òÊÄßËÉΩÂ±èÂπïÊçïËé∑ÂºïÊìé - ‰ΩøÁî®ScreenCaptureKitÂÆûÁé∞Á°¨‰ª∂Âä†ÈÄüÁöÑÂ±èÂπïÊçïËé∑
 11 | @MainActor
 12 | public class ScreenCaptureEngine: NSObject, ObservableObject {
    |              `- note: found this candidate
 13 |     
 14 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:26:31: error: 'HardwareVideoEncoder' is ambiguous for type lookup in this context
 24 |     private let metalCommandQueue: MTLCommandQueue
 25 |     private let screenCaptureEngine: ScreenCaptureEngine
 26 |     private let videoEncoder: HardwareVideoEncoder
    |                               `- error: 'HardwareVideoEncoder' is ambiguous for type lookup in this context
 27 |     private let frameProcessor: MetalFrameProcessor
 28 |     private let networkStreamer: RemoteDesktopStreamer
    :
282 | 
283 | // MARK: - Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô®
284 | private class HardwareVideoEncoder {
    |               `- note: found this candidate
285 |     private var compressionSession: VTCompressionSession?
286 |     private var config: EncodingConfiguration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:10:14: note: found this candidate
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: found this candidate
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:216:15: error: invalid redeclaration of 'ScreenCaptureEngine'
214 | 
215 | // MARK: - Â±èÂπïÊçïËé∑ÂºïÊìé
216 | private class ScreenCaptureEngine {
    |               `- error: invalid redeclaration of 'ScreenCaptureEngine'
217 |     private let metalDevice: MTLDevice
218 |     private var captureSession: AVCaptureSession?

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:284:15: error: invalid redeclaration of 'HardwareVideoEncoder'
282 | 
283 | // MARK: - Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô®
284 | private class HardwareVideoEncoder {
    |               `- error: invalid redeclaration of 'HardwareVideoEncoder'
285 |     private var compressionSession: VTCompressionSession?
286 |     private var config: EncodingConfiguration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:583:23: error: 'VideoCodec' is ambiguous for type lookup in this context
581 | /// ÁºñÁ†ÅÈÖçÁΩÆ
582 | public struct EncodingConfiguration {
583 |     public let codec: VideoCodec
    |                       `- error: 'VideoCodec' is ambiguous for type lookup in this context
584 |     public let resolution: CGSize
585 |     public let bitrate: Int
    :
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:692:13: note: found this candidate
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: error: invalid redeclaration of 'VideoCodec'
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- error: invalid redeclaration of 'VideoCodec'
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:614:13: error: invalid redeclaration of 'RemoteDesktopError'
612 | 
613 | // MARK: - ÈîôËØØÂÆö‰πâ
614 | public enum RemoteDesktopError: LocalizedError {
    |             `- error: invalid redeclaration of 'RemoteDesktopError'
615 |     case metalInitializationFailed
616 |     case metalCommandQueueCreationFailed

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:587:23: error: 'VideoCodec' is ambiguous for type lookup in this context
585 |     public let isKeyFrame: Bool
586 |     /// ÁºñËß£Á†ÅÂô®
587 |     public let codec: VideoCodec
    |                       `- error: 'VideoCodec' is ambiguous for type lookup in this context
588 |     /// ÂàÜËæ®Áéá
589 |     public let resolution: CGSize
    :
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: note: found this candidate
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:607:23: error: 'VideoCodec' is ambiguous for type lookup in this context
605 | public struct VideoEncodingConfiguration {
606 |     /// ÁºñËß£Á†ÅÂô®
607 |     public let codec: VideoCodec
    |                       `- error: 'VideoCodec' is ambiguous for type lookup in this context
608 |     /// ÂàÜËæ®Áéá
609 |     public let resolution: CGSize
    :
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: note: found this candidate
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:625:24: error: 'VideoCodec' is ambiguous for type lookup in this context
623 |     public let enableHardwareAcceleration: Bool
624 |     
625 |     public init(codec: VideoCodec,
    |                        `- error: 'VideoCodec' is ambiguous for type lookup in this context
626 |                 resolution: CGSize,
627 |                 bitrate: Int,
    :
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: note: found this candidate
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/ScreenCaptureEngine.swift:484:32: error: conformance of 'ScreenCaptureEngine' to protocol 'SCStreamDelegate' crosses into main actor-isolated code and can cause data races [#ConformanceIsolation]
482 | // MARK: - SCStreamDelegate
483 | 
484 | extension ScreenCaptureEngine: SCStreamDelegate {
    | |                              |- error: conformance of 'ScreenCaptureEngine' to protocol 'SCStreamDelegate' crosses into main actor-isolated code and can cause data races [#ConformanceIsolation]
    | |                              |- note: isolate this conformance to the main actor with '@MainActor'
    | |                              `- note: turn data races into runtime errors with '@preconcurrency'
    | `- note: mark all declarations used in the conformance 'nonisolated'
485 |     
486 |     public func stream(_ stream: SCStream, didStopWithError error: Error) {
    |                 `- note: main actor-isolated instance method 'stream(_:didStopWithError:)' cannot satisfy nonisolated requirement
487 |         print("‚ùå Â±èÂπïÊçïËé∑ÊµÅÂÅúÊ≠¢ÔºåÈîôËØØ: \(error)")
488 |         
    :
494 |     }
495 |     
496 |     public func streamDidBecomeActive(_ stream: SCStream) {
    |                 `- note: main actor-isolated instance method 'streamDidBecomeActive' cannot satisfy nonisolated requirement
497 |         print("‚úÖ Â±èÂπïÊçïËé∑ÊµÅÂ∑≤ÊøÄÊ¥ª")
498 |     }
499 |     
500 |     public func streamDidBecomeInactive(_ stream: SCStream) {
    |                 `- note: main actor-isolated instance method 'streamDidBecomeInactive' cannot satisfy nonisolated requirement
501 |         print("‚ö†Ô∏è Â±èÂπïÊçïËé∑ÊµÅÂ∑≤ÂÅúÁî®")
502 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/VideoEncodingTypes.swift:470:10: warning: associated value 'unsupportedCodec' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoCodec'
  8 | 
  9 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®Êûö‰∏æ
 10 | public enum SkyBridgeVideoCodec: String, CaseIterable {
    |             `- note: consider making enum 'SkyBridgeVideoCodec' conform to the 'Sendable' protocol
 11 |     case h264 = "H.264"
 12 |     case h265 = "H.265"
    :
468 |     case propertySetFailed(String, OSStatus)
469 |     case propertyUpdateFailed(OSStatus)
470 |     case unsupportedCodec(SkyBridgeVideoCodec)
    |          `- warning: associated value 'unsupportedCodec' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoCodec'
471 |     case unsupportedResolution(CGSize)
472 |     case unsupportedProfile(SkyBridgeVideoProfile)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/VideoEncodingTypes.swift:472:10: warning: associated value 'unsupportedProfile' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoProfile'
 45 | 
 46 | /// ËßÜÈ¢ëÁºñÁ†ÅÈÖçÁΩÆÊñá‰ª∂Êûö‰∏æ
 47 | public enum SkyBridgeVideoProfile: String, CaseIterable {
    |             `- note: consider making enum 'SkyBridgeVideoProfile' conform to the 'Sendable' protocol
 48 |     case h264Baseline = "H.264 Baseline"
 49 |     case h264Main = "H.264 Main"
    :
470 |     case unsupportedCodec(SkyBridgeVideoCodec)
471 |     case unsupportedResolution(CGSize)
472 |     case unsupportedProfile(SkyBridgeVideoProfile)
    |          `- warning: associated value 'unsupportedProfile' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoProfile'
473 |     case invalidConfiguration(String)
474 |     case hardwareNotAvailable

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:70:27: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 59 |     // MARK: - ÈÖçÁΩÆ
 60 |     
 61 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 62 |         public let enableAIInference: Bool
 63 |         public let enableMetalFX: Bool
    :
 68 |         public let aiModelPath: String?
 69 |         
 70 |         public static let `default` = Configuration(
    |                           |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 71 |             enableAIInference: true,
 72 |             enableMetalFX: true,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:80:27: error: static property 'performance' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 59 |     // MARK: - ÈÖçÁΩÆ
 60 |     
 61 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 62 |         public let enableAIInference: Bool
 63 |         public let enableMetalFX: Bool
    :
 78 |         )
 79 |         
 80 |         public static let performance = Configuration(
    |                           |- error: static property 'performance' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'performance' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 81 |             enableAIInference: false,
 82 |             enableMetalFX: true,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:90:27: error: static property 'quality' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 59 |     // MARK: - ÈÖçÁΩÆ
 60 |     
 61 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 62 |         public let enableAIInference: Bool
 63 |         public let enableMetalFX: Bool
    :
 88 |         )
 89 |         
 90 |         public static let quality = Configuration(
    |                           |- error: static property 'quality' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'quality' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 91 |             enableAIInference: true,
 92 |             enableMetalFX: true,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:375:23: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
342 | 
343 | /// P2PÂÆâÂÖ®ÈÖçÁΩÆ
344 | public struct P2PSecurityConfiguration: Codable {
    |               `- note: consider making struct 'P2PSecurityConfiguration' conform to the 'Sendable' protocol
345 |     /// ‰ºöËØùÂØÜÈí•ÊúâÊïàÊúüÔºàÁßíÔºâ
346 |     public let sessionKeyLifetime: TimeInterval
    :
373 |     
374 |     /// ÈªòËÆ§ÂÆâÂÖ®ÈÖçÁΩÆ
375 |     public static let `default` = P2PSecurityConfiguration()
    |                       |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
376 |     
377 |     /// È´òÂÆâÂÖ®Á∫ßÂà´ÈÖçÁΩÆ

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:378:23: error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
342 | 
343 | /// P2PÂÆâÂÖ®ÈÖçÁΩÆ
344 | public struct P2PSecurityConfiguration: Codable {
    |               `- note: consider making struct 'P2PSecurityConfiguration' conform to the 'Sendable' protocol
345 |     /// ‰ºöËØùÂØÜÈí•ÊúâÊïàÊúüÔºàÁßíÔºâ
346 |     public let sessionKeyLifetime: TimeInterval
    :
376 |     
377 |     /// È´òÂÆâÂÖ®Á∫ßÂà´ÈÖçÁΩÆ
378 |     public static let highSecurity = P2PSecurityConfiguration(
    |                       |- error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'highSecurity' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
379 |         sessionKeyLifetime: 1800,       // 30ÂàÜÈíü
380 |         challengeLifetime: 120,         // 2ÂàÜÈíü

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:388:23: error: static property 'lowSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
342 | 
343 | /// P2PÂÆâÂÖ®ÈÖçÁΩÆ
344 | public struct P2PSecurityConfiguration: Codable {
    |               `- note: consider making struct 'P2PSecurityConfiguration' conform to the 'Sendable' protocol
345 |     /// ‰ºöËØùÂØÜÈí•ÊúâÊïàÊúüÔºàÁßíÔºâ
346 |     public let sessionKeyLifetime: TimeInterval
    :
386 |     
387 |     /// ‰ΩéÂÆâÂÖ®Á∫ßÂà´ÈÖçÁΩÆÔºàÁî®‰∫éÂºÄÂèëÊµãËØïÔºâ
388 |     public static let lowSecurity = P2PSecurityConfiguration(
    |                       |- error: static property 'lowSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'lowSecurity' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
389 |         sessionKeyLifetime: 7200,       // 2Â∞èÊó∂
390 |         challengeLifetime: 600,         // 10ÂàÜÈíü

[#ConformanceIsolation]: <https://docs.swift.org/compiler/documentation/diagnostics/conformance-isolation>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[128/160] Compiling SkyBridgeCore SystemMetricsService.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:111:39: warning: capture of 'session' with non-Sendable type 'AuthSession' in a '@Sendable' closure [#SendableClosureCaptures]
109 |         await withCheckedContinuation { (continuation: CheckedContinuation<Void, Never>) in
110 |             queue.async(flags: .barrier) {
111 |                 self.currentSession = session
    |                                       `- warning: capture of 'session' with non-Sendable type 'AuthSession' in a '@Sendable' closure [#SendableClosureCaptures]
112 |                 self.log.info("Bind authentication session for \(session.userIdentifier)")
113 |                 continuation.resume()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Models.swift:7:15: note: consider making struct 'AuthSession' conform to the 'Sendable' protocol
  5 | 
  6 | /// Ë°®Á§∫ÂΩìÂâçÁôªÂΩïÁî®Êà∑ÁöÑÂÆâÂÖ®‰ºöËØù‰ø°ÊÅØ„ÄÇ
  7 | public struct AuthSession: Codable, Hashable {
    |               `- note: consider making struct 'AuthSession' conform to the 'Sendable' protocol
  8 |     /// ÂêéÁ´ØÈ¢ÅÂèëÁöÑËÆøÈóÆ‰ª§Áâå„ÄÇ
  9 |     public let accessToken: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:111:22: warning: main actor-isolated property 'currentSession' can not be mutated from a Sendable closure
101 |     private let queue = DispatchQueue(label: "com.skybridge.compass.tenants", attributes: .concurrent)
102 |     private var didBootstrap = false
103 |     private var currentSession: AuthSession?
    |                 `- note: mutation of this property is only permitted within the actor
104 | 
105 |     private init() {}
    :
109 |         await withCheckedContinuation { (continuation: CheckedContinuation<Void, Never>) in
110 |             queue.async(flags: .barrier) {
111 |                 self.currentSession = session
    |                      `- warning: main actor-isolated property 'currentSession' can not be mutated from a Sendable closure
112 |                 self.log.info("Bind authentication session for \(session.userIdentifier)")
113 |                 continuation.resume()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:112:66: warning: implicit capture of 'session' requires that 'AuthSession' conforms to 'Sendable'
110 |             queue.async(flags: .barrier) {
111 |                 self.currentSession = session
112 |                 self.log.info("Bind authentication session for \(session.userIdentifier)")
    |                                                                  `- warning: implicit capture of 'session' requires that 'AuthSession' conforms to 'Sendable'
113 |                 continuation.resume()
114 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Models.swift:7:15: note: consider making struct 'AuthSession' conform to the 'Sendable' protocol
  5 | 
  6 | /// Ë°®Á§∫ÂΩìÂâçÁôªÂΩïÁî®Êà∑ÁöÑÂÆâÂÖ®‰ºöËØù‰ø°ÊÅØ„ÄÇ
  7 | public struct AuthSession: Codable, Hashable {
    |               `- note: consider making struct 'AuthSession' conform to the 'Sendable' protocol
  8 |     /// ÂêéÁ´ØÈ¢ÅÂèëÁöÑËÆøÈóÆ‰ª§Áâå„ÄÇ
  9 |     public let accessToken: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:122:22: warning: main actor-isolated property 'currentSession' can not be mutated from a Sendable closure
101 |     private let queue = DispatchQueue(label: "com.skybridge.compass.tenants", attributes: .concurrent)
102 |     private var didBootstrap = false
103 |     private var currentSession: AuthSession?
    |                 `- note: mutation of this property is only permitted within the actor
104 | 
105 |     private init() {}
    :
120 |         await withCheckedContinuation { continuation in
121 |             queue.async(flags: .barrier) {
122 |                 self.currentSession = nil
    |                      `- warning: main actor-isolated property 'currentSession' can not be mutated from a Sendable closure
123 |                 continuation.resume()
124 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:135:25: warning: main actor-isolated property 'didBootstrap' can not be referenced from a Sendable closure
100 |     private let activeTenantSubject = CurrentValueSubject<TenantDescriptor?, Never>(nil)
101 |     private let queue = DispatchQueue(label: "com.skybridge.compass.tenants", attributes: .concurrent)
102 |     private var didBootstrap = false
    |                 `- note: property declared here
103 |     private var currentSession: AuthSession?
104 | 
    :
133 |     public func bootstrap() {
134 |         queue.async(flags: .barrier) {
135 |             guard !self.didBootstrap else { return }
    |                         `- warning: main actor-isolated property 'didBootstrap' can not be referenced from a Sendable closure
136 |             self.loadFromDisk()
137 |             self.didBootstrap = true

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:136:18: warning: call to main actor-isolated instance method 'loadFromDisk()' in a synchronous nonisolated context [#ActorIsolatedCall]
134 |         queue.async(flags: .barrier) {
135 |             guard !self.didBootstrap else { return }
136 |             self.loadFromDisk()
    |                  `- warning: call to main actor-isolated instance method 'loadFromDisk()' in a synchronous nonisolated context [#ActorIsolatedCall]
137 |             self.didBootstrap = true
138 |         }
    :
210 |     }
211 | 
212 |     private func loadFromDisk() {
    |                  `- note: calls to instance method 'loadFromDisk()' from outside of its actor context are implicitly asynchronous
213 |         let defaults = UserDefaults.standard
214 |         if let data = defaults.data(forKey: storageKey) {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:137:18: warning: main actor-isolated property 'didBootstrap' can not be mutated from a Sendable closure
100 |     private let activeTenantSubject = CurrentValueSubject<TenantDescriptor?, Never>(nil)
101 |     private let queue = DispatchQueue(label: "com.skybridge.compass.tenants", attributes: .concurrent)
102 |     private var didBootstrap = false
    |                 `- note: mutation of this property is only permitted within the actor
103 |     private var currentSession: AuthSession?
104 | 
    :
135 |             guard !self.didBootstrap else { return }
136 |             self.loadFromDisk()
137 |             self.didBootstrap = true
    |                  `- warning: main actor-isolated property 'didBootstrap' can not be mutated from a Sendable closure
138 |         }
139 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:147:13: warning: variable 'tenant' was never mutated; consider changing to 'let' constant
145 |                                 domain: String?,
146 |                                 permissions: TenantPermission) throws -> TenantDescriptor {
147 |         var tenant = TenantDescriptor(displayName: displayName,
    |             `- warning: variable 'tenant' was never mutated; consider changing to 'let' constant
148 |                                       username: username,
149 |                                       domain: domain,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:45:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 43 |             }
 44 |             .navigationTitle("ËÆæÂ§áËØ¶ÊÉÖ")
 45 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 46 |             .toolbar {
 47 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:47:41: error: 'navigationBarLeading' is unavailable in macOS
 45 |             .navigationBarTitleDisplayMode(.inline)
 46 |             .toolbar {
 47 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
 48 |                     Button("ÂÖ≥Èó≠") {
 49 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:53:41: error: 'navigationBarTrailing' is unavailable in macOS
 51 |                 }
 52 |                 
 53 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
 54 |                     Button("È´òÁ∫ß") {
 55 |                         showingAdvancedSettings.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:103:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
101 |         }
102 |         .padding()
103 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
104 |         .cornerRadius(12)
105 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:155:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
153 |         }
154 |         .padding()
155 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
156 |         .cornerRadius(12)
157 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:205:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
203 |         }
204 |         .padding()
205 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
206 |         .cornerRadius(12)
207 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:355:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
353 |         }
354 |         .padding()
355 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
356 |         .cornerRadius(12)
357 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:363:15: error: type 'P2PDeviceType' has no member 'mac'
361 |     private var deviceIcon: String {
362 |         switch device.deviceType {
363 |         case .mac:
    |               `- error: type 'P2PDeviceType' has no member 'mac'
364 |             return "desktopcomputer"
365 |         case .iPhone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:365:15: error: type 'P2PDeviceType' has no member 'iPhone'
363 |         case .mac:
364 |             return "desktopcomputer"
365 |         case .iPhone:
    |               `- error: type 'P2PDeviceType' has no member 'iPhone'
366 |             return "iphone"
367 |         case .iPad:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:367:15: error: type 'P2PDeviceType' has no member 'iPad'
365 |         case .iPhone:
366 |             return "iphone"
367 |         case .iPad:
    |               `- error: type 'P2PDeviceType' has no member 'iPad'
368 |             return "ipad"
369 |         case .windows:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:373:15: error: type 'P2PDeviceType' has no member 'unknown'
371 |         case .android:
372 |             return "smartphone"
373 |         case .unknown:
    |               `- error: type 'P2PDeviceType' has no member 'unknown'
374 |             return "questionmark.circle"
375 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:387:25: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificate' using key path from root type 'P2PSecurityManager'
385 |     
386 |     private var hasValidCertificate: Bool {
387 |         securityManager.hasValidCertificate(for: device.deviceId)
    |                         `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificate' using key path from root type 'P2PSecurityManager'
388 |     }
389 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:387:9: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
385 |     
386 |     private var hasValidCertificate: Bool {
387 |         securityManager.hasValidCertificate(for: device.deviceId)
    |         `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
388 |     }
389 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:387:25: error: cannot call value of non-function type 'Binding<Subject>'
385 |     
386 |     private var hasValidCertificate: Bool {
387 |         securityManager.hasValidCertificate(for: device.deviceId)
    |                         `- error: cannot call value of non-function type 'Binding<Subject>'
388 |     }
389 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:432:58: error: missing arguments for parameters 'connectionEstablished', 'connectionFailed' in call
430 |         Task {
431 |             do {
432 |                 try await networkManager.connectToDevice(device)
    |                                                          `- error: missing arguments for parameters 'connectionEstablished', 'connectionFailed' in call
433 |                 await MainActor.run {
434 |                     isConnecting = false

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:87:17: note: 'connectToDevice(_:connectionEstablished:connectionFailed:)' declared here
 85 |     
 86 |     /// ËøûÊé•Âà∞ËÆæÂ§á
 87 |     public func connectToDevice(_ device: P2PDevice,
    |                 `- note: 'connectToDevice(_:connectionEstablished:connectionFailed:)' declared here
 88 |                                connectionEstablished: @escaping () -> Void,
 89 |                                connectionFailed: @escaping (Error) -> Void) {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:493:33: error: value of type 'P2PConnectionQuality' has no member 'signalStrength'
491 |     
492 |     private func qualityColor(for index: Int, quality: P2PConnectionQuality) -> Color {
493 |         let level = Int(quality.signalStrength * 5)
    |                                 `- error: value of type 'P2PConnectionQuality' has no member 'signalStrength'
494 |         return index < level ? .green : .gray.opacity(0.3)
495 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:558:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
556 |             }
557 |             .navigationTitle("ÂÆâÂÖ®ÈÄâÈ°π")
558 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
559 |             .toolbar {
560 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:560:41: error: 'navigationBarTrailing' is unavailable in macOS
558 |             .navigationBarTitleDisplayMode(.inline)
559 |             .toolbar {
560 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
561 |                     Button("ÂÆåÊàê") {
562 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[129/160] Compiling SkyBridgeCore TenantAccessController.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:111:39: warning: capture of 'session' with non-Sendable type 'AuthSession' in a '@Sendable' closure [#SendableClosureCaptures]
109 |         await withCheckedContinuation { (continuation: CheckedContinuation<Void, Never>) in
110 |             queue.async(flags: .barrier) {
111 |                 self.currentSession = session
    |                                       `- warning: capture of 'session' with non-Sendable type 'AuthSession' in a '@Sendable' closure [#SendableClosureCaptures]
112 |                 self.log.info("Bind authentication session for \(session.userIdentifier)")
113 |                 continuation.resume()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Models.swift:7:15: note: consider making struct 'AuthSession' conform to the 'Sendable' protocol
  5 | 
  6 | /// Ë°®Á§∫ÂΩìÂâçÁôªÂΩïÁî®Êà∑ÁöÑÂÆâÂÖ®‰ºöËØù‰ø°ÊÅØ„ÄÇ
  7 | public struct AuthSession: Codable, Hashable {
    |               `- note: consider making struct 'AuthSession' conform to the 'Sendable' protocol
  8 |     /// ÂêéÁ´ØÈ¢ÅÂèëÁöÑËÆøÈóÆ‰ª§Áâå„ÄÇ
  9 |     public let accessToken: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:111:22: warning: main actor-isolated property 'currentSession' can not be mutated from a Sendable closure
101 |     private let queue = DispatchQueue(label: "com.skybridge.compass.tenants", attributes: .concurrent)
102 |     private var didBootstrap = false
103 |     private var currentSession: AuthSession?
    |                 `- note: mutation of this property is only permitted within the actor
104 | 
105 |     private init() {}
    :
109 |         await withCheckedContinuation { (continuation: CheckedContinuation<Void, Never>) in
110 |             queue.async(flags: .barrier) {
111 |                 self.currentSession = session
    |                      `- warning: main actor-isolated property 'currentSession' can not be mutated from a Sendable closure
112 |                 self.log.info("Bind authentication session for \(session.userIdentifier)")
113 |                 continuation.resume()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:112:66: warning: implicit capture of 'session' requires that 'AuthSession' conforms to 'Sendable'
110 |             queue.async(flags: .barrier) {
111 |                 self.currentSession = session
112 |                 self.log.info("Bind authentication session for \(session.userIdentifier)")
    |                                                                  `- warning: implicit capture of 'session' requires that 'AuthSession' conforms to 'Sendable'
113 |                 continuation.resume()
114 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Models.swift:7:15: note: consider making struct 'AuthSession' conform to the 'Sendable' protocol
  5 | 
  6 | /// Ë°®Á§∫ÂΩìÂâçÁôªÂΩïÁî®Êà∑ÁöÑÂÆâÂÖ®‰ºöËØù‰ø°ÊÅØ„ÄÇ
  7 | public struct AuthSession: Codable, Hashable {
    |               `- note: consider making struct 'AuthSession' conform to the 'Sendable' protocol
  8 |     /// ÂêéÁ´ØÈ¢ÅÂèëÁöÑËÆøÈóÆ‰ª§Áâå„ÄÇ
  9 |     public let accessToken: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:122:22: warning: main actor-isolated property 'currentSession' can not be mutated from a Sendable closure
101 |     private let queue = DispatchQueue(label: "com.skybridge.compass.tenants", attributes: .concurrent)
102 |     private var didBootstrap = false
103 |     private var currentSession: AuthSession?
    |                 `- note: mutation of this property is only permitted within the actor
104 | 
105 |     private init() {}
    :
120 |         await withCheckedContinuation { continuation in
121 |             queue.async(flags: .barrier) {
122 |                 self.currentSession = nil
    |                      `- warning: main actor-isolated property 'currentSession' can not be mutated from a Sendable closure
123 |                 continuation.resume()
124 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:135:25: warning: main actor-isolated property 'didBootstrap' can not be referenced from a Sendable closure
100 |     private let activeTenantSubject = CurrentValueSubject<TenantDescriptor?, Never>(nil)
101 |     private let queue = DispatchQueue(label: "com.skybridge.compass.tenants", attributes: .concurrent)
102 |     private var didBootstrap = false
    |                 `- note: property declared here
103 |     private var currentSession: AuthSession?
104 | 
    :
133 |     public func bootstrap() {
134 |         queue.async(flags: .barrier) {
135 |             guard !self.didBootstrap else { return }
    |                         `- warning: main actor-isolated property 'didBootstrap' can not be referenced from a Sendable closure
136 |             self.loadFromDisk()
137 |             self.didBootstrap = true

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:136:18: warning: call to main actor-isolated instance method 'loadFromDisk()' in a synchronous nonisolated context [#ActorIsolatedCall]
134 |         queue.async(flags: .barrier) {
135 |             guard !self.didBootstrap else { return }
136 |             self.loadFromDisk()
    |                  `- warning: call to main actor-isolated instance method 'loadFromDisk()' in a synchronous nonisolated context [#ActorIsolatedCall]
137 |             self.didBootstrap = true
138 |         }
    :
210 |     }
211 | 
212 |     private func loadFromDisk() {
    |                  `- note: calls to instance method 'loadFromDisk()' from outside of its actor context are implicitly asynchronous
213 |         let defaults = UserDefaults.standard
214 |         if let data = defaults.data(forKey: storageKey) {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:137:18: warning: main actor-isolated property 'didBootstrap' can not be mutated from a Sendable closure
100 |     private let activeTenantSubject = CurrentValueSubject<TenantDescriptor?, Never>(nil)
101 |     private let queue = DispatchQueue(label: "com.skybridge.compass.tenants", attributes: .concurrent)
102 |     private var didBootstrap = false
    |                 `- note: mutation of this property is only permitted within the actor
103 |     private var currentSession: AuthSession?
104 | 
    :
135 |             guard !self.didBootstrap else { return }
136 |             self.loadFromDisk()
137 |             self.didBootstrap = true
    |                  `- warning: main actor-isolated property 'didBootstrap' can not be mutated from a Sendable closure
138 |         }
139 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:147:13: warning: variable 'tenant' was never mutated; consider changing to 'let' constant
145 |                                 domain: String?,
146 |                                 permissions: TenantPermission) throws -> TenantDescriptor {
147 |         var tenant = TenantDescriptor(displayName: displayName,
    |             `- warning: variable 'tenant' was never mutated; consider changing to 'let' constant
148 |                                       username: username,
149 |                                       domain: domain,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:45:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 43 |             }
 44 |             .navigationTitle("ËÆæÂ§áËØ¶ÊÉÖ")
 45 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 46 |             .toolbar {
 47 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:47:41: error: 'navigationBarLeading' is unavailable in macOS
 45 |             .navigationBarTitleDisplayMode(.inline)
 46 |             .toolbar {
 47 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
 48 |                     Button("ÂÖ≥Èó≠") {
 49 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:53:41: error: 'navigationBarTrailing' is unavailable in macOS
 51 |                 }
 52 |                 
 53 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
 54 |                     Button("È´òÁ∫ß") {
 55 |                         showingAdvancedSettings.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:103:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
101 |         }
102 |         .padding()
103 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
104 |         .cornerRadius(12)
105 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:155:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
153 |         }
154 |         .padding()
155 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
156 |         .cornerRadius(12)
157 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:205:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
203 |         }
204 |         .padding()
205 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
206 |         .cornerRadius(12)
207 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:355:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
353 |         }
354 |         .padding()
355 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
356 |         .cornerRadius(12)
357 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:363:15: error: type 'P2PDeviceType' has no member 'mac'
361 |     private var deviceIcon: String {
362 |         switch device.deviceType {
363 |         case .mac:
    |               `- error: type 'P2PDeviceType' has no member 'mac'
364 |             return "desktopcomputer"
365 |         case .iPhone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:365:15: error: type 'P2PDeviceType' has no member 'iPhone'
363 |         case .mac:
364 |             return "desktopcomputer"
365 |         case .iPhone:
    |               `- error: type 'P2PDeviceType' has no member 'iPhone'
366 |             return "iphone"
367 |         case .iPad:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:367:15: error: type 'P2PDeviceType' has no member 'iPad'
365 |         case .iPhone:
366 |             return "iphone"
367 |         case .iPad:
    |               `- error: type 'P2PDeviceType' has no member 'iPad'
368 |             return "ipad"
369 |         case .windows:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:373:15: error: type 'P2PDeviceType' has no member 'unknown'
371 |         case .android:
372 |             return "smartphone"
373 |         case .unknown:
    |               `- error: type 'P2PDeviceType' has no member 'unknown'
374 |             return "questionmark.circle"
375 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:387:25: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificate' using key path from root type 'P2PSecurityManager'
385 |     
386 |     private var hasValidCertificate: Bool {
387 |         securityManager.hasValidCertificate(for: device.deviceId)
    |                         `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificate' using key path from root type 'P2PSecurityManager'
388 |     }
389 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:387:9: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
385 |     
386 |     private var hasValidCertificate: Bool {
387 |         securityManager.hasValidCertificate(for: device.deviceId)
    |         `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
388 |     }
389 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:387:25: error: cannot call value of non-function type 'Binding<Subject>'
385 |     
386 |     private var hasValidCertificate: Bool {
387 |         securityManager.hasValidCertificate(for: device.deviceId)
    |                         `- error: cannot call value of non-function type 'Binding<Subject>'
388 |     }
389 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:432:58: error: missing arguments for parameters 'connectionEstablished', 'connectionFailed' in call
430 |         Task {
431 |             do {
432 |                 try await networkManager.connectToDevice(device)
    |                                                          `- error: missing arguments for parameters 'connectionEstablished', 'connectionFailed' in call
433 |                 await MainActor.run {
434 |                     isConnecting = false

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:87:17: note: 'connectToDevice(_:connectionEstablished:connectionFailed:)' declared here
 85 |     
 86 |     /// ËøûÊé•Âà∞ËÆæÂ§á
 87 |     public func connectToDevice(_ device: P2PDevice,
    |                 `- note: 'connectToDevice(_:connectionEstablished:connectionFailed:)' declared here
 88 |                                connectionEstablished: @escaping () -> Void,
 89 |                                connectionFailed: @escaping (Error) -> Void) {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:493:33: error: value of type 'P2PConnectionQuality' has no member 'signalStrength'
491 |     
492 |     private func qualityColor(for index: Int, quality: P2PConnectionQuality) -> Color {
493 |         let level = Int(quality.signalStrength * 5)
    |                                 `- error: value of type 'P2PConnectionQuality' has no member 'signalStrength'
494 |         return index < level ? .green : .gray.opacity(0.3)
495 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:558:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
556 |             }
557 |             .navigationTitle("ÂÆâÂÖ®ÈÄâÈ°π")
558 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
559 |             .toolbar {
560 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:560:41: error: 'navigationBarTrailing' is unavailable in macOS
558 |             .navigationBarTitleDisplayMode(.inline)
559 |             .toolbar {
560 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
561 |                     Button("ÂÆåÊàê") {
562 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[130/160] Compiling SkyBridgeCore ConnectionDetailsView.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:111:39: warning: capture of 'session' with non-Sendable type 'AuthSession' in a '@Sendable' closure [#SendableClosureCaptures]
109 |         await withCheckedContinuation { (continuation: CheckedContinuation<Void, Never>) in
110 |             queue.async(flags: .barrier) {
111 |                 self.currentSession = session
    |                                       `- warning: capture of 'session' with non-Sendable type 'AuthSession' in a '@Sendable' closure [#SendableClosureCaptures]
112 |                 self.log.info("Bind authentication session for \(session.userIdentifier)")
113 |                 continuation.resume()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Models.swift:7:15: note: consider making struct 'AuthSession' conform to the 'Sendable' protocol
  5 | 
  6 | /// Ë°®Á§∫ÂΩìÂâçÁôªÂΩïÁî®Êà∑ÁöÑÂÆâÂÖ®‰ºöËØù‰ø°ÊÅØ„ÄÇ
  7 | public struct AuthSession: Codable, Hashable {
    |               `- note: consider making struct 'AuthSession' conform to the 'Sendable' protocol
  8 |     /// ÂêéÁ´ØÈ¢ÅÂèëÁöÑËÆøÈóÆ‰ª§Áâå„ÄÇ
  9 |     public let accessToken: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:111:22: warning: main actor-isolated property 'currentSession' can not be mutated from a Sendable closure
101 |     private let queue = DispatchQueue(label: "com.skybridge.compass.tenants", attributes: .concurrent)
102 |     private var didBootstrap = false
103 |     private var currentSession: AuthSession?
    |                 `- note: mutation of this property is only permitted within the actor
104 | 
105 |     private init() {}
    :
109 |         await withCheckedContinuation { (continuation: CheckedContinuation<Void, Never>) in
110 |             queue.async(flags: .barrier) {
111 |                 self.currentSession = session
    |                      `- warning: main actor-isolated property 'currentSession' can not be mutated from a Sendable closure
112 |                 self.log.info("Bind authentication session for \(session.userIdentifier)")
113 |                 continuation.resume()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:112:66: warning: implicit capture of 'session' requires that 'AuthSession' conforms to 'Sendable'
110 |             queue.async(flags: .barrier) {
111 |                 self.currentSession = session
112 |                 self.log.info("Bind authentication session for \(session.userIdentifier)")
    |                                                                  `- warning: implicit capture of 'session' requires that 'AuthSession' conforms to 'Sendable'
113 |                 continuation.resume()
114 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Models.swift:7:15: note: consider making struct 'AuthSession' conform to the 'Sendable' protocol
  5 | 
  6 | /// Ë°®Á§∫ÂΩìÂâçÁôªÂΩïÁî®Êà∑ÁöÑÂÆâÂÖ®‰ºöËØù‰ø°ÊÅØ„ÄÇ
  7 | public struct AuthSession: Codable, Hashable {
    |               `- note: consider making struct 'AuthSession' conform to the 'Sendable' protocol
  8 |     /// ÂêéÁ´ØÈ¢ÅÂèëÁöÑËÆøÈóÆ‰ª§Áâå„ÄÇ
  9 |     public let accessToken: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:122:22: warning: main actor-isolated property 'currentSession' can not be mutated from a Sendable closure
101 |     private let queue = DispatchQueue(label: "com.skybridge.compass.tenants", attributes: .concurrent)
102 |     private var didBootstrap = false
103 |     private var currentSession: AuthSession?
    |                 `- note: mutation of this property is only permitted within the actor
104 | 
105 |     private init() {}
    :
120 |         await withCheckedContinuation { continuation in
121 |             queue.async(flags: .barrier) {
122 |                 self.currentSession = nil
    |                      `- warning: main actor-isolated property 'currentSession' can not be mutated from a Sendable closure
123 |                 continuation.resume()
124 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:135:25: warning: main actor-isolated property 'didBootstrap' can not be referenced from a Sendable closure
100 |     private let activeTenantSubject = CurrentValueSubject<TenantDescriptor?, Never>(nil)
101 |     private let queue = DispatchQueue(label: "com.skybridge.compass.tenants", attributes: .concurrent)
102 |     private var didBootstrap = false
    |                 `- note: property declared here
103 |     private var currentSession: AuthSession?
104 | 
    :
133 |     public func bootstrap() {
134 |         queue.async(flags: .barrier) {
135 |             guard !self.didBootstrap else { return }
    |                         `- warning: main actor-isolated property 'didBootstrap' can not be referenced from a Sendable closure
136 |             self.loadFromDisk()
137 |             self.didBootstrap = true

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:136:18: warning: call to main actor-isolated instance method 'loadFromDisk()' in a synchronous nonisolated context [#ActorIsolatedCall]
134 |         queue.async(flags: .barrier) {
135 |             guard !self.didBootstrap else { return }
136 |             self.loadFromDisk()
    |                  `- warning: call to main actor-isolated instance method 'loadFromDisk()' in a synchronous nonisolated context [#ActorIsolatedCall]
137 |             self.didBootstrap = true
138 |         }
    :
210 |     }
211 | 
212 |     private func loadFromDisk() {
    |                  `- note: calls to instance method 'loadFromDisk()' from outside of its actor context are implicitly asynchronous
213 |         let defaults = UserDefaults.standard
214 |         if let data = defaults.data(forKey: storageKey) {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:137:18: warning: main actor-isolated property 'didBootstrap' can not be mutated from a Sendable closure
100 |     private let activeTenantSubject = CurrentValueSubject<TenantDescriptor?, Never>(nil)
101 |     private let queue = DispatchQueue(label: "com.skybridge.compass.tenants", attributes: .concurrent)
102 |     private var didBootstrap = false
    |                 `- note: mutation of this property is only permitted within the actor
103 |     private var currentSession: AuthSession?
104 | 
    :
135 |             guard !self.didBootstrap else { return }
136 |             self.loadFromDisk()
137 |             self.didBootstrap = true
    |                  `- warning: main actor-isolated property 'didBootstrap' can not be mutated from a Sendable closure
138 |         }
139 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/TenantAccessController.swift:147:13: warning: variable 'tenant' was never mutated; consider changing to 'let' constant
145 |                                 domain: String?,
146 |                                 permissions: TenantPermission) throws -> TenantDescriptor {
147 |         var tenant = TenantDescriptor(displayName: displayName,
    |             `- warning: variable 'tenant' was never mutated; consider changing to 'let' constant
148 |                                       username: username,
149 |                                       domain: domain,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:45:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 43 |             }
 44 |             .navigationTitle("ËÆæÂ§áËØ¶ÊÉÖ")
 45 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 46 |             .toolbar {
 47 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:47:41: error: 'navigationBarLeading' is unavailable in macOS
 45 |             .navigationBarTitleDisplayMode(.inline)
 46 |             .toolbar {
 47 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
 48 |                     Button("ÂÖ≥Èó≠") {
 49 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:53:41: error: 'navigationBarTrailing' is unavailable in macOS
 51 |                 }
 52 |                 
 53 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
 54 |                     Button("È´òÁ∫ß") {
 55 |                         showingAdvancedSettings.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:103:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
101 |         }
102 |         .padding()
103 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
104 |         .cornerRadius(12)
105 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:155:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
153 |         }
154 |         .padding()
155 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
156 |         .cornerRadius(12)
157 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:205:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
203 |         }
204 |         .padding()
205 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
206 |         .cornerRadius(12)
207 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:355:28: error: reference to member 'systemGray6' cannot be resolved without a contextual type
353 |         }
354 |         .padding()
355 |         .background(Color(.systemGray6))
    |                            `- error: reference to member 'systemGray6' cannot be resolved without a contextual type
356 |         .cornerRadius(12)
357 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:363:15: error: type 'P2PDeviceType' has no member 'mac'
361 |     private var deviceIcon: String {
362 |         switch device.deviceType {
363 |         case .mac:
    |               `- error: type 'P2PDeviceType' has no member 'mac'
364 |             return "desktopcomputer"
365 |         case .iPhone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:365:15: error: type 'P2PDeviceType' has no member 'iPhone'
363 |         case .mac:
364 |             return "desktopcomputer"
365 |         case .iPhone:
    |               `- error: type 'P2PDeviceType' has no member 'iPhone'
366 |             return "iphone"
367 |         case .iPad:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:367:15: error: type 'P2PDeviceType' has no member 'iPad'
365 |         case .iPhone:
366 |             return "iphone"
367 |         case .iPad:
    |               `- error: type 'P2PDeviceType' has no member 'iPad'
368 |             return "ipad"
369 |         case .windows:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:373:15: error: type 'P2PDeviceType' has no member 'unknown'
371 |         case .android:
372 |             return "smartphone"
373 |         case .unknown:
    |               `- error: type 'P2PDeviceType' has no member 'unknown'
374 |             return "questionmark.circle"
375 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:387:25: error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificate' using key path from root type 'P2PSecurityManager'
385 |     
386 |     private var hasValidCertificate: Bool {
387 |         securityManager.hasValidCertificate(for: device.deviceId)
    |                         `- error: value of type 'P2PSecurityManager' has no dynamic member 'hasValidCertificate' using key path from root type 'P2PSecurityManager'
388 |     }
389 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:387:9: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
385 |     
386 |     private var hasValidCertificate: Bool {
387 |         securityManager.hasValidCertificate(for: device.deviceId)
    |         `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'ObservedObject<P2PSecurityManager>.Wrapper'
388 |     }
389 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:387:25: error: cannot call value of non-function type 'Binding<Subject>'
385 |     
386 |     private var hasValidCertificate: Bool {
387 |         securityManager.hasValidCertificate(for: device.deviceId)
    |                         `- error: cannot call value of non-function type 'Binding<Subject>'
388 |     }
389 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:432:58: error: missing arguments for parameters 'connectionEstablished', 'connectionFailed' in call
430 |         Task {
431 |             do {
432 |                 try await networkManager.connectToDevice(device)
    |                                                          `- error: missing arguments for parameters 'connectionEstablished', 'connectionFailed' in call
433 |                 await MainActor.run {
434 |                     isConnecting = false

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkManager.swift:87:17: note: 'connectToDevice(_:connectionEstablished:connectionFailed:)' declared here
 85 |     
 86 |     /// ËøûÊé•Âà∞ËÆæÂ§á
 87 |     public func connectToDevice(_ device: P2PDevice,
    |                 `- note: 'connectToDevice(_:connectionEstablished:connectionFailed:)' declared here
 88 |                                connectionEstablished: @escaping () -> Void,
 89 |                                connectionFailed: @escaping (Error) -> Void) {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:493:33: error: value of type 'P2PConnectionQuality' has no member 'signalStrength'
491 |     
492 |     private func qualityColor(for index: Int, quality: P2PConnectionQuality) -> Color {
493 |         let level = Int(quality.signalStrength * 5)
    |                                 `- error: value of type 'P2PConnectionQuality' has no member 'signalStrength'
494 |         return index < level ? .green : .gray.opacity(0.3)
495 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:558:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
556 |             }
557 |             .navigationTitle("ÂÆâÂÖ®ÈÄâÈ°π")
558 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
559 |             .toolbar {
560 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/UI/ConnectionDetailsView.swift:560:41: error: 'navigationBarTrailing' is unavailable in macOS
558 |             .navigationBarTitleDisplayMode(.inline)
559 |             .toolbar {
560 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
561 |                     Button("ÂÆåÊàê") {
562 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[131/160] Compiling SkyBridgeCore VideoEncodingTypes.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/VideoEncodingTypes.swift:470:10: warning: associated value 'unsupportedCodec' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoCodec'
  8 | 
  9 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®Êûö‰∏æ
 10 | public enum SkyBridgeVideoCodec: String, CaseIterable {
    |             `- note: consider making enum 'SkyBridgeVideoCodec' conform to the 'Sendable' protocol
 11 |     case h264 = "H.264"
 12 |     case h265 = "H.265"
    :
468 |     case propertySetFailed(String, OSStatus)
469 |     case propertyUpdateFailed(OSStatus)
470 |     case unsupportedCodec(SkyBridgeVideoCodec)
    |          `- warning: associated value 'unsupportedCodec' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoCodec'
471 |     case unsupportedResolution(CGSize)
472 |     case unsupportedProfile(SkyBridgeVideoProfile)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/VideoEncodingTypes.swift:472:10: warning: associated value 'unsupportedProfile' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoProfile'
 45 | 
 46 | /// ËßÜÈ¢ëÁºñÁ†ÅÈÖçÁΩÆÊñá‰ª∂Êûö‰∏æ
 47 | public enum SkyBridgeVideoProfile: String, CaseIterable {
    |             `- note: consider making enum 'SkyBridgeVideoProfile' conform to the 'Sendable' protocol
 48 |     case h264Baseline = "H.264 Baseline"
 49 |     case h264Main = "H.264 Main"
    :
470 |     case unsupportedCodec(SkyBridgeVideoCodec)
471 |     case unsupportedResolution(CGSize)
472 |     case unsupportedProfile(SkyBridgeVideoProfile)
    |          `- warning: associated value 'unsupportedProfile' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoProfile'
473 |     case invalidConfiguration(String)
474 |     case hardwareNotAvailable

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:34:13: error: invalid redeclaration of 'RemoteDesktopError'
 32 | import IOKit
 33 | 
 34 | public enum RemoteDesktopError: Error, LocalizedError {
    |             `- error: invalid redeclaration of 'RemoteDesktopError'
 35 |     case missingAddress(DiscoveredDevice)
 36 |     case missingPort(DiscoveredDevice)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:78:18: warning: main actor-isolated property 'activeSessions' can not be referenced from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: property declared here
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
 76 |         monitoringTimer = nil
 77 |         sessionQueue.async(flags: .barrier) {
 78 |             self.activeSessions.values.forEach { $0.stop() }
    |                  `- warning: main actor-isolated property 'activeSessions' can not be referenced from a Sendable closure
 79 |             self.activeSessions.removeAll()
 80 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:78:53: warning: call to main actor-isolated instance method 'stop()' in a synchronous nonisolated context [#ActorIsolatedCall]
 76 |         monitoringTimer = nil
 77 |         sessionQueue.async(flags: .barrier) {
 78 |             self.activeSessions.values.forEach { $0.stop() }
    |                                                     `- warning: call to main actor-isolated instance method 'stop()' in a synchronous nonisolated context [#ActorIsolatedCall]
 79 |             self.activeSessions.removeAll()
 80 |         }
    :
283 |     }
284 | 
285 |     func stop() {
    |          `- note: calls to instance method 'stop()' from outside of its actor context are implicitly asynchronous
286 |         renderer.teardown()
287 |         client.disconnect()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:79:18: warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: mutation of this property is only permitted within the actor
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
 77 |         sessionQueue.async(flags: .barrier) {
 78 |             self.activeSessions.values.forEach { $0.stop() }
 79 |             self.activeSessions.removeAll()
    |                  `- warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 80 |         }
 81 |         cpuTimeline.removeAll()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:89:38: error: type 'RemoteDesktopError' has no member 'missingAddress'
 87 |         let credentials = try await tenantController.credentials(for: tenant.id)
 88 |         guard let host = device.ipv4 ?? device.ipv6 else {
 89 |             throw RemoteDesktopError.missingAddress(device)
    |                                      `- error: type 'RemoteDesktopError' has no member 'missingAddress'
 90 |         }
 91 |         guard let port = resolvePort(for: device), port <= Int(UInt16.max) else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:92:38: error: type 'RemoteDesktopError' has no member 'missingPort'
 90 |         }
 91 |         guard let port = resolvePort(for: device), port <= Int(UInt16.max) else {
 92 |             throw RemoteDesktopError.missingPort(device)
    |                                      `- error: type 'RemoteDesktopError' has no member 'missingPort'
 93 |         }
 94 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:110:18: warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: mutation of this property is only permitted within the actor
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
108 | 
109 |         sessionQueue.async(flags: .barrier) {
110 |             self.activeSessions[session.id] = session
    |                  `- warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
111 |         }
112 |         updateSessionsSnapshot()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:119:22: warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: mutation of this property is only permitted within the actor
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
117 |         } catch {
118 |             sessionQueue.async(flags: .barrier) {
119 |                 self.activeSessions.removeValue(forKey: session.id)
    |                      `- warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
120 |             }
121 |             updateSessionsSnapshot()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:87:31: warning: no 'async' operations occur within 'await' expression
 85 | 
 86 |     public func connect(to device: DiscoveredDevice, tenant: TenantDescriptor) async throws {
 87 |         let credentials = try await tenantController.credentials(for: tenant.id)
    |                               `- warning: no 'async' operations occur within 'await' expression
 88 |         guard let host = device.ipv4 ?? device.ipv6 else {
 89 |             throw RemoteDesktopError.missingAddress(device)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:134:45: warning: call to main actor-isolated instance method 'focus()' in a synchronous nonisolated context [#ActorIsolatedCall]
132 |     public func focus(on sessionID: UUID) {
133 |         sessionQueue.async {
134 |             self.activeSessions[sessionID]?.focus()
    |                                             `- warning: call to main actor-isolated instance method 'focus()' in a synchronous nonisolated context [#ActorIsolatedCall]
135 |         }
136 |     }
    :
289 | 
290 |     @MainActor
291 |     func focus() {
    |          `- note: calls to instance method 'focus()' from outside of its actor context are implicitly asynchronous
292 |         log.info("Focus requested for session \(self.device.name)")
293 |         CGDisplayMoveCursorToPoint(CGMainDisplayID(), CGPoint(x: 0, y: 0))

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:134:18: warning: main actor-isolated property 'activeSessions' can not be referenced from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: property declared here
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
132 |     public func focus(on sessionID: UUID) {
133 |         sessionQueue.async {
134 |             self.activeSessions[sessionID]?.focus()
    |                  `- warning: main actor-isolated property 'activeSessions' can not be referenced from a Sendable closure
135 |         }
136 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:141:39: warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: mutation of this property is only permitted within the actor
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
139 |         await withCheckedContinuation { continuation in
140 |             sessionQueue.async(flags: .barrier) {
141 |                 if let session = self.activeSessions.removeValue(forKey: sessionID) {
    |                                       `- warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
142 |                     session.stop()
143 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:142:29: warning: call to main actor-isolated instance method 'stop()' in a synchronous nonisolated context [#ActorIsolatedCall]
140 |             sessionQueue.async(flags: .barrier) {
141 |                 if let session = self.activeSessions.removeValue(forKey: sessionID) {
142 |                     session.stop()
    |                             `- warning: call to main actor-isolated instance method 'stop()' in a synchronous nonisolated context [#ActorIsolatedCall]
143 |                 }
144 |                 DispatchQueue.main.async {
    :
283 |     }
284 | 
285 |     func stop() {
    |          `- note: calls to instance method 'stop()' from outside of its actor context are implicitly asynchronous
286 |         renderer.teardown()
287 |         client.disconnect()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:181:32: warning: call to main actor-isolated instance method 'fetchCpuLoad()' in a synchronous nonisolated context [#ActorIsolatedCall]
179 |         monitoringTimer = Timer.scheduledTimer(withTimeInterval: 5, repeats: true) { [weak self] _ in
180 |             guard let self = self else { return }
181 |             let cpuLoad = self.fetchCpuLoad()
    |                                `- warning: call to main actor-isolated instance method 'fetchCpuLoad()' in a synchronous nonisolated context [#ActorIsolatedCall]
182 |             self.refreshMetrics(cpuLoad: cpuLoad)
183 |         }
184 |     }
185 | 
186 |     private func fetchCpuLoad() -> Double {
    |                  `- note: calls to instance method 'fetchCpuLoad()' from outside of its actor context are implicitly asynchronous
187 |         var load = host_cpu_load_info()
188 |         var count = mach_msg_type_number_t(MemoryLayout.size(ofValue: load) / MemoryLayout<integer_t>.size)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:182:18: warning: call to main actor-isolated instance method 'refreshMetrics(cpuLoad:)' in a synchronous nonisolated context [#ActorIsolatedCall]
156 |     }
157 | 
158 |     private func refreshMetrics(cpuLoad: Double? = nil) {
    |                  `- note: calls to instance method 'refreshMetrics(cpuLoad:)' from outside of its actor context are implicitly asynchronous
159 |         if let cpuLoad {
160 |             cpuTimeline[Date()] = cpuLoad
    :
180 |             guard let self = self else { return }
181 |             let cpuLoad = self.fetchCpuLoad()
182 |             self.refreshMetrics(cpuLoad: cpuLoad)
    |                  `- warning: call to main actor-isolated instance method 'refreshMetrics(cpuLoad:)' in a synchronous nonisolated context [#ActorIsolatedCall]
183 |         }
184 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:267:66: error: type 'RemoteDesktopError' has no member 'connectionFailed'
265 |             if connectionContinuation != nil {
266 |                 continuationLock.unlock()
267 |                 continuation.resume(throwing: RemoteDesktopError.connectionFailed("ÈáçÂ§çÁöÑËøûÊé•ËØ∑Ê±Ç"))
    |                                                                  `- error: type 'RemoteDesktopError' has no member 'connectionFailed'
268 |                 return
269 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:339:84: error: type 'RemoteDesktopError' has no member 'connectionFailed'
337 |                     self.resolveConnectionContinuation(.success(()))
338 |                 case .failed:
339 |                     self.resolveConnectionContinuation(.failure(RemoteDesktopError.connectionFailed(description)))
    |                                                                                    `- error: type 'RemoteDesktopError' has no member 'connectionFailed'
340 |                 case .disconnected:
341 |                     self.resolveConnectionContinuation(.failure(RemoteDesktopError.connectionFailed("FreeRDP ‰ºöËØùÂ∑≤Êñ≠ÂºÄ")))

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:79:37: warning: immutable value 'device' was never used; consider replacing with '_' or removing it [#no-usage]
 77 |         let delta = interFrameInterval()
 78 |         let bandwidth = calculateBandwidth(bytes: byteCount, delta: delta)
 79 |         guard let textureCache, let device else {
    |                                     `- warning: immutable value 'device' was never used; consider replacing with '_' or removing it [#no-usage]
 80 |             log.error("Metal device unavailable; BGRA frame fallback active")
 81 |             return RenderMetrics(bandwidthMbps: bandwidth, latencyMilliseconds: delta * 1000)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:135:17: warning: capture of 'self' with non-Sendable type 'RemoteFrameRenderer?' in a '@Sendable' closure [#SendableClosureCaptures]
 17 | }
 18 | 
 19 | public final class RemoteFrameRenderer {
    |                    `- note: class 'RemoteFrameRenderer' does not conform to the 'Sendable' protocol
 20 |     private let device: MTLDevice?
 21 |     private let commandQueue: MTLCommandQueue?
    :
133 |         if let textureRef, let texture = CVMetalTextureGetTexture(textureRef) {
134 |             renderQueue.async { [weak self] in
135 |                 self?.frameHandler?(texture)
    |                 `- warning: capture of 'self' with non-Sendable type 'RemoteFrameRenderer?' in a '@Sendable' closure [#SendableClosureCaptures]
136 |             }
137 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:135:37: warning: capture of 'texture' with non-Sendable type 'any MTLTexture' in a '@Sendable' closure [#SendableClosureCaptures]
133 |         if let textureRef, let texture = CVMetalTextureGetTexture(textureRef) {
134 |             renderQueue.async { [weak self] in
135 |                 self?.frameHandler?(texture)
    |                                     `- warning: capture of 'texture' with non-Sendable type 'any MTLTexture' in a '@Sendable' closure [#SendableClosureCaptures]
136 |             }
137 |         }

/Users/macbookpro/Desktop/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/Metal.framework/Headers/MTLTexture.h:313:11: note: protocol 'MTLTexture' does not conform to the 'Sendable' protocol
311 |  */
312 | API_AVAILABLE(macos(10.11), ios(8.0))
313 | @protocol MTLTexture <MTLResource>
    |           `- note: protocol 'MTLTexture' does not conform to the 'Sendable' protocol
314 | 
315 | /*!

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:2:1: warning: add '@preconcurrency' to treat 'Sendable'-related errors from module 'Metal' as warnings
  1 | import Foundation
  2 | import Metal
    | `- warning: add '@preconcurrency' to treat 'Sendable'-related errors from module 'Metal' as warnings
  3 | import VideoToolbox
  4 | import CoreVideo

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:339:23: warning: capture of 'self' with non-Sendable type 'RemoteFrameRenderer?' in a '@Sendable' closure [#SendableClosureCaptures]
 17 | }
 18 | 
 19 | public final class RemoteFrameRenderer {
    |                    `- note: class 'RemoteFrameRenderer' does not conform to the 'Sendable' protocol
 20 |     private let device: MTLDevice?
 21 |     private let commandQueue: MTLCommandQueue?
    :
337 |     private func handleDecompressedFrame(imageBuffer: CVImageBuffer, presentationTimeStamp: CMTime) {
338 |         renderQueue.async { [weak self] in
339 |             guard let self else { return }
    |                       `- warning: capture of 'self' with non-Sendable type 'RemoteFrameRenderer?' in a '@Sendable' closure [#SendableClosureCaptures]
340 |             guard let textureCache else {
341 |                 self.log.error("Missing texture cache; cannot convert decoded frame to Metal texture")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:344:47: warning: capture of 'imageBuffer' with non-Sendable type 'CVImageBuffer' (aka 'CVBuffer') in a '@Sendable' closure [#SendableClosureCaptures]
342 |                 return
343 |             }
344 |             let width = CVPixelBufferGetWidth(imageBuffer)
    |                                               `- warning: capture of 'imageBuffer' with non-Sendable type 'CVImageBuffer' (aka 'CVBuffer') in a '@Sendable' closure [#SendableClosureCaptures]
345 |             let height = CVPixelBufferGetHeight(imageBuffer)
346 |             var textureRef: CVMetalTexture?

CoreVideo.CVBuffer:1:14: note: class 'CVBuffer' does not conform to the 'Sendable' protocol
1 | public class CVBuffer : _CFObject {
  |              `- note: class 'CVBuffer' does not conform to the 'Sendable' protocol
2 | }

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[132/160] Compiling SkyBridgeCore RemoteDesktopManager.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/VideoEncodingTypes.swift:470:10: warning: associated value 'unsupportedCodec' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoCodec'
  8 | 
  9 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®Êûö‰∏æ
 10 | public enum SkyBridgeVideoCodec: String, CaseIterable {
    |             `- note: consider making enum 'SkyBridgeVideoCodec' conform to the 'Sendable' protocol
 11 |     case h264 = "H.264"
 12 |     case h265 = "H.265"
    :
468 |     case propertySetFailed(String, OSStatus)
469 |     case propertyUpdateFailed(OSStatus)
470 |     case unsupportedCodec(SkyBridgeVideoCodec)
    |          `- warning: associated value 'unsupportedCodec' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoCodec'
471 |     case unsupportedResolution(CGSize)
472 |     case unsupportedProfile(SkyBridgeVideoProfile)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/VideoEncodingTypes.swift:472:10: warning: associated value 'unsupportedProfile' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoProfile'
 45 | 
 46 | /// ËßÜÈ¢ëÁºñÁ†ÅÈÖçÁΩÆÊñá‰ª∂Êûö‰∏æ
 47 | public enum SkyBridgeVideoProfile: String, CaseIterable {
    |             `- note: consider making enum 'SkyBridgeVideoProfile' conform to the 'Sendable' protocol
 48 |     case h264Baseline = "H.264 Baseline"
 49 |     case h264Main = "H.264 Main"
    :
470 |     case unsupportedCodec(SkyBridgeVideoCodec)
471 |     case unsupportedResolution(CGSize)
472 |     case unsupportedProfile(SkyBridgeVideoProfile)
    |          `- warning: associated value 'unsupportedProfile' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoProfile'
473 |     case invalidConfiguration(String)
474 |     case hardwareNotAvailable

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:34:13: error: invalid redeclaration of 'RemoteDesktopError'
 32 | import IOKit
 33 | 
 34 | public enum RemoteDesktopError: Error, LocalizedError {
    |             `- error: invalid redeclaration of 'RemoteDesktopError'
 35 |     case missingAddress(DiscoveredDevice)
 36 |     case missingPort(DiscoveredDevice)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:78:18: warning: main actor-isolated property 'activeSessions' can not be referenced from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: property declared here
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
 76 |         monitoringTimer = nil
 77 |         sessionQueue.async(flags: .barrier) {
 78 |             self.activeSessions.values.forEach { $0.stop() }
    |                  `- warning: main actor-isolated property 'activeSessions' can not be referenced from a Sendable closure
 79 |             self.activeSessions.removeAll()
 80 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:78:53: warning: call to main actor-isolated instance method 'stop()' in a synchronous nonisolated context [#ActorIsolatedCall]
 76 |         monitoringTimer = nil
 77 |         sessionQueue.async(flags: .barrier) {
 78 |             self.activeSessions.values.forEach { $0.stop() }
    |                                                     `- warning: call to main actor-isolated instance method 'stop()' in a synchronous nonisolated context [#ActorIsolatedCall]
 79 |             self.activeSessions.removeAll()
 80 |         }
    :
283 |     }
284 | 
285 |     func stop() {
    |          `- note: calls to instance method 'stop()' from outside of its actor context are implicitly asynchronous
286 |         renderer.teardown()
287 |         client.disconnect()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:79:18: warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: mutation of this property is only permitted within the actor
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
 77 |         sessionQueue.async(flags: .barrier) {
 78 |             self.activeSessions.values.forEach { $0.stop() }
 79 |             self.activeSessions.removeAll()
    |                  `- warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 80 |         }
 81 |         cpuTimeline.removeAll()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:89:38: error: type 'RemoteDesktopError' has no member 'missingAddress'
 87 |         let credentials = try await tenantController.credentials(for: tenant.id)
 88 |         guard let host = device.ipv4 ?? device.ipv6 else {
 89 |             throw RemoteDesktopError.missingAddress(device)
    |                                      `- error: type 'RemoteDesktopError' has no member 'missingAddress'
 90 |         }
 91 |         guard let port = resolvePort(for: device), port <= Int(UInt16.max) else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:92:38: error: type 'RemoteDesktopError' has no member 'missingPort'
 90 |         }
 91 |         guard let port = resolvePort(for: device), port <= Int(UInt16.max) else {
 92 |             throw RemoteDesktopError.missingPort(device)
    |                                      `- error: type 'RemoteDesktopError' has no member 'missingPort'
 93 |         }
 94 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:110:18: warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: mutation of this property is only permitted within the actor
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
108 | 
109 |         sessionQueue.async(flags: .barrier) {
110 |             self.activeSessions[session.id] = session
    |                  `- warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
111 |         }
112 |         updateSessionsSnapshot()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:119:22: warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: mutation of this property is only permitted within the actor
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
117 |         } catch {
118 |             sessionQueue.async(flags: .barrier) {
119 |                 self.activeSessions.removeValue(forKey: session.id)
    |                      `- warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
120 |             }
121 |             updateSessionsSnapshot()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:87:31: warning: no 'async' operations occur within 'await' expression
 85 | 
 86 |     public func connect(to device: DiscoveredDevice, tenant: TenantDescriptor) async throws {
 87 |         let credentials = try await tenantController.credentials(for: tenant.id)
    |                               `- warning: no 'async' operations occur within 'await' expression
 88 |         guard let host = device.ipv4 ?? device.ipv6 else {
 89 |             throw RemoteDesktopError.missingAddress(device)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:134:45: warning: call to main actor-isolated instance method 'focus()' in a synchronous nonisolated context [#ActorIsolatedCall]
132 |     public func focus(on sessionID: UUID) {
133 |         sessionQueue.async {
134 |             self.activeSessions[sessionID]?.focus()
    |                                             `- warning: call to main actor-isolated instance method 'focus()' in a synchronous nonisolated context [#ActorIsolatedCall]
135 |         }
136 |     }
    :
289 | 
290 |     @MainActor
291 |     func focus() {
    |          `- note: calls to instance method 'focus()' from outside of its actor context are implicitly asynchronous
292 |         log.info("Focus requested for session \(self.device.name)")
293 |         CGDisplayMoveCursorToPoint(CGMainDisplayID(), CGPoint(x: 0, y: 0))

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:134:18: warning: main actor-isolated property 'activeSessions' can not be referenced from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: property declared here
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
132 |     public func focus(on sessionID: UUID) {
133 |         sessionQueue.async {
134 |             self.activeSessions[sessionID]?.focus()
    |                  `- warning: main actor-isolated property 'activeSessions' can not be referenced from a Sendable closure
135 |         }
136 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:141:39: warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: mutation of this property is only permitted within the actor
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
139 |         await withCheckedContinuation { continuation in
140 |             sessionQueue.async(flags: .barrier) {
141 |                 if let session = self.activeSessions.removeValue(forKey: sessionID) {
    |                                       `- warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
142 |                     session.stop()
143 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:142:29: warning: call to main actor-isolated instance method 'stop()' in a synchronous nonisolated context [#ActorIsolatedCall]
140 |             sessionQueue.async(flags: .barrier) {
141 |                 if let session = self.activeSessions.removeValue(forKey: sessionID) {
142 |                     session.stop()
    |                             `- warning: call to main actor-isolated instance method 'stop()' in a synchronous nonisolated context [#ActorIsolatedCall]
143 |                 }
144 |                 DispatchQueue.main.async {
    :
283 |     }
284 | 
285 |     func stop() {
    |          `- note: calls to instance method 'stop()' from outside of its actor context are implicitly asynchronous
286 |         renderer.teardown()
287 |         client.disconnect()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:181:32: warning: call to main actor-isolated instance method 'fetchCpuLoad()' in a synchronous nonisolated context [#ActorIsolatedCall]
179 |         monitoringTimer = Timer.scheduledTimer(withTimeInterval: 5, repeats: true) { [weak self] _ in
180 |             guard let self = self else { return }
181 |             let cpuLoad = self.fetchCpuLoad()
    |                                `- warning: call to main actor-isolated instance method 'fetchCpuLoad()' in a synchronous nonisolated context [#ActorIsolatedCall]
182 |             self.refreshMetrics(cpuLoad: cpuLoad)
183 |         }
184 |     }
185 | 
186 |     private func fetchCpuLoad() -> Double {
    |                  `- note: calls to instance method 'fetchCpuLoad()' from outside of its actor context are implicitly asynchronous
187 |         var load = host_cpu_load_info()
188 |         var count = mach_msg_type_number_t(MemoryLayout.size(ofValue: load) / MemoryLayout<integer_t>.size)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:182:18: warning: call to main actor-isolated instance method 'refreshMetrics(cpuLoad:)' in a synchronous nonisolated context [#ActorIsolatedCall]
156 |     }
157 | 
158 |     private func refreshMetrics(cpuLoad: Double? = nil) {
    |                  `- note: calls to instance method 'refreshMetrics(cpuLoad:)' from outside of its actor context are implicitly asynchronous
159 |         if let cpuLoad {
160 |             cpuTimeline[Date()] = cpuLoad
    :
180 |             guard let self = self else { return }
181 |             let cpuLoad = self.fetchCpuLoad()
182 |             self.refreshMetrics(cpuLoad: cpuLoad)
    |                  `- warning: call to main actor-isolated instance method 'refreshMetrics(cpuLoad:)' in a synchronous nonisolated context [#ActorIsolatedCall]
183 |         }
184 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:267:66: error: type 'RemoteDesktopError' has no member 'connectionFailed'
265 |             if connectionContinuation != nil {
266 |                 continuationLock.unlock()
267 |                 continuation.resume(throwing: RemoteDesktopError.connectionFailed("ÈáçÂ§çÁöÑËøûÊé•ËØ∑Ê±Ç"))
    |                                                                  `- error: type 'RemoteDesktopError' has no member 'connectionFailed'
268 |                 return
269 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:339:84: error: type 'RemoteDesktopError' has no member 'connectionFailed'
337 |                     self.resolveConnectionContinuation(.success(()))
338 |                 case .failed:
339 |                     self.resolveConnectionContinuation(.failure(RemoteDesktopError.connectionFailed(description)))
    |                                                                                    `- error: type 'RemoteDesktopError' has no member 'connectionFailed'
340 |                 case .disconnected:
341 |                     self.resolveConnectionContinuation(.failure(RemoteDesktopError.connectionFailed("FreeRDP ‰ºöËØùÂ∑≤Êñ≠ÂºÄ")))

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:79:37: warning: immutable value 'device' was never used; consider replacing with '_' or removing it [#no-usage]
 77 |         let delta = interFrameInterval()
 78 |         let bandwidth = calculateBandwidth(bytes: byteCount, delta: delta)
 79 |         guard let textureCache, let device else {
    |                                     `- warning: immutable value 'device' was never used; consider replacing with '_' or removing it [#no-usage]
 80 |             log.error("Metal device unavailable; BGRA frame fallback active")
 81 |             return RenderMetrics(bandwidthMbps: bandwidth, latencyMilliseconds: delta * 1000)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:135:17: warning: capture of 'self' with non-Sendable type 'RemoteFrameRenderer?' in a '@Sendable' closure [#SendableClosureCaptures]
 17 | }
 18 | 
 19 | public final class RemoteFrameRenderer {
    |                    `- note: class 'RemoteFrameRenderer' does not conform to the 'Sendable' protocol
 20 |     private let device: MTLDevice?
 21 |     private let commandQueue: MTLCommandQueue?
    :
133 |         if let textureRef, let texture = CVMetalTextureGetTexture(textureRef) {
134 |             renderQueue.async { [weak self] in
135 |                 self?.frameHandler?(texture)
    |                 `- warning: capture of 'self' with non-Sendable type 'RemoteFrameRenderer?' in a '@Sendable' closure [#SendableClosureCaptures]
136 |             }
137 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:135:37: warning: capture of 'texture' with non-Sendable type 'any MTLTexture' in a '@Sendable' closure [#SendableClosureCaptures]
133 |         if let textureRef, let texture = CVMetalTextureGetTexture(textureRef) {
134 |             renderQueue.async { [weak self] in
135 |                 self?.frameHandler?(texture)
    |                                     `- warning: capture of 'texture' with non-Sendable type 'any MTLTexture' in a '@Sendable' closure [#SendableClosureCaptures]
136 |             }
137 |         }

/Users/macbookpro/Desktop/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/Metal.framework/Headers/MTLTexture.h:313:11: note: protocol 'MTLTexture' does not conform to the 'Sendable' protocol
311 |  */
312 | API_AVAILABLE(macos(10.11), ios(8.0))
313 | @protocol MTLTexture <MTLResource>
    |           `- note: protocol 'MTLTexture' does not conform to the 'Sendable' protocol
314 | 
315 | /*!

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:2:1: warning: add '@preconcurrency' to treat 'Sendable'-related errors from module 'Metal' as warnings
  1 | import Foundation
  2 | import Metal
    | `- warning: add '@preconcurrency' to treat 'Sendable'-related errors from module 'Metal' as warnings
  3 | import VideoToolbox
  4 | import CoreVideo

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:339:23: warning: capture of 'self' with non-Sendable type 'RemoteFrameRenderer?' in a '@Sendable' closure [#SendableClosureCaptures]
 17 | }
 18 | 
 19 | public final class RemoteFrameRenderer {
    |                    `- note: class 'RemoteFrameRenderer' does not conform to the 'Sendable' protocol
 20 |     private let device: MTLDevice?
 21 |     private let commandQueue: MTLCommandQueue?
    :
337 |     private func handleDecompressedFrame(imageBuffer: CVImageBuffer, presentationTimeStamp: CMTime) {
338 |         renderQueue.async { [weak self] in
339 |             guard let self else { return }
    |                       `- warning: capture of 'self' with non-Sendable type 'RemoteFrameRenderer?' in a '@Sendable' closure [#SendableClosureCaptures]
340 |             guard let textureCache else {
341 |                 self.log.error("Missing texture cache; cannot convert decoded frame to Metal texture")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:344:47: warning: capture of 'imageBuffer' with non-Sendable type 'CVImageBuffer' (aka 'CVBuffer') in a '@Sendable' closure [#SendableClosureCaptures]
342 |                 return
343 |             }
344 |             let width = CVPixelBufferGetWidth(imageBuffer)
    |                                               `- warning: capture of 'imageBuffer' with non-Sendable type 'CVImageBuffer' (aka 'CVBuffer') in a '@Sendable' closure [#SendableClosureCaptures]
345 |             let height = CVPixelBufferGetHeight(imageBuffer)
346 |             var textureRef: CVMetalTexture?

CoreVideo.CVBuffer:1:14: note: class 'CVBuffer' does not conform to the 'Sendable' protocol
1 | public class CVBuffer : _CFObject {
  |              `- note: class 'CVBuffer' does not conform to the 'Sendable' protocol
2 | }

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[133/160] Compiling SkyBridgeCore RemoteFrameRenderer.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/VideoEncodingTypes.swift:470:10: warning: associated value 'unsupportedCodec' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoCodec'
  8 | 
  9 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®Êûö‰∏æ
 10 | public enum SkyBridgeVideoCodec: String, CaseIterable {
    |             `- note: consider making enum 'SkyBridgeVideoCodec' conform to the 'Sendable' protocol
 11 |     case h264 = "H.264"
 12 |     case h265 = "H.265"
    :
468 |     case propertySetFailed(String, OSStatus)
469 |     case propertyUpdateFailed(OSStatus)
470 |     case unsupportedCodec(SkyBridgeVideoCodec)
    |          `- warning: associated value 'unsupportedCodec' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoCodec'
471 |     case unsupportedResolution(CGSize)
472 |     case unsupportedProfile(SkyBridgeVideoProfile)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/VideoEncodingTypes.swift:472:10: warning: associated value 'unsupportedProfile' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoProfile'
 45 | 
 46 | /// ËßÜÈ¢ëÁºñÁ†ÅÈÖçÁΩÆÊñá‰ª∂Êûö‰∏æ
 47 | public enum SkyBridgeVideoProfile: String, CaseIterable {
    |             `- note: consider making enum 'SkyBridgeVideoProfile' conform to the 'Sendable' protocol
 48 |     case h264Baseline = "H.264 Baseline"
 49 |     case h264Main = "H.264 Main"
    :
470 |     case unsupportedCodec(SkyBridgeVideoCodec)
471 |     case unsupportedResolution(CGSize)
472 |     case unsupportedProfile(SkyBridgeVideoProfile)
    |          `- warning: associated value 'unsupportedProfile' of 'Sendable'-conforming enum 'SkyBridgeVideoEncodingError' has non-Sendable type 'SkyBridgeVideoProfile'
473 |     case invalidConfiguration(String)
474 |     case hardwareNotAvailable

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:34:13: error: invalid redeclaration of 'RemoteDesktopError'
 32 | import IOKit
 33 | 
 34 | public enum RemoteDesktopError: Error, LocalizedError {
    |             `- error: invalid redeclaration of 'RemoteDesktopError'
 35 |     case missingAddress(DiscoveredDevice)
 36 |     case missingPort(DiscoveredDevice)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:78:18: warning: main actor-isolated property 'activeSessions' can not be referenced from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: property declared here
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
 76 |         monitoringTimer = nil
 77 |         sessionQueue.async(flags: .barrier) {
 78 |             self.activeSessions.values.forEach { $0.stop() }
    |                  `- warning: main actor-isolated property 'activeSessions' can not be referenced from a Sendable closure
 79 |             self.activeSessions.removeAll()
 80 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:78:53: warning: call to main actor-isolated instance method 'stop()' in a synchronous nonisolated context [#ActorIsolatedCall]
 76 |         monitoringTimer = nil
 77 |         sessionQueue.async(flags: .barrier) {
 78 |             self.activeSessions.values.forEach { $0.stop() }
    |                                                     `- warning: call to main actor-isolated instance method 'stop()' in a synchronous nonisolated context [#ActorIsolatedCall]
 79 |             self.activeSessions.removeAll()
 80 |         }
    :
283 |     }
284 | 
285 |     func stop() {
    |          `- note: calls to instance method 'stop()' from outside of its actor context are implicitly asynchronous
286 |         renderer.teardown()
287 |         client.disconnect()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:79:18: warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: mutation of this property is only permitted within the actor
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
 77 |         sessionQueue.async(flags: .barrier) {
 78 |             self.activeSessions.values.forEach { $0.stop() }
 79 |             self.activeSessions.removeAll()
    |                  `- warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 80 |         }
 81 |         cpuTimeline.removeAll()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:89:38: error: type 'RemoteDesktopError' has no member 'missingAddress'
 87 |         let credentials = try await tenantController.credentials(for: tenant.id)
 88 |         guard let host = device.ipv4 ?? device.ipv6 else {
 89 |             throw RemoteDesktopError.missingAddress(device)
    |                                      `- error: type 'RemoteDesktopError' has no member 'missingAddress'
 90 |         }
 91 |         guard let port = resolvePort(for: device), port <= Int(UInt16.max) else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:92:38: error: type 'RemoteDesktopError' has no member 'missingPort'
 90 |         }
 91 |         guard let port = resolvePort(for: device), port <= Int(UInt16.max) else {
 92 |             throw RemoteDesktopError.missingPort(device)
    |                                      `- error: type 'RemoteDesktopError' has no member 'missingPort'
 93 |         }
 94 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:110:18: warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: mutation of this property is only permitted within the actor
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
108 | 
109 |         sessionQueue.async(flags: .barrier) {
110 |             self.activeSessions[session.id] = session
    |                  `- warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
111 |         }
112 |         updateSessionsSnapshot()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:119:22: warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: mutation of this property is only permitted within the actor
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
117 |         } catch {
118 |             sessionQueue.async(flags: .barrier) {
119 |                 self.activeSessions.removeValue(forKey: session.id)
    |                      `- warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
120 |             }
121 |             updateSessionsSnapshot()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:87:31: warning: no 'async' operations occur within 'await' expression
 85 | 
 86 |     public func connect(to device: DiscoveredDevice, tenant: TenantDescriptor) async throws {
 87 |         let credentials = try await tenantController.credentials(for: tenant.id)
    |                               `- warning: no 'async' operations occur within 'await' expression
 88 |         guard let host = device.ipv4 ?? device.ipv6 else {
 89 |             throw RemoteDesktopError.missingAddress(device)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:134:45: warning: call to main actor-isolated instance method 'focus()' in a synchronous nonisolated context [#ActorIsolatedCall]
132 |     public func focus(on sessionID: UUID) {
133 |         sessionQueue.async {
134 |             self.activeSessions[sessionID]?.focus()
    |                                             `- warning: call to main actor-isolated instance method 'focus()' in a synchronous nonisolated context [#ActorIsolatedCall]
135 |         }
136 |     }
    :
289 | 
290 |     @MainActor
291 |     func focus() {
    |          `- note: calls to instance method 'focus()' from outside of its actor context are implicitly asynchronous
292 |         log.info("Focus requested for session \(self.device.name)")
293 |         CGDisplayMoveCursorToPoint(CGMainDisplayID(), CGPoint(x: 0, y: 0))

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:134:18: warning: main actor-isolated property 'activeSessions' can not be referenced from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: property declared here
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
132 |     public func focus(on sessionID: UUID) {
133 |         sessionQueue.async {
134 |             self.activeSessions[sessionID]?.focus()
    |                  `- warning: main actor-isolated property 'activeSessions' can not be referenced from a Sendable closure
135 |         }
136 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:141:39: warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
 57 |     private var monitoringTimer: Timer?
 58 |     private var cpuTimeline = OrderedDictionary<Date, Double>()
 59 |     private var activeSessions: [UUID: RemoteDesktopSession] = [:]
    |                 `- note: mutation of this property is only permitted within the actor
 60 |     private let sessionQueue = DispatchQueue(label: "com.skybridge.compass.remote.sessions", attributes: .concurrent)
 61 |     /// UI Ê°•Êé•ÔºöÂèëÂ∏ÉÊù•Ëá™‰ºöËØùÁöÑÊúÄÊñ∞ËøúÁ´ØÂ∏ßÁ∫πÁêÜ„ÄÇ
    :
139 |         await withCheckedContinuation { continuation in
140 |             sessionQueue.async(flags: .barrier) {
141 |                 if let session = self.activeSessions.removeValue(forKey: sessionID) {
    |                                       `- warning: main actor-isolated property 'activeSessions' can not be mutated from a Sendable closure
142 |                     session.stop()
143 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:142:29: warning: call to main actor-isolated instance method 'stop()' in a synchronous nonisolated context [#ActorIsolatedCall]
140 |             sessionQueue.async(flags: .barrier) {
141 |                 if let session = self.activeSessions.removeValue(forKey: sessionID) {
142 |                     session.stop()
    |                             `- warning: call to main actor-isolated instance method 'stop()' in a synchronous nonisolated context [#ActorIsolatedCall]
143 |                 }
144 |                 DispatchQueue.main.async {
    :
283 |     }
284 | 
285 |     func stop() {
    |          `- note: calls to instance method 'stop()' from outside of its actor context are implicitly asynchronous
286 |         renderer.teardown()
287 |         client.disconnect()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:181:32: warning: call to main actor-isolated instance method 'fetchCpuLoad()' in a synchronous nonisolated context [#ActorIsolatedCall]
179 |         monitoringTimer = Timer.scheduledTimer(withTimeInterval: 5, repeats: true) { [weak self] _ in
180 |             guard let self = self else { return }
181 |             let cpuLoad = self.fetchCpuLoad()
    |                                `- warning: call to main actor-isolated instance method 'fetchCpuLoad()' in a synchronous nonisolated context [#ActorIsolatedCall]
182 |             self.refreshMetrics(cpuLoad: cpuLoad)
183 |         }
184 |     }
185 | 
186 |     private func fetchCpuLoad() -> Double {
    |                  `- note: calls to instance method 'fetchCpuLoad()' from outside of its actor context are implicitly asynchronous
187 |         var load = host_cpu_load_info()
188 |         var count = mach_msg_type_number_t(MemoryLayout.size(ofValue: load) / MemoryLayout<integer_t>.size)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:182:18: warning: call to main actor-isolated instance method 'refreshMetrics(cpuLoad:)' in a synchronous nonisolated context [#ActorIsolatedCall]
156 |     }
157 | 
158 |     private func refreshMetrics(cpuLoad: Double? = nil) {
    |                  `- note: calls to instance method 'refreshMetrics(cpuLoad:)' from outside of its actor context are implicitly asynchronous
159 |         if let cpuLoad {
160 |             cpuTimeline[Date()] = cpuLoad
    :
180 |             guard let self = self else { return }
181 |             let cpuLoad = self.fetchCpuLoad()
182 |             self.refreshMetrics(cpuLoad: cpuLoad)
    |                  `- warning: call to main actor-isolated instance method 'refreshMetrics(cpuLoad:)' in a synchronous nonisolated context [#ActorIsolatedCall]
183 |         }
184 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:267:66: error: type 'RemoteDesktopError' has no member 'connectionFailed'
265 |             if connectionContinuation != nil {
266 |                 continuationLock.unlock()
267 |                 continuation.resume(throwing: RemoteDesktopError.connectionFailed("ÈáçÂ§çÁöÑËøûÊé•ËØ∑Ê±Ç"))
    |                                                                  `- error: type 'RemoteDesktopError' has no member 'connectionFailed'
268 |                 return
269 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktopManager.swift:339:84: error: type 'RemoteDesktopError' has no member 'connectionFailed'
337 |                     self.resolveConnectionContinuation(.success(()))
338 |                 case .failed:
339 |                     self.resolveConnectionContinuation(.failure(RemoteDesktopError.connectionFailed(description)))
    |                                                                                    `- error: type 'RemoteDesktopError' has no member 'connectionFailed'
340 |                 case .disconnected:
341 |                     self.resolveConnectionContinuation(.failure(RemoteDesktopError.connectionFailed("FreeRDP ‰ºöËØùÂ∑≤Êñ≠ÂºÄ")))

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:79:37: warning: immutable value 'device' was never used; consider replacing with '_' or removing it [#no-usage]
 77 |         let delta = interFrameInterval()
 78 |         let bandwidth = calculateBandwidth(bytes: byteCount, delta: delta)
 79 |         guard let textureCache, let device else {
    |                                     `- warning: immutable value 'device' was never used; consider replacing with '_' or removing it [#no-usage]
 80 |             log.error("Metal device unavailable; BGRA frame fallback active")
 81 |             return RenderMetrics(bandwidthMbps: bandwidth, latencyMilliseconds: delta * 1000)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:135:17: warning: capture of 'self' with non-Sendable type 'RemoteFrameRenderer?' in a '@Sendable' closure [#SendableClosureCaptures]
 17 | }
 18 | 
 19 | public final class RemoteFrameRenderer {
    |                    `- note: class 'RemoteFrameRenderer' does not conform to the 'Sendable' protocol
 20 |     private let device: MTLDevice?
 21 |     private let commandQueue: MTLCommandQueue?
    :
133 |         if let textureRef, let texture = CVMetalTextureGetTexture(textureRef) {
134 |             renderQueue.async { [weak self] in
135 |                 self?.frameHandler?(texture)
    |                 `- warning: capture of 'self' with non-Sendable type 'RemoteFrameRenderer?' in a '@Sendable' closure [#SendableClosureCaptures]
136 |             }
137 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:135:37: warning: capture of 'texture' with non-Sendable type 'any MTLTexture' in a '@Sendable' closure [#SendableClosureCaptures]
133 |         if let textureRef, let texture = CVMetalTextureGetTexture(textureRef) {
134 |             renderQueue.async { [weak self] in
135 |                 self?.frameHandler?(texture)
    |                                     `- warning: capture of 'texture' with non-Sendable type 'any MTLTexture' in a '@Sendable' closure [#SendableClosureCaptures]
136 |             }
137 |         }

/Users/macbookpro/Desktop/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/Metal.framework/Headers/MTLTexture.h:313:11: note: protocol 'MTLTexture' does not conform to the 'Sendable' protocol
311 |  */
312 | API_AVAILABLE(macos(10.11), ios(8.0))
313 | @protocol MTLTexture <MTLResource>
    |           `- note: protocol 'MTLTexture' does not conform to the 'Sendable' protocol
314 | 
315 | /*!

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:2:1: warning: add '@preconcurrency' to treat 'Sendable'-related errors from module 'Metal' as warnings
  1 | import Foundation
  2 | import Metal
    | `- warning: add '@preconcurrency' to treat 'Sendable'-related errors from module 'Metal' as warnings
  3 | import VideoToolbox
  4 | import CoreVideo

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:339:23: warning: capture of 'self' with non-Sendable type 'RemoteFrameRenderer?' in a '@Sendable' closure [#SendableClosureCaptures]
 17 | }
 18 | 
 19 | public final class RemoteFrameRenderer {
    |                    `- note: class 'RemoteFrameRenderer' does not conform to the 'Sendable' protocol
 20 |     private let device: MTLDevice?
 21 |     private let commandQueue: MTLCommandQueue?
    :
337 |     private func handleDecompressedFrame(imageBuffer: CVImageBuffer, presentationTimeStamp: CMTime) {
338 |         renderQueue.async { [weak self] in
339 |             guard let self else { return }
    |                       `- warning: capture of 'self' with non-Sendable type 'RemoteFrameRenderer?' in a '@Sendable' closure [#SendableClosureCaptures]
340 |             guard let textureCache else {
341 |                 self.log.error("Missing texture cache; cannot convert decoded frame to Metal texture")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteFrameRenderer.swift:344:47: warning: capture of 'imageBuffer' with non-Sendable type 'CVImageBuffer' (aka 'CVBuffer') in a '@Sendable' closure [#SendableClosureCaptures]
342 |                 return
343 |             }
344 |             let width = CVPixelBufferGetWidth(imageBuffer)
    |                                               `- warning: capture of 'imageBuffer' with non-Sendable type 'CVImageBuffer' (aka 'CVBuffer') in a '@Sendable' closure [#SendableClosureCaptures]
345 |             let height = CVPixelBufferGetHeight(imageBuffer)
346 |             var textureRef: CVMetalTexture?

CoreVideo.CVBuffer:1:14: note: class 'CVBuffer' does not conform to the 'Sendable' protocol
1 | public class CVBuffer : _CFObject {
  |              `- note: class 'CVBuffer' does not conform to the 'Sendable' protocol
2 | }

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[134/160] Compiling SkyBridgeCore P2PSecurityManager.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityManager.swift:134:13: warning: initialization of immutable value 'requestData' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
132 |     public func verifyConnectionRequest(_ request: P2PConnectionRequest) throws -> Bool {
133 |         // ÈáçÂª∫Ë¶ÅÈ™åËØÅÁöÑÊï∞ÊçÆ
134 |         let requestData = "\(request.targetDevice.id):\(request.targetDevice.address):\(request.timestamp.timeIntervalSince1970)".data(using: .utf8)!
    |             `- warning: initialization of immutable value 'requestData' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
135 |         
136 |         // ÈáçÂª∫Ê∫êËÆæÂ§áÁöÑÂÖ¨Èí• - Ê≥®ÊÑèÔºöP2PConnectionRequest.sourceDeviceÊòØP2PDeviceInfoÁ±ªÂûãÔºåÊ≤°ÊúâpublicKey

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:375:23: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
342 | 
343 | /// P2PÂÆâÂÖ®ÈÖçÁΩÆ
344 | public struct P2PSecurityConfiguration: Codable {
    |               `- note: consider making struct 'P2PSecurityConfiguration' conform to the 'Sendable' protocol
345 |     /// ‰ºöËØùÂØÜÈí•ÊúâÊïàÊúüÔºàÁßíÔºâ
346 |     public let sessionKeyLifetime: TimeInterval
    :
373 |     
374 |     /// ÈªòËÆ§ÂÆâÂÖ®ÈÖçÁΩÆ
375 |     public static let `default` = P2PSecurityConfiguration()
    |                       |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
376 |     
377 |     /// È´òÂÆâÂÖ®Á∫ßÂà´ÈÖçÁΩÆ

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:378:23: error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
342 | 
343 | /// P2PÂÆâÂÖ®ÈÖçÁΩÆ
344 | public struct P2PSecurityConfiguration: Codable {
    |               `- note: consider making struct 'P2PSecurityConfiguration' conform to the 'Sendable' protocol
345 |     /// ‰ºöËØùÂØÜÈí•ÊúâÊïàÊúüÔºàÁßíÔºâ
346 |     public let sessionKeyLifetime: TimeInterval
    :
376 |     
377 |     /// È´òÂÆâÂÖ®Á∫ßÂà´ÈÖçÁΩÆ
378 |     public static let highSecurity = P2PSecurityConfiguration(
    |                       |- error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'highSecurity' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
379 |         sessionKeyLifetime: 1800,       // 30ÂàÜÈíü
380 |         challengeLifetime: 120,         // 2ÂàÜÈíü

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:388:23: error: static property 'lowSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
342 | 
343 | /// P2PÂÆâÂÖ®ÈÖçÁΩÆ
344 | public struct P2PSecurityConfiguration: Codable {
    |               `- note: consider making struct 'P2PSecurityConfiguration' conform to the 'Sendable' protocol
345 |     /// ‰ºöËØùÂØÜÈí•ÊúâÊïàÊúüÔºàÁßíÔºâ
346 |     public let sessionKeyLifetime: TimeInterval
    :
386 |     
387 |     /// ‰ΩéÂÆâÂÖ®Á∫ßÂà´ÈÖçÁΩÆÔºàÁî®‰∫éÂºÄÂèëÊµãËØïÔºâ
388 |     public static let lowSecurity = P2PSecurityConfiguration(
    |                       |- error: static property 'lowSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'lowSecurity' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
389 |         sessionKeyLifetime: 7200,       // 2Â∞èÊó∂
390 |         challengeLifetime: 600,         // 10ÂàÜÈíü

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:228:16: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
226 | /// P2PÊùÉÈôêËØ∑Ê±ÇËÆ∞ÂΩï
227 | public struct P2PPermissionRequest: Codable, Identifiable {
228 |     public let id = UUID()
    |                |- warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
    |                |- note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
    |                `- note: make the property mutable instead
229 |     public let deviceId: String
230 |     public let permission: P2PPermission

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:78:23: error: call to main actor-isolated instance method 'handleNewConnection(_:deviceId:)' in a synchronous nonisolated context [#ActorIsolatedCall]
 76 |             // ËÆæÁΩÆÊñ∞ËøûÊé•Â§ÑÁêÜÂô®
 77 |             listener.newConnectionHandler = { [weak self] connection in
 78 |                 self?.handleNewConnection(connection, deviceId: deviceId)
    |                       `- error: call to main actor-isolated instance method 'handleNewConnection(_:deviceId:)' in a synchronous nonisolated context [#ActorIsolatedCall]
 79 |             }
 80 |             
    :
291 |     
292 |     /// Â§ÑÁêÜÊñ∞ËøûÊé•
293 |     private func handleNewConnection(_ connection: NWConnection, deviceId: String) {
    |                  `- note: calls to instance method 'handleNewConnection(_:deviceId:)' from outside of its actor context are implicitly asynchronous
294 |         activeConnections[deviceId] = connection
295 |         setupConnectionStateHandler(connection, deviceId: deviceId)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:83:23: error: call to main actor-isolated instance method 'handleListenerStateChange(_:deviceId:)' in a synchronous nonisolated context [#ActorIsolatedCall]
 81 |             // ËÆæÁΩÆÁä∂ÊÄÅÂèòÂåñÂ§ÑÁêÜÂô®
 82 |             listener.stateUpdateHandler = { [weak self] state in
 83 |                 self?.handleListenerStateChange(state, deviceId: deviceId)
    |                       `- error: call to main actor-isolated instance method 'handleListenerStateChange(_:deviceId:)' in a synchronous nonisolated context [#ActorIsolatedCall]
 84 |             }
 85 |             
    :
300 |     
301 |     /// Â§ÑÁêÜÁõëÂê¨Âô®Áä∂ÊÄÅÂèòÂåñ
302 |     private func handleListenerStateChange(_ state: NWListener.State, deviceId: String) {
    |                  `- note: calls to instance method 'handleListenerStateChange(_:deviceId:)' from outside of its actor context are implicitly asynchronous
303 |         switch state {
304 |         case .ready:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:116:13: warning: capture of 'completion' with non-Sendable type '((any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
114 |                 self.tlsStatistics.messagesSent += 1
115 |             }
116 |             completion(error)
    |             |- warning: capture of 'completion' with non-Sendable type '((any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |             `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
117 |         })
118 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:111:22: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
109 |             if let error = error {
110 |                 print("‚ùå TLSÊï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")
111 |                 self.tlsStatistics.errorCount += 1
    |                      `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
112 |             } else {
113 |                 self.tlsStatistics.bytesSent += UInt64(data.count)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:113:22: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
111 |                 self.tlsStatistics.errorCount += 1
112 |             } else {
113 |                 self.tlsStatistics.bytesSent += UInt64(data.count)
    |                      `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
114 |                 self.tlsStatistics.messagesSent += 1
115 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:114:22: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
112 |             } else {
113 |                 self.tlsStatistics.bytesSent += UInt64(data.count)
114 |                 self.tlsStatistics.messagesSent += 1
    |                      `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
115 |             }
116 |             completion(error)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:130:17: warning: capture of 'completion' with non-Sendable type '(Data?, (any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
128 |         connection.receive(minimumIncompleteLength: 4, maximumLength: 4) { [weak self] lengthData, _, isComplete, error in
129 |             if let error = error {
130 |                 completion(nil, error)
    |                 |- warning: capture of 'completion' with non-Sendable type '(Data?, (any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                 `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
131 |                 return
132 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:145:21: warning: capture of 'completion' with non-Sendable type '(Data?, (any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
143 |             connection.receive(minimumIncompleteLength: Int(length), maximumLength: Int(length)) { data, _, isComplete, error in
144 |                 if let error = error {
145 |                     completion(nil, error)
    |                     |- warning: capture of 'completion' with non-Sendable type '(Data?, (any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
146 |                     return
147 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:150:27: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
148 |                 
149 |                 if let data = data {
150 |                     self?.tlsStatistics.bytesReceived += UInt64(data.count)
    |                           `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
151 |                     self?.tlsStatistics.messagesReceived += 1
152 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:150:21: warning: reference to captured var 'self' in concurrently-executing code [#SendableClosureCaptures]
148 |                 
149 |                 if let data = data {
150 |                     self?.tlsStatistics.bytesReceived += UInt64(data.count)
    |                     `- warning: reference to captured var 'self' in concurrently-executing code [#SendableClosureCaptures]
151 |                     self?.tlsStatistics.messagesReceived += 1
152 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:151:27: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
149 |                 if let data = data {
150 |                     self?.tlsStatistics.bytesReceived += UInt64(data.count)
151 |                     self?.tlsStatistics.messagesReceived += 1
    |                           `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
152 |                 }
153 |                 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:151:21: warning: reference to captured var 'self' in concurrently-executing code [#SendableClosureCaptures]
149 |                 if let data = data {
150 |                     self?.tlsStatistics.bytesReceived += UInt64(data.count)
151 |                     self?.tlsStatistics.messagesReceived += 1
    |                     `- warning: reference to captured var 'self' in concurrently-executing code [#SendableClosureCaptures]
152 |                 }
153 |                 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:247:20: warning: value 'identity' was defined but never used; consider replacing with boolean test [#no-usage]
245 |         case .server:
246 |             // ÊúçÂä°Âô®ÈÖçÁΩÆ
247 |             if let identity = certificateManager.getIdentity(for: deviceId) {
    |                    `- warning: value 'identity' was defined but never used; consider replacing with boolean test [#no-usage]
248 |                 // Ê≥®ÊÑèÔºöË∫´‰ªΩËÆæÁΩÆÈúÄË¶ÅÈÄöËøáÂÖ∂‰ªñÊñπÂºèÂÆûÁé∞
249 |                 // Áî±‰∫éAPIÈôêÂà∂ÔºåËøôÈáåÊöÇÊó∂Ë∑≥ËøáË∫´‰ªΩÈÖçÁΩÆ

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:321:33: warning: 'SecTrustGetCertificateAtIndex' was deprecated in macOS 12.0: renamed to 'SecTrustCopyCertificateChain(_:)' [#DeprecatedDeclaration]
319 |     private func verifyCertificateChain(_ trust: SecTrust, for deviceId: String) -> Bool {
320 |         // Ëé∑ÂèñËØÅ‰π¶Èìæ‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™ËØÅ‰π¶ÔºàÂè∂Â≠êËØÅ‰π¶Ôºâ
321 |         guard let certificate = SecTrustGetCertificateAtIndex(trust, 0) else {
    |                                 |- warning: 'SecTrustGetCertificateAtIndex' was deprecated in macOS 12.0: renamed to 'SecTrustCopyCertificateChain(_:)' [#DeprecatedDeclaration]
    |                                 `- note: use 'SecTrustCopyCertificateChain(_:)' instead
322 |             print("‚ùå Êó†Ê≥ïËé∑ÂèñËØÅ‰π¶")
323 |             return false

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:473:13: warning: initialization of immutable value 'data' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
471 |         // Ëé∑ÂèñËØÅ‰π¶Êï∞ÊçÆ
472 |         let certificateData = SecCertificateCopyData(certificate)
473 |         let data = CFDataGetBytePtr(certificateData)
    |             `- warning: initialization of immutable value 'data' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
474 |         let length = CFDataGetLength(certificateData)
475 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:507:19: warning: value 'publicKey' was defined but never used; consider replacing with boolean test [#no-usage]
505 |         }
506 |         
507 |         guard let publicKey = SecKeyCopyPublicKey(privateKey) else {
    |                   `- warning: value 'publicKey' was defined but never used; consider replacing with boolean test [#no-usage]
508 |             print("‚ùå Ëé∑ÂèñÂÖ¨Èí•Â§±Ë¥•")
509 |             return nil

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#DeprecatedDeclaration]: <https://docs.swift.org/compiler/documentation/diagnostics/deprecated-declaration>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[135/160] Compiling SkyBridgeCore P2PSecurityTypes.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityManager.swift:134:13: warning: initialization of immutable value 'requestData' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
132 |     public func verifyConnectionRequest(_ request: P2PConnectionRequest) throws -> Bool {
133 |         // ÈáçÂª∫Ë¶ÅÈ™åËØÅÁöÑÊï∞ÊçÆ
134 |         let requestData = "\(request.targetDevice.id):\(request.targetDevice.address):\(request.timestamp.timeIntervalSince1970)".data(using: .utf8)!
    |             `- warning: initialization of immutable value 'requestData' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
135 |         
136 |         // ÈáçÂª∫Ê∫êËÆæÂ§áÁöÑÂÖ¨Èí• - Ê≥®ÊÑèÔºöP2PConnectionRequest.sourceDeviceÊòØP2PDeviceInfoÁ±ªÂûãÔºåÊ≤°ÊúâpublicKey

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:375:23: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
342 | 
343 | /// P2PÂÆâÂÖ®ÈÖçÁΩÆ
344 | public struct P2PSecurityConfiguration: Codable {
    |               `- note: consider making struct 'P2PSecurityConfiguration' conform to the 'Sendable' protocol
345 |     /// ‰ºöËØùÂØÜÈí•ÊúâÊïàÊúüÔºàÁßíÔºâ
346 |     public let sessionKeyLifetime: TimeInterval
    :
373 |     
374 |     /// ÈªòËÆ§ÂÆâÂÖ®ÈÖçÁΩÆ
375 |     public static let `default` = P2PSecurityConfiguration()
    |                       |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
376 |     
377 |     /// È´òÂÆâÂÖ®Á∫ßÂà´ÈÖçÁΩÆ

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:378:23: error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
342 | 
343 | /// P2PÂÆâÂÖ®ÈÖçÁΩÆ
344 | public struct P2PSecurityConfiguration: Codable {
    |               `- note: consider making struct 'P2PSecurityConfiguration' conform to the 'Sendable' protocol
345 |     /// ‰ºöËØùÂØÜÈí•ÊúâÊïàÊúüÔºàÁßíÔºâ
346 |     public let sessionKeyLifetime: TimeInterval
    :
376 |     
377 |     /// È´òÂÆâÂÖ®Á∫ßÂà´ÈÖçÁΩÆ
378 |     public static let highSecurity = P2PSecurityConfiguration(
    |                       |- error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'highSecurity' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
379 |         sessionKeyLifetime: 1800,       // 30ÂàÜÈíü
380 |         challengeLifetime: 120,         // 2ÂàÜÈíü

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:388:23: error: static property 'lowSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
342 | 
343 | /// P2PÂÆâÂÖ®ÈÖçÁΩÆ
344 | public struct P2PSecurityConfiguration: Codable {
    |               `- note: consider making struct 'P2PSecurityConfiguration' conform to the 'Sendable' protocol
345 |     /// ‰ºöËØùÂØÜÈí•ÊúâÊïàÊúüÔºàÁßíÔºâ
346 |     public let sessionKeyLifetime: TimeInterval
    :
386 |     
387 |     /// ‰ΩéÂÆâÂÖ®Á∫ßÂà´ÈÖçÁΩÆÔºàÁî®‰∫éÂºÄÂèëÊµãËØïÔºâ
388 |     public static let lowSecurity = P2PSecurityConfiguration(
    |                       |- error: static property 'lowSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'lowSecurity' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
389 |         sessionKeyLifetime: 7200,       // 2Â∞èÊó∂
390 |         challengeLifetime: 600,         // 10ÂàÜÈíü

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:228:16: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
226 | /// P2PÊùÉÈôêËØ∑Ê±ÇËÆ∞ÂΩï
227 | public struct P2PPermissionRequest: Codable, Identifiable {
228 |     public let id = UUID()
    |                |- warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
    |                |- note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
    |                `- note: make the property mutable instead
229 |     public let deviceId: String
230 |     public let permission: P2PPermission

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:78:23: error: call to main actor-isolated instance method 'handleNewConnection(_:deviceId:)' in a synchronous nonisolated context [#ActorIsolatedCall]
 76 |             // ËÆæÁΩÆÊñ∞ËøûÊé•Â§ÑÁêÜÂô®
 77 |             listener.newConnectionHandler = { [weak self] connection in
 78 |                 self?.handleNewConnection(connection, deviceId: deviceId)
    |                       `- error: call to main actor-isolated instance method 'handleNewConnection(_:deviceId:)' in a synchronous nonisolated context [#ActorIsolatedCall]
 79 |             }
 80 |             
    :
291 |     
292 |     /// Â§ÑÁêÜÊñ∞ËøûÊé•
293 |     private func handleNewConnection(_ connection: NWConnection, deviceId: String) {
    |                  `- note: calls to instance method 'handleNewConnection(_:deviceId:)' from outside of its actor context are implicitly asynchronous
294 |         activeConnections[deviceId] = connection
295 |         setupConnectionStateHandler(connection, deviceId: deviceId)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:83:23: error: call to main actor-isolated instance method 'handleListenerStateChange(_:deviceId:)' in a synchronous nonisolated context [#ActorIsolatedCall]
 81 |             // ËÆæÁΩÆÁä∂ÊÄÅÂèòÂåñÂ§ÑÁêÜÂô®
 82 |             listener.stateUpdateHandler = { [weak self] state in
 83 |                 self?.handleListenerStateChange(state, deviceId: deviceId)
    |                       `- error: call to main actor-isolated instance method 'handleListenerStateChange(_:deviceId:)' in a synchronous nonisolated context [#ActorIsolatedCall]
 84 |             }
 85 |             
    :
300 |     
301 |     /// Â§ÑÁêÜÁõëÂê¨Âô®Áä∂ÊÄÅÂèòÂåñ
302 |     private func handleListenerStateChange(_ state: NWListener.State, deviceId: String) {
    |                  `- note: calls to instance method 'handleListenerStateChange(_:deviceId:)' from outside of its actor context are implicitly asynchronous
303 |         switch state {
304 |         case .ready:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:116:13: warning: capture of 'completion' with non-Sendable type '((any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
114 |                 self.tlsStatistics.messagesSent += 1
115 |             }
116 |             completion(error)
    |             |- warning: capture of 'completion' with non-Sendable type '((any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |             `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
117 |         })
118 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:111:22: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
109 |             if let error = error {
110 |                 print("‚ùå TLSÊï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")
111 |                 self.tlsStatistics.errorCount += 1
    |                      `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
112 |             } else {
113 |                 self.tlsStatistics.bytesSent += UInt64(data.count)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:113:22: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
111 |                 self.tlsStatistics.errorCount += 1
112 |             } else {
113 |                 self.tlsStatistics.bytesSent += UInt64(data.count)
    |                      `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
114 |                 self.tlsStatistics.messagesSent += 1
115 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:114:22: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
112 |             } else {
113 |                 self.tlsStatistics.bytesSent += UInt64(data.count)
114 |                 self.tlsStatistics.messagesSent += 1
    |                      `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
115 |             }
116 |             completion(error)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:130:17: warning: capture of 'completion' with non-Sendable type '(Data?, (any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
128 |         connection.receive(minimumIncompleteLength: 4, maximumLength: 4) { [weak self] lengthData, _, isComplete, error in
129 |             if let error = error {
130 |                 completion(nil, error)
    |                 |- warning: capture of 'completion' with non-Sendable type '(Data?, (any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                 `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
131 |                 return
132 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:145:21: warning: capture of 'completion' with non-Sendable type '(Data?, (any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
143 |             connection.receive(minimumIncompleteLength: Int(length), maximumLength: Int(length)) { data, _, isComplete, error in
144 |                 if let error = error {
145 |                     completion(nil, error)
    |                     |- warning: capture of 'completion' with non-Sendable type '(Data?, (any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
146 |                     return
147 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:150:27: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
148 |                 
149 |                 if let data = data {
150 |                     self?.tlsStatistics.bytesReceived += UInt64(data.count)
    |                           `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
151 |                     self?.tlsStatistics.messagesReceived += 1
152 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:150:21: warning: reference to captured var 'self' in concurrently-executing code [#SendableClosureCaptures]
148 |                 
149 |                 if let data = data {
150 |                     self?.tlsStatistics.bytesReceived += UInt64(data.count)
    |                     `- warning: reference to captured var 'self' in concurrently-executing code [#SendableClosureCaptures]
151 |                     self?.tlsStatistics.messagesReceived += 1
152 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:151:27: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
149 |                 if let data = data {
150 |                     self?.tlsStatistics.bytesReceived += UInt64(data.count)
151 |                     self?.tlsStatistics.messagesReceived += 1
    |                           `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
152 |                 }
153 |                 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:151:21: warning: reference to captured var 'self' in concurrently-executing code [#SendableClosureCaptures]
149 |                 if let data = data {
150 |                     self?.tlsStatistics.bytesReceived += UInt64(data.count)
151 |                     self?.tlsStatistics.messagesReceived += 1
    |                     `- warning: reference to captured var 'self' in concurrently-executing code [#SendableClosureCaptures]
152 |                 }
153 |                 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:247:20: warning: value 'identity' was defined but never used; consider replacing with boolean test [#no-usage]
245 |         case .server:
246 |             // ÊúçÂä°Âô®ÈÖçÁΩÆ
247 |             if let identity = certificateManager.getIdentity(for: deviceId) {
    |                    `- warning: value 'identity' was defined but never used; consider replacing with boolean test [#no-usage]
248 |                 // Ê≥®ÊÑèÔºöË∫´‰ªΩËÆæÁΩÆÈúÄË¶ÅÈÄöËøáÂÖ∂‰ªñÊñπÂºèÂÆûÁé∞
249 |                 // Áî±‰∫éAPIÈôêÂà∂ÔºåËøôÈáåÊöÇÊó∂Ë∑≥ËøáË∫´‰ªΩÈÖçÁΩÆ

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:321:33: warning: 'SecTrustGetCertificateAtIndex' was deprecated in macOS 12.0: renamed to 'SecTrustCopyCertificateChain(_:)' [#DeprecatedDeclaration]
319 |     private func verifyCertificateChain(_ trust: SecTrust, for deviceId: String) -> Bool {
320 |         // Ëé∑ÂèñËØÅ‰π¶Èìæ‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™ËØÅ‰π¶ÔºàÂè∂Â≠êËØÅ‰π¶Ôºâ
321 |         guard let certificate = SecTrustGetCertificateAtIndex(trust, 0) else {
    |                                 |- warning: 'SecTrustGetCertificateAtIndex' was deprecated in macOS 12.0: renamed to 'SecTrustCopyCertificateChain(_:)' [#DeprecatedDeclaration]
    |                                 `- note: use 'SecTrustCopyCertificateChain(_:)' instead
322 |             print("‚ùå Êó†Ê≥ïËé∑ÂèñËØÅ‰π¶")
323 |             return false

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:473:13: warning: initialization of immutable value 'data' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
471 |         // Ëé∑ÂèñËØÅ‰π¶Êï∞ÊçÆ
472 |         let certificateData = SecCertificateCopyData(certificate)
473 |         let data = CFDataGetBytePtr(certificateData)
    |             `- warning: initialization of immutable value 'data' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
474 |         let length = CFDataGetLength(certificateData)
475 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:507:19: warning: value 'publicKey' was defined but never used; consider replacing with boolean test [#no-usage]
505 |         }
506 |         
507 |         guard let publicKey = SecKeyCopyPublicKey(privateKey) else {
    |                   `- warning: value 'publicKey' was defined but never used; consider replacing with boolean test [#no-usage]
508 |             print("‚ùå Ëé∑ÂèñÂÖ¨Èí•Â§±Ë¥•")
509 |             return nil

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#DeprecatedDeclaration]: <https://docs.swift.org/compiler/documentation/diagnostics/deprecated-declaration>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[136/160] Compiling SkyBridgeCore TLSSecurityManager.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityManager.swift:134:13: warning: initialization of immutable value 'requestData' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
132 |     public func verifyConnectionRequest(_ request: P2PConnectionRequest) throws -> Bool {
133 |         // ÈáçÂª∫Ë¶ÅÈ™åËØÅÁöÑÊï∞ÊçÆ
134 |         let requestData = "\(request.targetDevice.id):\(request.targetDevice.address):\(request.timestamp.timeIntervalSince1970)".data(using: .utf8)!
    |             `- warning: initialization of immutable value 'requestData' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
135 |         
136 |         // ÈáçÂª∫Ê∫êËÆæÂ§áÁöÑÂÖ¨Èí• - Ê≥®ÊÑèÔºöP2PConnectionRequest.sourceDeviceÊòØP2PDeviceInfoÁ±ªÂûãÔºåÊ≤°ÊúâpublicKey

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:375:23: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
342 | 
343 | /// P2PÂÆâÂÖ®ÈÖçÁΩÆ
344 | public struct P2PSecurityConfiguration: Codable {
    |               `- note: consider making struct 'P2PSecurityConfiguration' conform to the 'Sendable' protocol
345 |     /// ‰ºöËØùÂØÜÈí•ÊúâÊïàÊúüÔºàÁßíÔºâ
346 |     public let sessionKeyLifetime: TimeInterval
    :
373 |     
374 |     /// ÈªòËÆ§ÂÆâÂÖ®ÈÖçÁΩÆ
375 |     public static let `default` = P2PSecurityConfiguration()
    |                       |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
376 |     
377 |     /// È´òÂÆâÂÖ®Á∫ßÂà´ÈÖçÁΩÆ

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:378:23: error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
342 | 
343 | /// P2PÂÆâÂÖ®ÈÖçÁΩÆ
344 | public struct P2PSecurityConfiguration: Codable {
    |               `- note: consider making struct 'P2PSecurityConfiguration' conform to the 'Sendable' protocol
345 |     /// ‰ºöËØùÂØÜÈí•ÊúâÊïàÊúüÔºàÁßíÔºâ
346 |     public let sessionKeyLifetime: TimeInterval
    :
376 |     
377 |     /// È´òÂÆâÂÖ®Á∫ßÂà´ÈÖçÁΩÆ
378 |     public static let highSecurity = P2PSecurityConfiguration(
    |                       |- error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'highSecurity' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
379 |         sessionKeyLifetime: 1800,       // 30ÂàÜÈíü
380 |         challengeLifetime: 120,         // 2ÂàÜÈíü

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:388:23: error: static property 'lowSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
342 | 
343 | /// P2PÂÆâÂÖ®ÈÖçÁΩÆ
344 | public struct P2PSecurityConfiguration: Codable {
    |               `- note: consider making struct 'P2PSecurityConfiguration' conform to the 'Sendable' protocol
345 |     /// ‰ºöËØùÂØÜÈí•ÊúâÊïàÊúüÔºàÁßíÔºâ
346 |     public let sessionKeyLifetime: TimeInterval
    :
386 |     
387 |     /// ‰ΩéÂÆâÂÖ®Á∫ßÂà´ÈÖçÁΩÆÔºàÁî®‰∫éÂºÄÂèëÊµãËØïÔºâ
388 |     public static let lowSecurity = P2PSecurityConfiguration(
    |                       |- error: static property 'lowSecurity' is not concurrency-safe because non-'Sendable' type 'P2PSecurityConfiguration' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'lowSecurity' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
389 |         sessionKeyLifetime: 7200,       // 2Â∞èÊó∂
390 |         challengeLifetime: 600,         // 10ÂàÜÈíü

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/P2PSecurityTypes.swift:228:16: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
226 | /// P2PÊùÉÈôêËØ∑Ê±ÇËÆ∞ÂΩï
227 | public struct P2PPermissionRequest: Codable, Identifiable {
228 |     public let id = UUID()
    |                |- warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
    |                |- note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
    |                `- note: make the property mutable instead
229 |     public let deviceId: String
230 |     public let permission: P2PPermission

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:78:23: error: call to main actor-isolated instance method 'handleNewConnection(_:deviceId:)' in a synchronous nonisolated context [#ActorIsolatedCall]
 76 |             // ËÆæÁΩÆÊñ∞ËøûÊé•Â§ÑÁêÜÂô®
 77 |             listener.newConnectionHandler = { [weak self] connection in
 78 |                 self?.handleNewConnection(connection, deviceId: deviceId)
    |                       `- error: call to main actor-isolated instance method 'handleNewConnection(_:deviceId:)' in a synchronous nonisolated context [#ActorIsolatedCall]
 79 |             }
 80 |             
    :
291 |     
292 |     /// Â§ÑÁêÜÊñ∞ËøûÊé•
293 |     private func handleNewConnection(_ connection: NWConnection, deviceId: String) {
    |                  `- note: calls to instance method 'handleNewConnection(_:deviceId:)' from outside of its actor context are implicitly asynchronous
294 |         activeConnections[deviceId] = connection
295 |         setupConnectionStateHandler(connection, deviceId: deviceId)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:83:23: error: call to main actor-isolated instance method 'handleListenerStateChange(_:deviceId:)' in a synchronous nonisolated context [#ActorIsolatedCall]
 81 |             // ËÆæÁΩÆÁä∂ÊÄÅÂèòÂåñÂ§ÑÁêÜÂô®
 82 |             listener.stateUpdateHandler = { [weak self] state in
 83 |                 self?.handleListenerStateChange(state, deviceId: deviceId)
    |                       `- error: call to main actor-isolated instance method 'handleListenerStateChange(_:deviceId:)' in a synchronous nonisolated context [#ActorIsolatedCall]
 84 |             }
 85 |             
    :
300 |     
301 |     /// Â§ÑÁêÜÁõëÂê¨Âô®Áä∂ÊÄÅÂèòÂåñ
302 |     private func handleListenerStateChange(_ state: NWListener.State, deviceId: String) {
    |                  `- note: calls to instance method 'handleListenerStateChange(_:deviceId:)' from outside of its actor context are implicitly asynchronous
303 |         switch state {
304 |         case .ready:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:116:13: warning: capture of 'completion' with non-Sendable type '((any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
114 |                 self.tlsStatistics.messagesSent += 1
115 |             }
116 |             completion(error)
    |             |- warning: capture of 'completion' with non-Sendable type '((any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |             `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
117 |         })
118 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:111:22: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
109 |             if let error = error {
110 |                 print("‚ùå TLSÊï∞ÊçÆÂèëÈÄÅÂ§±Ë¥•: \(error)")
111 |                 self.tlsStatistics.errorCount += 1
    |                      `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
112 |             } else {
113 |                 self.tlsStatistics.bytesSent += UInt64(data.count)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:113:22: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
111 |                 self.tlsStatistics.errorCount += 1
112 |             } else {
113 |                 self.tlsStatistics.bytesSent += UInt64(data.count)
    |                      `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
114 |                 self.tlsStatistics.messagesSent += 1
115 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:114:22: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
112 |             } else {
113 |                 self.tlsStatistics.bytesSent += UInt64(data.count)
114 |                 self.tlsStatistics.messagesSent += 1
    |                      `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
115 |             }
116 |             completion(error)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:130:17: warning: capture of 'completion' with non-Sendable type '(Data?, (any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
128 |         connection.receive(minimumIncompleteLength: 4, maximumLength: 4) { [weak self] lengthData, _, isComplete, error in
129 |             if let error = error {
130 |                 completion(nil, error)
    |                 |- warning: capture of 'completion' with non-Sendable type '(Data?, (any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                 `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
131 |                 return
132 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:145:21: warning: capture of 'completion' with non-Sendable type '(Data?, (any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
143 |             connection.receive(minimumIncompleteLength: Int(length), maximumLength: Int(length)) { data, _, isComplete, error in
144 |                 if let error = error {
145 |                     completion(nil, error)
    |                     |- warning: capture of 'completion' with non-Sendable type '(Data?, (any Error)?) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                     `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
146 |                     return
147 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:150:27: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
148 |                 
149 |                 if let data = data {
150 |                     self?.tlsStatistics.bytesReceived += UInt64(data.count)
    |                           `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
151 |                     self?.tlsStatistics.messagesReceived += 1
152 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:150:21: warning: reference to captured var 'self' in concurrently-executing code [#SendableClosureCaptures]
148 |                 
149 |                 if let data = data {
150 |                     self?.tlsStatistics.bytesReceived += UInt64(data.count)
    |                     `- warning: reference to captured var 'self' in concurrently-executing code [#SendableClosureCaptures]
151 |                     self?.tlsStatistics.messagesReceived += 1
152 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:151:27: warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
 17 |     @Published public private(set) var activeConnections: [String: NWConnection] = [:]
 18 |     /// TLSÁªüËÆ°‰ø°ÊÅØ
 19 |     @Published public private(set) var tlsStatistics: TLSStatistics = TLSStatistics()
    |                                        `- note: mutation of this property is only permitted within the actor
 20 |     
 21 |     // MARK: - ÂàùÂßãÂåñ
    :
149 |                 if let data = data {
150 |                     self?.tlsStatistics.bytesReceived += UInt64(data.count)
151 |                     self?.tlsStatistics.messagesReceived += 1
    |                           `- warning: main actor-isolated property 'tlsStatistics' can not be mutated from a Sendable closure
152 |                 }
153 |                 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:151:21: warning: reference to captured var 'self' in concurrently-executing code [#SendableClosureCaptures]
149 |                 if let data = data {
150 |                     self?.tlsStatistics.bytesReceived += UInt64(data.count)
151 |                     self?.tlsStatistics.messagesReceived += 1
    |                     `- warning: reference to captured var 'self' in concurrently-executing code [#SendableClosureCaptures]
152 |                 }
153 |                 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:247:20: warning: value 'identity' was defined but never used; consider replacing with boolean test [#no-usage]
245 |         case .server:
246 |             // ÊúçÂä°Âô®ÈÖçÁΩÆ
247 |             if let identity = certificateManager.getIdentity(for: deviceId) {
    |                    `- warning: value 'identity' was defined but never used; consider replacing with boolean test [#no-usage]
248 |                 // Ê≥®ÊÑèÔºöË∫´‰ªΩËÆæÁΩÆÈúÄË¶ÅÈÄöËøáÂÖ∂‰ªñÊñπÂºèÂÆûÁé∞
249 |                 // Áî±‰∫éAPIÈôêÂà∂ÔºåËøôÈáåÊöÇÊó∂Ë∑≥ËøáË∫´‰ªΩÈÖçÁΩÆ

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:321:33: warning: 'SecTrustGetCertificateAtIndex' was deprecated in macOS 12.0: renamed to 'SecTrustCopyCertificateChain(_:)' [#DeprecatedDeclaration]
319 |     private func verifyCertificateChain(_ trust: SecTrust, for deviceId: String) -> Bool {
320 |         // Ëé∑ÂèñËØÅ‰π¶Èìæ‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™ËØÅ‰π¶ÔºàÂè∂Â≠êËØÅ‰π¶Ôºâ
321 |         guard let certificate = SecTrustGetCertificateAtIndex(trust, 0) else {
    |                                 |- warning: 'SecTrustGetCertificateAtIndex' was deprecated in macOS 12.0: renamed to 'SecTrustCopyCertificateChain(_:)' [#DeprecatedDeclaration]
    |                                 `- note: use 'SecTrustCopyCertificateChain(_:)' instead
322 |             print("‚ùå Êó†Ê≥ïËé∑ÂèñËØÅ‰π¶")
323 |             return false

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:473:13: warning: initialization of immutable value 'data' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
471 |         // Ëé∑ÂèñËØÅ‰π¶Êï∞ÊçÆ
472 |         let certificateData = SecCertificateCopyData(certificate)
473 |         let data = CFDataGetBytePtr(certificateData)
    |             `- warning: initialization of immutable value 'data' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
474 |         let length = CFDataGetLength(certificateData)
475 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Security/TLSSecurityManager.swift:507:19: warning: value 'publicKey' was defined but never used; consider replacing with boolean test [#no-usage]
505 |         }
506 |         
507 |         guard let publicKey = SecKeyCopyPublicKey(privateKey) else {
    |                   `- warning: value 'publicKey' was defined but never used; consider replacing with boolean test [#no-usage]
508 |             print("‚ùå Ëé∑ÂèñÂÖ¨Èí•Â§±Ë¥•")
509 |             return nil

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#DeprecatedDeclaration]: <https://docs.swift.org/compiler/documentation/diagnostics/deprecated-declaration>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[137/160] Compiling SkyBridgeCore RemoteTextureFeed.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:70:27: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 59 |     // MARK: - ÈÖçÁΩÆ
 60 |     
 61 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 62 |         public let enableAIInference: Bool
 63 |         public let enableMetalFX: Bool
    :
 68 |         public let aiModelPath: String?
 69 |         
 70 |         public static let `default` = Configuration(
    |                           |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 71 |             enableAIInference: true,
 72 |             enableMetalFX: true,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:80:27: error: static property 'performance' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 59 |     // MARK: - ÈÖçÁΩÆ
 60 |     
 61 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 62 |         public let enableAIInference: Bool
 63 |         public let enableMetalFX: Bool
    :
 78 |         )
 79 |         
 80 |         public static let performance = Configuration(
    |                           |- error: static property 'performance' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'performance' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 81 |             enableAIInference: false,
 82 |             enableMetalFX: true,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:90:27: error: static property 'quality' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 59 |     // MARK: - ÈÖçÁΩÆ
 60 |     
 61 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 62 |         public let enableAIInference: Bool
 63 |         public let enableMetalFX: Bool
    :
 88 |         )
 89 |         
 90 |         public static let quality = Configuration(
    |                           |- error: static property 'quality' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'quality' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 91 |             enableAIInference: true,
 92 |             enableMetalFX: true,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:179:38: error: type 'any MTLFXSpatialScaler' has no member 'supportsDevice'
177 |         // Ê£ÄÊü•MetalFXÊîØÊåÅ
178 |         if configuration.enableMetalFX {
179 |             guard MTLFXSpatialScaler.supportsDevice(device) else {
    |                                      `- error: type 'any MTLFXSpatialScaler' has no member 'supportsDevice'
180 |                 print("ËÆæÂ§á‰∏çÊîØÊåÅMetalFX")
181 |                 return false

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:281:40: error: expression is 'async' but is not marked with 'await'
279 |         }
280 |         
281 |         self.neuralRenderingPipeline = try device.makeComputePipelineState(function: aiFunction)
    |                                        |   `- note: call is 'async'
    |                                        `- error: expression is 'async' but is not marked with 'await'
282 |         
283 |         // ÂàõÂª∫MLPÊùÉÈáçÁºìÂÜ≤Âå∫

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:308:36: error: expression is 'async' but is not marked with 'await'
306 |         renderDescriptor.depthAttachmentPixelFormat = .depth32Float
307 |         
308 |         self.renderPipelineState = try device.makeRenderPipelineState(descriptor: renderDescriptor)
    |                                    |   `- note: call is 'async'
    |                                    `- error: expression is 'async' but is not marked with 'await'
309 |         
310 |         // ËÆ°ÁÆóÁÆ°Á∫ø

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:315:37: error: expression is 'async' but is not marked with 'await'
313 |         }
314 |         
315 |         self.computePipelineState = try device.makeComputePipelineState(function: computeFunction)
    |                                     |   `- note: call is 'async'
    |                                     `- error: expression is 'async' but is not marked with 'await'
316 |         
317 |         // ÂÖâÁ∫øËøΩË∏™ÁÆ°Á∫øÔºàÂ¶ÇÊûúÂêØÁî®Ôºâ

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:489:24: error: extra arguments at positions #2, #3 in call
487 |         
488 |         // ÊâßË°å‰∏äÈááÊ†∑
489 |         upscaler.encode(
    |                        `- error: extra arguments at positions #2, #3 in call
490 |             commandBuffer: commandBuffer,
491 |             sourceTexture: inputTexture,

MetalFX.MTLFXSpatialScaler.encode:2:6: note: 'encode(commandBuffer:)' declared here
1 | protocol MTLFXSpatialScaler {
2 | func encode(commandBuffer: any MTLCommandBuffer)}
  |      `- note: 'encode(commandBuffer:)' declared here
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:537:19: error: cannot pass immutable value as inout argument: 'uniforms' is a 'let' constant
527 |     
528 |     private func updateUniforms(viewMatrix: simd_float4x4, projectionMatrix: simd_float4x4) {
529 |         let uniforms = Uniforms(
    |         `- note: change 'let' to 'var' to make it mutable
530 |             modelMatrix: matrix_identity_float4x4,
531 |             viewMatrix: viewMatrix,
    :
535 |         
536 |         uniformBuffer.contents().copyMemory(
537 |             from: &uniforms,
    |                   `- error: cannot pass immutable value as inout argument: 'uniforms' is a 'let' constant
538 |             byteCount: MemoryLayout<Uniforms>.size
539 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:642:22: error: 'init(target:selector:)' is unavailable in macOS
640 |     
641 |     private func setupFrameTimer() {
642 |         frameTimer = CADisplayLink(target: self, selector: #selector(frameUpdate))
    |                      `- error: 'init(target:selector:)' is unavailable in macOS
643 |         frameTimer?.add(to: .main, forMode: .common)
644 |     }

/Users/macbookpro/Desktop/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/QuartzCore.framework/Headers/CADisplayLink.h:32:1: note: 'init(target:selector:)' has been explicitly marked unavailable here
 30 |  * For macOS, see NSView/NSWindow/NSScreen.displayLink(withTarget:selector:). */
 31 | 
 32 | + (CADisplayLink *)displayLinkWithTarget:(id)target selector:(SEL)sel
    | `- note: 'init(target:selector:)' has been explicitly marked unavailable here
 33 |     API_UNAVAILABLE(macos);
 34 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:716:13: warning: initialization of immutable value 'frameTime' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
714 |     
715 |     func endFrame() {
716 |         let frameTime = CACurrentMediaTime() - frameStartTime
    |             `- warning: initialization of immutable value 'frameTime' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
717 |         // ËÆ∞ÂΩïÊÄßËÉΩÊï∞ÊçÆ
718 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:315:18: warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
313 |             // AIÊé®ÁêÜÂºÄÂÖ≥
314 |             Toggle("AIÊé®ÁêÜÂ¢ûÂº∫", isOn: $aiInferenceEnabled)
315 |                 .onChange(of: aiInferenceEnabled) { newValue in
    |                  `- warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
316 |                     metalEngine.aiInferenceEnabled = newValue
317 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:321:18: warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
319 |             // MetalFXÂºÄÂÖ≥
320 |             Toggle("MetalFX‰∏äÈááÊ†∑", isOn: $metalFXEnabled)
321 |                 .onChange(of: metalFXEnabled) { newValue in
    |                  `- warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
322 |                     metalEngine.metalFXEnabled = newValue
323 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:327:18: warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
325 |             // Â∏ßÊèíÂÄºÂºÄÂÖ≥
326 |             Toggle("Â∏ßÊèíÂÄº", isOn: $frameInterpolationEnabled)
327 |                 .onChange(of: frameInterpolationEnabled) { newValue in
    |                  `- warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
328 |                     metalEngine.frameInterpolationEnabled = newValue
329 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:367:17: error: generic struct 'Picker' requires that 'Metal4Engine.Configuration' conform to 'Hashable'
365 |                 Text("È¢ÑËÆæÈÖçÁΩÆ")
366 |                     .font(.caption)
367 |                 Picker("È¢ÑËÆæÈÖçÁΩÆ", selection: $selectedConfiguration) {
    |                 `- error: generic struct 'Picker' requires that 'Metal4Engine.Configuration' conform to 'Hashable'
368 |                     Text("ÈªòËÆ§").tag(Metal4Engine.Configuration.default)
369 |                     Text("ÊÄßËÉΩ‰ºòÂÖà").tag(Metal4Engine.Configuration.performance)

SwiftUI.Picker:2:15: note: where 'SelectionValue' = 'Metal4Engine.Configuration'
1 | @available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)
2 | public struct Picker<Label, SelectionValue, Content> : View where Label : View, SelectionValue : Hashable, Content : View {
  |               `- note: where 'SelectionValue' = 'Metal4Engine.Configuration'
3 |     @MainActor @preconcurrency public var body: some View { get }
4 |     @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:368:36: error: instance method 'tag(_:includeOptional:)' requires that 'Metal4Engine.Configuration' conform to 'Hashable'
366 |                     .font(.caption)
367 |                 Picker("È¢ÑËÆæÈÖçÁΩÆ", selection: $selectedConfiguration) {
368 |                     Text("ÈªòËÆ§").tag(Metal4Engine.Configuration.default)
    |                                `- error: instance method 'tag(_:includeOptional:)' requires that 'Metal4Engine.Configuration' conform to 'Hashable'
369 |                     Text("ÊÄßËÉΩ‰ºòÂÖà").tag(Metal4Engine.Configuration.performance)
370 |                     Text("Ë¥®Èáè‰ºòÂÖà").tag(Metal4Engine.Configuration.quality)

SwiftUI.View.tag:2:25: note: where 'V' = 'Metal4Engine.Configuration'
1 | protocol View {
2 | nonisolated public func tag<V>(_ tag: V, includeOptional: Bool = true) -> some View where V : Hashable
  |                         `- note: where 'V' = 'Metal4Engine.Configuration'
3 |   }
4 | 

[#DeprecatedDeclaration]: <https://docs.swift.org/compiler/documentation/diagnostics/deprecated-declaration>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[138/160] Compiling SkyBridgeCore Metal4Engine.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:70:27: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 59 |     // MARK: - ÈÖçÁΩÆ
 60 |     
 61 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 62 |         public let enableAIInference: Bool
 63 |         public let enableMetalFX: Bool
    :
 68 |         public let aiModelPath: String?
 69 |         
 70 |         public static let `default` = Configuration(
    |                           |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 71 |             enableAIInference: true,
 72 |             enableMetalFX: true,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:80:27: error: static property 'performance' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 59 |     // MARK: - ÈÖçÁΩÆ
 60 |     
 61 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 62 |         public let enableAIInference: Bool
 63 |         public let enableMetalFX: Bool
    :
 78 |         )
 79 |         
 80 |         public static let performance = Configuration(
    |                           |- error: static property 'performance' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'performance' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 81 |             enableAIInference: false,
 82 |             enableMetalFX: true,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:90:27: error: static property 'quality' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 59 |     // MARK: - ÈÖçÁΩÆ
 60 |     
 61 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 62 |         public let enableAIInference: Bool
 63 |         public let enableMetalFX: Bool
    :
 88 |         )
 89 |         
 90 |         public static let quality = Configuration(
    |                           |- error: static property 'quality' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'quality' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 91 |             enableAIInference: true,
 92 |             enableMetalFX: true,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:179:38: error: type 'any MTLFXSpatialScaler' has no member 'supportsDevice'
177 |         // Ê£ÄÊü•MetalFXÊîØÊåÅ
178 |         if configuration.enableMetalFX {
179 |             guard MTLFXSpatialScaler.supportsDevice(device) else {
    |                                      `- error: type 'any MTLFXSpatialScaler' has no member 'supportsDevice'
180 |                 print("ËÆæÂ§á‰∏çÊîØÊåÅMetalFX")
181 |                 return false

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:281:40: error: expression is 'async' but is not marked with 'await'
279 |         }
280 |         
281 |         self.neuralRenderingPipeline = try device.makeComputePipelineState(function: aiFunction)
    |                                        |   `- note: call is 'async'
    |                                        `- error: expression is 'async' but is not marked with 'await'
282 |         
283 |         // ÂàõÂª∫MLPÊùÉÈáçÁºìÂÜ≤Âå∫

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:308:36: error: expression is 'async' but is not marked with 'await'
306 |         renderDescriptor.depthAttachmentPixelFormat = .depth32Float
307 |         
308 |         self.renderPipelineState = try device.makeRenderPipelineState(descriptor: renderDescriptor)
    |                                    |   `- note: call is 'async'
    |                                    `- error: expression is 'async' but is not marked with 'await'
309 |         
310 |         // ËÆ°ÁÆóÁÆ°Á∫ø

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:315:37: error: expression is 'async' but is not marked with 'await'
313 |         }
314 |         
315 |         self.computePipelineState = try device.makeComputePipelineState(function: computeFunction)
    |                                     |   `- note: call is 'async'
    |                                     `- error: expression is 'async' but is not marked with 'await'
316 |         
317 |         // ÂÖâÁ∫øËøΩË∏™ÁÆ°Á∫øÔºàÂ¶ÇÊûúÂêØÁî®Ôºâ

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:489:24: error: extra arguments at positions #2, #3 in call
487 |         
488 |         // ÊâßË°å‰∏äÈááÊ†∑
489 |         upscaler.encode(
    |                        `- error: extra arguments at positions #2, #3 in call
490 |             commandBuffer: commandBuffer,
491 |             sourceTexture: inputTexture,

MetalFX.MTLFXSpatialScaler.encode:2:6: note: 'encode(commandBuffer:)' declared here
1 | protocol MTLFXSpatialScaler {
2 | func encode(commandBuffer: any MTLCommandBuffer)}
  |      `- note: 'encode(commandBuffer:)' declared here
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:537:19: error: cannot pass immutable value as inout argument: 'uniforms' is a 'let' constant
527 |     
528 |     private func updateUniforms(viewMatrix: simd_float4x4, projectionMatrix: simd_float4x4) {
529 |         let uniforms = Uniforms(
    |         `- note: change 'let' to 'var' to make it mutable
530 |             modelMatrix: matrix_identity_float4x4,
531 |             viewMatrix: viewMatrix,
    :
535 |         
536 |         uniformBuffer.contents().copyMemory(
537 |             from: &uniforms,
    |                   `- error: cannot pass immutable value as inout argument: 'uniforms' is a 'let' constant
538 |             byteCount: MemoryLayout<Uniforms>.size
539 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:642:22: error: 'init(target:selector:)' is unavailable in macOS
640 |     
641 |     private func setupFrameTimer() {
642 |         frameTimer = CADisplayLink(target: self, selector: #selector(frameUpdate))
    |                      `- error: 'init(target:selector:)' is unavailable in macOS
643 |         frameTimer?.add(to: .main, forMode: .common)
644 |     }

/Users/macbookpro/Desktop/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/QuartzCore.framework/Headers/CADisplayLink.h:32:1: note: 'init(target:selector:)' has been explicitly marked unavailable here
 30 |  * For macOS, see NSView/NSWindow/NSScreen.displayLink(withTarget:selector:). */
 31 | 
 32 | + (CADisplayLink *)displayLinkWithTarget:(id)target selector:(SEL)sel
    | `- note: 'init(target:selector:)' has been explicitly marked unavailable here
 33 |     API_UNAVAILABLE(macos);
 34 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:716:13: warning: initialization of immutable value 'frameTime' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
714 |     
715 |     func endFrame() {
716 |         let frameTime = CACurrentMediaTime() - frameStartTime
    |             `- warning: initialization of immutable value 'frameTime' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
717 |         // ËÆ∞ÂΩïÊÄßËÉΩÊï∞ÊçÆ
718 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:315:18: warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
313 |             // AIÊé®ÁêÜÂºÄÂÖ≥
314 |             Toggle("AIÊé®ÁêÜÂ¢ûÂº∫", isOn: $aiInferenceEnabled)
315 |                 .onChange(of: aiInferenceEnabled) { newValue in
    |                  `- warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
316 |                     metalEngine.aiInferenceEnabled = newValue
317 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:321:18: warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
319 |             // MetalFXÂºÄÂÖ≥
320 |             Toggle("MetalFX‰∏äÈááÊ†∑", isOn: $metalFXEnabled)
321 |                 .onChange(of: metalFXEnabled) { newValue in
    |                  `- warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
322 |                     metalEngine.metalFXEnabled = newValue
323 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:327:18: warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
325 |             // Â∏ßÊèíÂÄºÂºÄÂÖ≥
326 |             Toggle("Â∏ßÊèíÂÄº", isOn: $frameInterpolationEnabled)
327 |                 .onChange(of: frameInterpolationEnabled) { newValue in
    |                  `- warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
328 |                     metalEngine.frameInterpolationEnabled = newValue
329 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:367:17: error: generic struct 'Picker' requires that 'Metal4Engine.Configuration' conform to 'Hashable'
365 |                 Text("È¢ÑËÆæÈÖçÁΩÆ")
366 |                     .font(.caption)
367 |                 Picker("È¢ÑËÆæÈÖçÁΩÆ", selection: $selectedConfiguration) {
    |                 `- error: generic struct 'Picker' requires that 'Metal4Engine.Configuration' conform to 'Hashable'
368 |                     Text("ÈªòËÆ§").tag(Metal4Engine.Configuration.default)
369 |                     Text("ÊÄßËÉΩ‰ºòÂÖà").tag(Metal4Engine.Configuration.performance)

SwiftUI.Picker:2:15: note: where 'SelectionValue' = 'Metal4Engine.Configuration'
1 | @available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)
2 | public struct Picker<Label, SelectionValue, Content> : View where Label : View, SelectionValue : Hashable, Content : View {
  |               `- note: where 'SelectionValue' = 'Metal4Engine.Configuration'
3 |     @MainActor @preconcurrency public var body: some View { get }
4 |     @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:368:36: error: instance method 'tag(_:includeOptional:)' requires that 'Metal4Engine.Configuration' conform to 'Hashable'
366 |                     .font(.caption)
367 |                 Picker("È¢ÑËÆæÈÖçÁΩÆ", selection: $selectedConfiguration) {
368 |                     Text("ÈªòËÆ§").tag(Metal4Engine.Configuration.default)
    |                                `- error: instance method 'tag(_:includeOptional:)' requires that 'Metal4Engine.Configuration' conform to 'Hashable'
369 |                     Text("ÊÄßËÉΩ‰ºòÂÖà").tag(Metal4Engine.Configuration.performance)
370 |                     Text("Ë¥®Èáè‰ºòÂÖà").tag(Metal4Engine.Configuration.quality)

SwiftUI.View.tag:2:25: note: where 'V' = 'Metal4Engine.Configuration'
1 | protocol View {
2 | nonisolated public func tag<V>(_ tag: V, includeOptional: Bool = true) -> some View where V : Hashable
  |                         `- note: where 'V' = 'Metal4Engine.Configuration'
3 |   }
4 | 

[#DeprecatedDeclaration]: <https://docs.swift.org/compiler/documentation/diagnostics/deprecated-declaration>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[139/160] Compiling SkyBridgeCore Metal4RenderView.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:70:27: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 59 |     // MARK: - ÈÖçÁΩÆ
 60 |     
 61 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 62 |         public let enableAIInference: Bool
 63 |         public let enableMetalFX: Bool
    :
 68 |         public let aiModelPath: String?
 69 |         
 70 |         public static let `default` = Configuration(
    |                           |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 71 |             enableAIInference: true,
 72 |             enableMetalFX: true,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:80:27: error: static property 'performance' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 59 |     // MARK: - ÈÖçÁΩÆ
 60 |     
 61 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 62 |         public let enableAIInference: Bool
 63 |         public let enableMetalFX: Bool
    :
 78 |         )
 79 |         
 80 |         public static let performance = Configuration(
    |                           |- error: static property 'performance' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'performance' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 81 |             enableAIInference: false,
 82 |             enableMetalFX: true,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:90:27: error: static property 'quality' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 59 |     // MARK: - ÈÖçÁΩÆ
 60 |     
 61 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 62 |         public let enableAIInference: Bool
 63 |         public let enableMetalFX: Bool
    :
 88 |         )
 89 |         
 90 |         public static let quality = Configuration(
    |                           |- error: static property 'quality' is not concurrency-safe because non-'Sendable' type 'Metal4Engine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'quality' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 91 |             enableAIInference: true,
 92 |             enableMetalFX: true,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:179:38: error: type 'any MTLFXSpatialScaler' has no member 'supportsDevice'
177 |         // Ê£ÄÊü•MetalFXÊîØÊåÅ
178 |         if configuration.enableMetalFX {
179 |             guard MTLFXSpatialScaler.supportsDevice(device) else {
    |                                      `- error: type 'any MTLFXSpatialScaler' has no member 'supportsDevice'
180 |                 print("ËÆæÂ§á‰∏çÊîØÊåÅMetalFX")
181 |                 return false

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:281:40: error: expression is 'async' but is not marked with 'await'
279 |         }
280 |         
281 |         self.neuralRenderingPipeline = try device.makeComputePipelineState(function: aiFunction)
    |                                        |   `- note: call is 'async'
    |                                        `- error: expression is 'async' but is not marked with 'await'
282 |         
283 |         // ÂàõÂª∫MLPÊùÉÈáçÁºìÂÜ≤Âå∫

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:308:36: error: expression is 'async' but is not marked with 'await'
306 |         renderDescriptor.depthAttachmentPixelFormat = .depth32Float
307 |         
308 |         self.renderPipelineState = try device.makeRenderPipelineState(descriptor: renderDescriptor)
    |                                    |   `- note: call is 'async'
    |                                    `- error: expression is 'async' but is not marked with 'await'
309 |         
310 |         // ËÆ°ÁÆóÁÆ°Á∫ø

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:315:37: error: expression is 'async' but is not marked with 'await'
313 |         }
314 |         
315 |         self.computePipelineState = try device.makeComputePipelineState(function: computeFunction)
    |                                     |   `- note: call is 'async'
    |                                     `- error: expression is 'async' but is not marked with 'await'
316 |         
317 |         // ÂÖâÁ∫øËøΩË∏™ÁÆ°Á∫øÔºàÂ¶ÇÊûúÂêØÁî®Ôºâ

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:489:24: error: extra arguments at positions #2, #3 in call
487 |         
488 |         // ÊâßË°å‰∏äÈááÊ†∑
489 |         upscaler.encode(
    |                        `- error: extra arguments at positions #2, #3 in call
490 |             commandBuffer: commandBuffer,
491 |             sourceTexture: inputTexture,

MetalFX.MTLFXSpatialScaler.encode:2:6: note: 'encode(commandBuffer:)' declared here
1 | protocol MTLFXSpatialScaler {
2 | func encode(commandBuffer: any MTLCommandBuffer)}
  |      `- note: 'encode(commandBuffer:)' declared here
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:537:19: error: cannot pass immutable value as inout argument: 'uniforms' is a 'let' constant
527 |     
528 |     private func updateUniforms(viewMatrix: simd_float4x4, projectionMatrix: simd_float4x4) {
529 |         let uniforms = Uniforms(
    |         `- note: change 'let' to 'var' to make it mutable
530 |             modelMatrix: matrix_identity_float4x4,
531 |             viewMatrix: viewMatrix,
    :
535 |         
536 |         uniformBuffer.contents().copyMemory(
537 |             from: &uniforms,
    |                   `- error: cannot pass immutable value as inout argument: 'uniforms' is a 'let' constant
538 |             byteCount: MemoryLayout<Uniforms>.size
539 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:642:22: error: 'init(target:selector:)' is unavailable in macOS
640 |     
641 |     private func setupFrameTimer() {
642 |         frameTimer = CADisplayLink(target: self, selector: #selector(frameUpdate))
    |                      `- error: 'init(target:selector:)' is unavailable in macOS
643 |         frameTimer?.add(to: .main, forMode: .common)
644 |     }

/Users/macbookpro/Desktop/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/QuartzCore.framework/Headers/CADisplayLink.h:32:1: note: 'init(target:selector:)' has been explicitly marked unavailable here
 30 |  * For macOS, see NSView/NSWindow/NSScreen.displayLink(withTarget:selector:). */
 31 | 
 32 | + (CADisplayLink *)displayLinkWithTarget:(id)target selector:(SEL)sel
    | `- note: 'init(target:selector:)' has been explicitly marked unavailable here
 33 |     API_UNAVAILABLE(macos);
 34 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4Engine.swift:716:13: warning: initialization of immutable value 'frameTime' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
714 |     
715 |     func endFrame() {
716 |         let frameTime = CACurrentMediaTime() - frameStartTime
    |             `- warning: initialization of immutable value 'frameTime' was never used; consider replacing with assignment to '_' or removing it [#no-usage]
717 |         // ËÆ∞ÂΩïÊÄßËÉΩÊï∞ÊçÆ
718 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:315:18: warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
313 |             // AIÊé®ÁêÜÂºÄÂÖ≥
314 |             Toggle("AIÊé®ÁêÜÂ¢ûÂº∫", isOn: $aiInferenceEnabled)
315 |                 .onChange(of: aiInferenceEnabled) { newValue in
    |                  `- warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
316 |                     metalEngine.aiInferenceEnabled = newValue
317 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:321:18: warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
319 |             // MetalFXÂºÄÂÖ≥
320 |             Toggle("MetalFX‰∏äÈááÊ†∑", isOn: $metalFXEnabled)
321 |                 .onChange(of: metalFXEnabled) { newValue in
    |                  `- warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
322 |                     metalEngine.metalFXEnabled = newValue
323 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:327:18: warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
325 |             // Â∏ßÊèíÂÄºÂºÄÂÖ≥
326 |             Toggle("Â∏ßÊèíÂÄº", isOn: $frameInterpolationEnabled)
327 |                 .onChange(of: frameInterpolationEnabled) { newValue in
    |                  `- warning: 'onChange(of:perform:)' was deprecated in macOS 14.0: Use `onChange` with a two or zero parameter action closure instead. [#DeprecatedDeclaration]
328 |                     metalEngine.frameInterpolationEnabled = newValue
329 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:367:17: error: generic struct 'Picker' requires that 'Metal4Engine.Configuration' conform to 'Hashable'
365 |                 Text("È¢ÑËÆæÈÖçÁΩÆ")
366 |                     .font(.caption)
367 |                 Picker("È¢ÑËÆæÈÖçÁΩÆ", selection: $selectedConfiguration) {
    |                 `- error: generic struct 'Picker' requires that 'Metal4Engine.Configuration' conform to 'Hashable'
368 |                     Text("ÈªòËÆ§").tag(Metal4Engine.Configuration.default)
369 |                     Text("ÊÄßËÉΩ‰ºòÂÖà").tag(Metal4Engine.Configuration.performance)

SwiftUI.Picker:2:15: note: where 'SelectionValue' = 'Metal4Engine.Configuration'
1 | @available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)
2 | public struct Picker<Label, SelectionValue, Content> : View where Label : View, SelectionValue : Hashable, Content : View {
  |               `- note: where 'SelectionValue' = 'Metal4Engine.Configuration'
3 |     @MainActor @preconcurrency public var body: some View { get }
4 |     @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/Rendering/Metal4RenderView.swift:368:36: error: instance method 'tag(_:includeOptional:)' requires that 'Metal4Engine.Configuration' conform to 'Hashable'
366 |                     .font(.caption)
367 |                 Picker("È¢ÑËÆæÈÖçÁΩÆ", selection: $selectedConfiguration) {
368 |                     Text("ÈªòËÆ§").tag(Metal4Engine.Configuration.default)
    |                                `- error: instance method 'tag(_:includeOptional:)' requires that 'Metal4Engine.Configuration' conform to 'Hashable'
369 |                     Text("ÊÄßËÉΩ‰ºòÂÖà").tag(Metal4Engine.Configuration.performance)
370 |                     Text("Ë¥®Èáè‰ºòÂÖà").tag(Metal4Engine.Configuration.quality)

SwiftUI.View.tag:2:25: note: where 'V' = 'Metal4Engine.Configuration'
1 | protocol View {
2 | nonisolated public func tag<V>(_ tag: V, includeOptional: Bool = true) -> some View where V : Hashable
  |                         `- note: where 'V' = 'Metal4Engine.Configuration'
3 |   }
4 | 

[#DeprecatedDeclaration]: <https://docs.swift.org/compiler/documentation/diagnostics/deprecated-declaration>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[140/160] Compiling SkyBridgeCore FileTransferModels.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: error: invalid redeclaration of 'FileTransferRequest'
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- error: invalid redeclaration of 'FileTransferRequest'
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:590:23: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
588 |     public let timeoutInterval: TimeInterval
589 |     
590 |     public static let `default` = TransferQualitySettings(
    |                       |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
591 |         priority: .normal,
592 |         compressionLevel: .balanced,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:598:23: error: static property 'highSpeed' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
596 |     )
597 |     
598 |     public static let highSpeed = TransferQualitySettings(
    |                       |- error: static property 'highSpeed' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'highSpeed' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
599 |         priority: .high,
600 |         compressionLevel: .fast,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:606:23: error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
604 |     )
605 |     
606 |     public static let highSecurity = TransferQualitySettings(
    |                       |- error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'highSecurity' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
607 |         priority: .normal,
608 |         compressionLevel: .maximum,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:301:16: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
299 |     public var formattedFileSize: String {
300 |         let formatter = ByteCountFormatter()
301 |         return formatter.string(fromByteCount: fileSize, countStyle: .file)
    |                `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
302 |     }
303 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:424:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
422 |         let formatter = ByteCountFormatter()
423 |         formatter.countStyle = .file
424 |         return "\(formatter.string(fromByteCount: Int64(averageSpeed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
425 |     }
426 | }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:568:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
566 |         let formatter = ByteCountFormatter()
567 |         formatter.countStyle = .file
568 |         return "\(formatter.string(fromByteCount: Int64(averageSpeed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
569 |     }
570 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:747:8: error: type 'FilePickerView' does not conform to protocol 'NSViewControllerRepresentable'
745 | // MARK: - Êñá‰ª∂ÈÄâÊã©Âô®
746 | 
747 | struct FilePickerView: NSViewControllerRepresentable {
    |        `- error: type 'FilePickerView' does not conform to protocol 'NSViewControllerRepresentable'
748 |     let onFilesSelected: ([URL]) -> Void
749 |     
750 |     func makeNSViewController(context: Context) -> NSOpenPanel {
    |          `- note: candidate would match and infer 'NSViewControllerType' = 'NSOpenPanel' if 'NSOpenPanel' inherited from 'NSViewController'
751 |         let panel = NSOpenPanel()
752 |         panel.allowsMultipleSelection = true
    :
756 |     }
757 |     
758 |     func updateNSViewController(_ nsViewController: NSOpenPanel, context: Context) {
    |          `- note: candidate would match and infer 'NSViewControllerType' = 'NSOpenPanel' if 'NSOpenPanel' inherited from 'NSViewController'
759 |         nsViewController.begin { response in
760 |             if response == .OK {

SwiftUI.NSViewControllerRepresentable.NSViewControllerType:2:16: note: unable to infer associated type 'NSViewControllerType' for protocol 'NSViewControllerRepresentable'
1 | protocol NSViewControllerRepresentable {
2 | associatedtype NSViewControllerType : NSViewController}
  |                `- note: unable to infer associated type 'NSViewControllerType' for protocol 'NSViewControllerRepresentable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:176:47: error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
174 |                         Text("ÊîØÊåÅÂ§öÊñá‰ª∂ÂêåÊó∂‰º†Ëæì")
175 |                             .font(.caption)
176 |                             .foregroundColor(.tertiary)
    |                                               `- error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
177 |                     }
178 |                 )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:176:47: error: instance member 'tertiary' cannot be used on type 'Color?'
174 |                         Text("ÊîØÊåÅÂ§öÊñá‰ª∂ÂêåÊó∂‰º†Ëæì")
175 |                             .font(.caption)
176 |                             .foregroundColor(.tertiary)
    |                                               `- error: instance member 'tertiary' cannot be used on type 'Color?'
177 |                     }
178 |                 )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:252:35: error: instance member 'tertiary' cannot be used on type 'Color?'
250 |             Text("ÂÆåÊàêÁöÑ‰º†ËæìËÆ∞ÂΩïÂ∞ÜÊòæÁ§∫Âú®ËøôÈáå")
251 |                 .font(.caption)
252 |                 .foregroundColor(.tertiary)
    |                                   `- error: instance member 'tertiary' cannot be used on type 'Color?'
253 |         }
254 |         .frame(maxWidth: .infinity, maxHeight: .infinity)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:252:35: error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
250 |             Text("ÂÆåÊàêÁöÑ‰º†ËæìËÆ∞ÂΩïÂ∞ÜÊòæÁ§∫Âú®ËøôÈáå")
251 |                 .font(.caption)
252 |                 .foregroundColor(.tertiary)
    |                                   `- error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
253 |         }
254 |         .frame(maxWidth: .infinity, maxHeight: .infinity)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:293:35: error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
291 |             Text("Á°Æ‰øùÁõÆÊ†áËÆæÂ§áÂ∑≤ÂºÄÂêØSkyBridgeÂπ∂Âú®Âêå‰∏ÄÁΩëÁªú")
292 |                 .font(.caption)
293 |                 .foregroundColor(.tertiary)
    |                                   `- error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
294 |                 .multilineTextAlignment(.center)
295 |             

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:293:35: error: instance member 'tertiary' cannot be used on type 'Color?'
291 |             Text("Á°Æ‰øùÁõÆÊ†áËÆæÂ§áÂ∑≤ÂºÄÂêØSkyBridgeÂπ∂Âú®Âêå‰∏ÄÁΩëÁªú")
292 |                 .font(.caption)
293 |                 .foregroundColor(.tertiary)
    |                                   `- error: instance member 'tertiary' cannot be used on type 'Color?'
294 |                 .multilineTextAlignment(.center)
295 |             

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:360:25: warning: mutation of captured var 'urls' in concurrently-executing code [#SendableClosureCaptures]
358 |                     if let data = item as? Data,
359 |                        let url = URL(dataRepresentation: data, relativeTo: nil) {
360 |                         urls.append(url)
    |                         `- warning: mutation of captured var 'urls' in concurrently-executing code [#SendableClosureCaptures]
361 |                     }
362 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:425:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
423 |         let formatter = ByteCountFormatter()
424 |         formatter.countStyle = .file
425 |         return "\(formatter.string(fromByteCount: Int64(speed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
426 |     }
427 | }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:555:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
553 |     private func formatSpeed(_ speed: Double) -> String {
554 |         let formatter = ByteCountFormatter()
555 |         return "\(formatter.string(fromByteCount: Int64(speed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
556 |     }
557 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:670:25: error: failed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs)
668 |     let onSelect: () -> Void
669 |     
670 |     var body: some View {
    |                         `- error: failed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs)
671 |         Button(action: onSelect) {
672 |             HStack {

[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[141/160] Compiling SkyBridgeCore FileTransferView.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: error: invalid redeclaration of 'FileTransferRequest'
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- error: invalid redeclaration of 'FileTransferRequest'
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:590:23: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
588 |     public let timeoutInterval: TimeInterval
589 |     
590 |     public static let `default` = TransferQualitySettings(
    |                       |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
591 |         priority: .normal,
592 |         compressionLevel: .balanced,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:598:23: error: static property 'highSpeed' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
596 |     )
597 |     
598 |     public static let highSpeed = TransferQualitySettings(
    |                       |- error: static property 'highSpeed' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'highSpeed' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
599 |         priority: .high,
600 |         compressionLevel: .fast,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:606:23: error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
604 |     )
605 |     
606 |     public static let highSecurity = TransferQualitySettings(
    |                       |- error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'highSecurity' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
607 |         priority: .normal,
608 |         compressionLevel: .maximum,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:301:16: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
299 |     public var formattedFileSize: String {
300 |         let formatter = ByteCountFormatter()
301 |         return formatter.string(fromByteCount: fileSize, countStyle: .file)
    |                `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
302 |     }
303 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:424:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
422 |         let formatter = ByteCountFormatter()
423 |         formatter.countStyle = .file
424 |         return "\(formatter.string(fromByteCount: Int64(averageSpeed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
425 |     }
426 | }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:568:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
566 |         let formatter = ByteCountFormatter()
567 |         formatter.countStyle = .file
568 |         return "\(formatter.string(fromByteCount: Int64(averageSpeed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
569 |     }
570 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:747:8: error: type 'FilePickerView' does not conform to protocol 'NSViewControllerRepresentable'
745 | // MARK: - Êñá‰ª∂ÈÄâÊã©Âô®
746 | 
747 | struct FilePickerView: NSViewControllerRepresentable {
    |        `- error: type 'FilePickerView' does not conform to protocol 'NSViewControllerRepresentable'
748 |     let onFilesSelected: ([URL]) -> Void
749 |     
750 |     func makeNSViewController(context: Context) -> NSOpenPanel {
    |          `- note: candidate would match and infer 'NSViewControllerType' = 'NSOpenPanel' if 'NSOpenPanel' inherited from 'NSViewController'
751 |         let panel = NSOpenPanel()
752 |         panel.allowsMultipleSelection = true
    :
756 |     }
757 |     
758 |     func updateNSViewController(_ nsViewController: NSOpenPanel, context: Context) {
    |          `- note: candidate would match and infer 'NSViewControllerType' = 'NSOpenPanel' if 'NSOpenPanel' inherited from 'NSViewController'
759 |         nsViewController.begin { response in
760 |             if response == .OK {

SwiftUI.NSViewControllerRepresentable.NSViewControllerType:2:16: note: unable to infer associated type 'NSViewControllerType' for protocol 'NSViewControllerRepresentable'
1 | protocol NSViewControllerRepresentable {
2 | associatedtype NSViewControllerType : NSViewController}
  |                `- note: unable to infer associated type 'NSViewControllerType' for protocol 'NSViewControllerRepresentable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:176:47: error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
174 |                         Text("ÊîØÊåÅÂ§öÊñá‰ª∂ÂêåÊó∂‰º†Ëæì")
175 |                             .font(.caption)
176 |                             .foregroundColor(.tertiary)
    |                                               `- error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
177 |                     }
178 |                 )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:176:47: error: instance member 'tertiary' cannot be used on type 'Color?'
174 |                         Text("ÊîØÊåÅÂ§öÊñá‰ª∂ÂêåÊó∂‰º†Ëæì")
175 |                             .font(.caption)
176 |                             .foregroundColor(.tertiary)
    |                                               `- error: instance member 'tertiary' cannot be used on type 'Color?'
177 |                     }
178 |                 )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:252:35: error: instance member 'tertiary' cannot be used on type 'Color?'
250 |             Text("ÂÆåÊàêÁöÑ‰º†ËæìËÆ∞ÂΩïÂ∞ÜÊòæÁ§∫Âú®ËøôÈáå")
251 |                 .font(.caption)
252 |                 .foregroundColor(.tertiary)
    |                                   `- error: instance member 'tertiary' cannot be used on type 'Color?'
253 |         }
254 |         .frame(maxWidth: .infinity, maxHeight: .infinity)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:252:35: error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
250 |             Text("ÂÆåÊàêÁöÑ‰º†ËæìËÆ∞ÂΩïÂ∞ÜÊòæÁ§∫Âú®ËøôÈáå")
251 |                 .font(.caption)
252 |                 .foregroundColor(.tertiary)
    |                                   `- error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
253 |         }
254 |         .frame(maxWidth: .infinity, maxHeight: .infinity)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:293:35: error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
291 |             Text("Á°Æ‰øùÁõÆÊ†áËÆæÂ§áÂ∑≤ÂºÄÂêØSkyBridgeÂπ∂Âú®Âêå‰∏ÄÁΩëÁªú")
292 |                 .font(.caption)
293 |                 .foregroundColor(.tertiary)
    |                                   `- error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
294 |                 .multilineTextAlignment(.center)
295 |             

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:293:35: error: instance member 'tertiary' cannot be used on type 'Color?'
291 |             Text("Á°Æ‰øùÁõÆÊ†áËÆæÂ§áÂ∑≤ÂºÄÂêØSkyBridgeÂπ∂Âú®Âêå‰∏ÄÁΩëÁªú")
292 |                 .font(.caption)
293 |                 .foregroundColor(.tertiary)
    |                                   `- error: instance member 'tertiary' cannot be used on type 'Color?'
294 |                 .multilineTextAlignment(.center)
295 |             

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:360:25: warning: mutation of captured var 'urls' in concurrently-executing code [#SendableClosureCaptures]
358 |                     if let data = item as? Data,
359 |                        let url = URL(dataRepresentation: data, relativeTo: nil) {
360 |                         urls.append(url)
    |                         `- warning: mutation of captured var 'urls' in concurrently-executing code [#SendableClosureCaptures]
361 |                     }
362 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:425:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
423 |         let formatter = ByteCountFormatter()
424 |         formatter.countStyle = .file
425 |         return "\(formatter.string(fromByteCount: Int64(speed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
426 |     }
427 | }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:555:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
553 |     private func formatSpeed(_ speed: Double) -> String {
554 |         let formatter = ByteCountFormatter()
555 |         return "\(formatter.string(fromByteCount: Int64(speed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
556 |     }
557 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:670:25: error: failed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs)
668 |     let onSelect: () -> Void
669 |     
670 |     var body: some View {
    |                         `- error: failed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs)
671 |         Button(action: onSelect) {
672 |             HStack {

[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[142/160] Compiling SkyBridgeCore FileTransferManager.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: error: invalid redeclaration of 'FileTransferRequest'
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- error: invalid redeclaration of 'FileTransferRequest'
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:590:23: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
588 |     public let timeoutInterval: TimeInterval
589 |     
590 |     public static let `default` = TransferQualitySettings(
    |                       |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
591 |         priority: .normal,
592 |         compressionLevel: .balanced,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:598:23: error: static property 'highSpeed' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
596 |     )
597 |     
598 |     public static let highSpeed = TransferQualitySettings(
    |                       |- error: static property 'highSpeed' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'highSpeed' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
599 |         priority: .high,
600 |         compressionLevel: .fast,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:606:23: error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
604 |     )
605 |     
606 |     public static let highSecurity = TransferQualitySettings(
    |                       |- error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'highSecurity' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
607 |         priority: .normal,
608 |         compressionLevel: .maximum,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:301:16: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
299 |     public var formattedFileSize: String {
300 |         let formatter = ByteCountFormatter()
301 |         return formatter.string(fromByteCount: fileSize, countStyle: .file)
    |                `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
302 |     }
303 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:424:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
422 |         let formatter = ByteCountFormatter()
423 |         formatter.countStyle = .file
424 |         return "\(formatter.string(fromByteCount: Int64(averageSpeed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
425 |     }
426 | }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:568:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
566 |         let formatter = ByteCountFormatter()
567 |         formatter.countStyle = .file
568 |         return "\(formatter.string(fromByteCount: Int64(averageSpeed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
569 |     }
570 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:747:8: error: type 'FilePickerView' does not conform to protocol 'NSViewControllerRepresentable'
745 | // MARK: - Êñá‰ª∂ÈÄâÊã©Âô®
746 | 
747 | struct FilePickerView: NSViewControllerRepresentable {
    |        `- error: type 'FilePickerView' does not conform to protocol 'NSViewControllerRepresentable'
748 |     let onFilesSelected: ([URL]) -> Void
749 |     
750 |     func makeNSViewController(context: Context) -> NSOpenPanel {
    |          `- note: candidate would match and infer 'NSViewControllerType' = 'NSOpenPanel' if 'NSOpenPanel' inherited from 'NSViewController'
751 |         let panel = NSOpenPanel()
752 |         panel.allowsMultipleSelection = true
    :
756 |     }
757 |     
758 |     func updateNSViewController(_ nsViewController: NSOpenPanel, context: Context) {
    |          `- note: candidate would match and infer 'NSViewControllerType' = 'NSOpenPanel' if 'NSOpenPanel' inherited from 'NSViewController'
759 |         nsViewController.begin { response in
760 |             if response == .OK {

SwiftUI.NSViewControllerRepresentable.NSViewControllerType:2:16: note: unable to infer associated type 'NSViewControllerType' for protocol 'NSViewControllerRepresentable'
1 | protocol NSViewControllerRepresentable {
2 | associatedtype NSViewControllerType : NSViewController}
  |                `- note: unable to infer associated type 'NSViewControllerType' for protocol 'NSViewControllerRepresentable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:176:47: error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
174 |                         Text("ÊîØÊåÅÂ§öÊñá‰ª∂ÂêåÊó∂‰º†Ëæì")
175 |                             .font(.caption)
176 |                             .foregroundColor(.tertiary)
    |                                               `- error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
177 |                     }
178 |                 )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:176:47: error: instance member 'tertiary' cannot be used on type 'Color?'
174 |                         Text("ÊîØÊåÅÂ§öÊñá‰ª∂ÂêåÊó∂‰º†Ëæì")
175 |                             .font(.caption)
176 |                             .foregroundColor(.tertiary)
    |                                               `- error: instance member 'tertiary' cannot be used on type 'Color?'
177 |                     }
178 |                 )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:252:35: error: instance member 'tertiary' cannot be used on type 'Color?'
250 |             Text("ÂÆåÊàêÁöÑ‰º†ËæìËÆ∞ÂΩïÂ∞ÜÊòæÁ§∫Âú®ËøôÈáå")
251 |                 .font(.caption)
252 |                 .foregroundColor(.tertiary)
    |                                   `- error: instance member 'tertiary' cannot be used on type 'Color?'
253 |         }
254 |         .frame(maxWidth: .infinity, maxHeight: .infinity)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:252:35: error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
250 |             Text("ÂÆåÊàêÁöÑ‰º†ËæìËÆ∞ÂΩïÂ∞ÜÊòæÁ§∫Âú®ËøôÈáå")
251 |                 .font(.caption)
252 |                 .foregroundColor(.tertiary)
    |                                   `- error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
253 |         }
254 |         .frame(maxWidth: .infinity, maxHeight: .infinity)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:293:35: error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
291 |             Text("Á°Æ‰øùÁõÆÊ†áËÆæÂ§áÂ∑≤ÂºÄÂêØSkyBridgeÂπ∂Âú®Âêå‰∏ÄÁΩëÁªú")
292 |                 .font(.caption)
293 |                 .foregroundColor(.tertiary)
    |                                   `- error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
294 |                 .multilineTextAlignment(.center)
295 |             

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:293:35: error: instance member 'tertiary' cannot be used on type 'Color?'
291 |             Text("Á°Æ‰øùÁõÆÊ†áËÆæÂ§áÂ∑≤ÂºÄÂêØSkyBridgeÂπ∂Âú®Âêå‰∏ÄÁΩëÁªú")
292 |                 .font(.caption)
293 |                 .foregroundColor(.tertiary)
    |                                   `- error: instance member 'tertiary' cannot be used on type 'Color?'
294 |                 .multilineTextAlignment(.center)
295 |             

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:360:25: warning: mutation of captured var 'urls' in concurrently-executing code [#SendableClosureCaptures]
358 |                     if let data = item as? Data,
359 |                        let url = URL(dataRepresentation: data, relativeTo: nil) {
360 |                         urls.append(url)
    |                         `- warning: mutation of captured var 'urls' in concurrently-executing code [#SendableClosureCaptures]
361 |                     }
362 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:425:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
423 |         let formatter = ByteCountFormatter()
424 |         formatter.countStyle = .file
425 |         return "\(formatter.string(fromByteCount: Int64(speed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
426 |     }
427 | }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:555:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
553 |     private func formatSpeed(_ speed: Double) -> String {
554 |         let formatter = ByteCountFormatter()
555 |         return "\(formatter.string(fromByteCount: Int64(speed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
556 |     }
557 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:670:25: error: failed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs)
668 |     let onSelect: () -> Void
669 |     
670 |     var body: some View {
    |                         `- error: failed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs)
671 |         Button(action: onSelect) {
672 |             HStack {

[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[143/160] Compiling SkyBridgeCore IntentBridge.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: error: invalid redeclaration of 'FileTransferRequest'
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- error: invalid redeclaration of 'FileTransferRequest'
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:590:23: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
588 |     public let timeoutInterval: TimeInterval
589 |     
590 |     public static let `default` = TransferQualitySettings(
    |                       |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
591 |         priority: .normal,
592 |         compressionLevel: .balanced,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:598:23: error: static property 'highSpeed' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
596 |     )
597 |     
598 |     public static let highSpeed = TransferQualitySettings(
    |                       |- error: static property 'highSpeed' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'highSpeed' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
599 |         priority: .high,
600 |         compressionLevel: .fast,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:606:23: error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
581 | 
582 | /// ‰º†ËæìË¥®ÈáèÈÖçÁΩÆ
583 | public struct TransferQualitySettings: Codable {
    |               `- note: consider making struct 'TransferQualitySettings' conform to the 'Sendable' protocol
584 |     public let priority: TransferPriority
585 |     public let compressionLevel: CompressionLevel
    :
604 |     )
605 |     
606 |     public static let highSecurity = TransferQualitySettings(
    |                       |- error: static property 'highSecurity' is not concurrency-safe because non-'Sendable' type 'TransferQualitySettings' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'highSecurity' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
607 |         priority: .normal,
608 |         compressionLevel: .maximum,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:301:16: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
299 |     public var formattedFileSize: String {
300 |         let formatter = ByteCountFormatter()
301 |         return formatter.string(fromByteCount: fileSize, countStyle: .file)
    |                `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
302 |     }
303 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:424:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
422 |         let formatter = ByteCountFormatter()
423 |         formatter.countStyle = .file
424 |         return "\(formatter.string(fromByteCount: Int64(averageSpeed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
425 |     }
426 | }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:568:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
566 |         let formatter = ByteCountFormatter()
567 |         formatter.countStyle = .file
568 |         return "\(formatter.string(fromByteCount: Int64(averageSpeed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
569 |     }
570 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:747:8: error: type 'FilePickerView' does not conform to protocol 'NSViewControllerRepresentable'
745 | // MARK: - Êñá‰ª∂ÈÄâÊã©Âô®
746 | 
747 | struct FilePickerView: NSViewControllerRepresentable {
    |        `- error: type 'FilePickerView' does not conform to protocol 'NSViewControllerRepresentable'
748 |     let onFilesSelected: ([URL]) -> Void
749 |     
750 |     func makeNSViewController(context: Context) -> NSOpenPanel {
    |          `- note: candidate would match and infer 'NSViewControllerType' = 'NSOpenPanel' if 'NSOpenPanel' inherited from 'NSViewController'
751 |         let panel = NSOpenPanel()
752 |         panel.allowsMultipleSelection = true
    :
756 |     }
757 |     
758 |     func updateNSViewController(_ nsViewController: NSOpenPanel, context: Context) {
    |          `- note: candidate would match and infer 'NSViewControllerType' = 'NSOpenPanel' if 'NSOpenPanel' inherited from 'NSViewController'
759 |         nsViewController.begin { response in
760 |             if response == .OK {

SwiftUI.NSViewControllerRepresentable.NSViewControllerType:2:16: note: unable to infer associated type 'NSViewControllerType' for protocol 'NSViewControllerRepresentable'
1 | protocol NSViewControllerRepresentable {
2 | associatedtype NSViewControllerType : NSViewController}
  |                `- note: unable to infer associated type 'NSViewControllerType' for protocol 'NSViewControllerRepresentable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:176:47: error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
174 |                         Text("ÊîØÊåÅÂ§öÊñá‰ª∂ÂêåÊó∂‰º†Ëæì")
175 |                             .font(.caption)
176 |                             .foregroundColor(.tertiary)
    |                                               `- error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
177 |                     }
178 |                 )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:176:47: error: instance member 'tertiary' cannot be used on type 'Color?'
174 |                         Text("ÊîØÊåÅÂ§öÊñá‰ª∂ÂêåÊó∂‰º†Ëæì")
175 |                             .font(.caption)
176 |                             .foregroundColor(.tertiary)
    |                                               `- error: instance member 'tertiary' cannot be used on type 'Color?'
177 |                     }
178 |                 )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:252:35: error: instance member 'tertiary' cannot be used on type 'Color?'
250 |             Text("ÂÆåÊàêÁöÑ‰º†ËæìËÆ∞ÂΩïÂ∞ÜÊòæÁ§∫Âú®ËøôÈáå")
251 |                 .font(.caption)
252 |                 .foregroundColor(.tertiary)
    |                                   `- error: instance member 'tertiary' cannot be used on type 'Color?'
253 |         }
254 |         .frame(maxWidth: .infinity, maxHeight: .infinity)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:252:35: error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
250 |             Text("ÂÆåÊàêÁöÑ‰º†ËæìËÆ∞ÂΩïÂ∞ÜÊòæÁ§∫Âú®ËøôÈáå")
251 |                 .font(.caption)
252 |                 .foregroundColor(.tertiary)
    |                                   `- error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
253 |         }
254 |         .frame(maxWidth: .infinity, maxHeight: .infinity)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:293:35: error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
291 |             Text("Á°Æ‰øùÁõÆÊ†áËÆæÂ§áÂ∑≤ÂºÄÂêØSkyBridgeÂπ∂Âú®Âêå‰∏ÄÁΩëÁªú")
292 |                 .font(.caption)
293 |                 .foregroundColor(.tertiary)
    |                                   `- error: member 'tertiary' in 'Color?' produces result of type 'some ShapeStyle', but context expects 'Color?'
294 |                 .multilineTextAlignment(.center)
295 |             

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:293:35: error: instance member 'tertiary' cannot be used on type 'Color?'
291 |             Text("Á°Æ‰øùÁõÆÊ†áËÆæÂ§áÂ∑≤ÂºÄÂêØSkyBridgeÂπ∂Âú®Âêå‰∏ÄÁΩëÁªú")
292 |                 .font(.caption)
293 |                 .foregroundColor(.tertiary)
    |                                   `- error: instance member 'tertiary' cannot be used on type 'Color?'
294 |                 .multilineTextAlignment(.center)
295 |             

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:360:25: warning: mutation of captured var 'urls' in concurrently-executing code [#SendableClosureCaptures]
358 |                     if let data = item as? Data,
359 |                        let url = URL(dataRepresentation: data, relativeTo: nil) {
360 |                         urls.append(url)
    |                         `- warning: mutation of captured var 'urls' in concurrently-executing code [#SendableClosureCaptures]
361 |                     }
362 |                 }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:425:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
423 |         let formatter = ByteCountFormatter()
424 |         formatter.countStyle = .file
425 |         return "\(formatter.string(fromByteCount: Int64(speed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
426 |     }
427 | }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:555:19: error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
553 |     private func formatSpeed(_ speed: Double) -> String {
554 |         let formatter = ByteCountFormatter()
555 |         return "\(formatter.string(fromByteCount: Int64(speed), countStyle: .file))/s"
    |                   `- error: static member 'string' cannot be used on instance of type 'ByteCountFormatter'
556 |     }
557 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferView.swift:670:25: error: failed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs)
668 |     let onSelect: () -> Void
669 |     
670 |     var body: some View {
    |                         `- error: failed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs)
671 |         Button(action: onSelect) {
672 |             HStack {

[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[144/160] Compiling SkyBridgeCore HardwareRemoteDesktopEngine.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:25:38: error: 'ScreenCaptureEngine' is ambiguous for type lookup in this context
 23 |     private let metalDevice: MTLDevice
 24 |     private let metalCommandQueue: MTLCommandQueue
 25 |     private let screenCaptureEngine: ScreenCaptureEngine
    |                                      `- error: 'ScreenCaptureEngine' is ambiguous for type lookup in this context
 26 |     private let videoEncoder: HardwareVideoEncoder
 27 |     private let frameProcessor: MetalFrameProcessor
    :
214 | 
215 | // MARK: - Â±èÂπïÊçïËé∑ÂºïÊìé
216 | private class ScreenCaptureEngine {
    |               `- note: found this candidate
217 |     private let metalDevice: MTLDevice
218 |     private var captureSession: AVCaptureSession?

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/ScreenCaptureEngine.swift:12:14: note: found this candidate
 10 | /// È´òÊÄßËÉΩÂ±èÂπïÊçïËé∑ÂºïÊìé - ‰ΩøÁî®ScreenCaptureKitÂÆûÁé∞Á°¨‰ª∂Âä†ÈÄüÁöÑÂ±èÂπïÊçïËé∑
 11 | @MainActor
 12 | public class ScreenCaptureEngine: NSObject, ObservableObject {
    |              `- note: found this candidate
 13 |     
 14 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:26:31: error: 'HardwareVideoEncoder' is ambiguous for type lookup in this context
 24 |     private let metalCommandQueue: MTLCommandQueue
 25 |     private let screenCaptureEngine: ScreenCaptureEngine
 26 |     private let videoEncoder: HardwareVideoEncoder
    |                               `- error: 'HardwareVideoEncoder' is ambiguous for type lookup in this context
 27 |     private let frameProcessor: MetalFrameProcessor
 28 |     private let networkStreamer: RemoteDesktopStreamer
    :
282 | 
283 | // MARK: - Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô®
284 | private class HardwareVideoEncoder {
    |               `- note: found this candidate
285 |     private var compressionSession: VTCompressionSession?
286 |     private var config: EncodingConfiguration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:10:14: note: found this candidate
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: found this candidate
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:216:15: error: invalid redeclaration of 'ScreenCaptureEngine'
214 | 
215 | // MARK: - Â±èÂπïÊçïËé∑ÂºïÊìé
216 | private class ScreenCaptureEngine {
    |               `- error: invalid redeclaration of 'ScreenCaptureEngine'
217 |     private let metalDevice: MTLDevice
218 |     private var captureSession: AVCaptureSession?

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:284:15: error: invalid redeclaration of 'HardwareVideoEncoder'
282 | 
283 | // MARK: - Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô®
284 | private class HardwareVideoEncoder {
    |               `- error: invalid redeclaration of 'HardwareVideoEncoder'
285 |     private var compressionSession: VTCompressionSession?
286 |     private var config: EncodingConfiguration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:583:23: error: 'VideoCodec' is ambiguous for type lookup in this context
581 | /// ÁºñÁ†ÅÈÖçÁΩÆ
582 | public struct EncodingConfiguration {
583 |     public let codec: VideoCodec
    |                       `- error: 'VideoCodec' is ambiguous for type lookup in this context
584 |     public let resolution: CGSize
585 |     public let bitrate: Int
    :
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:692:13: note: found this candidate
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: error: invalid redeclaration of 'VideoCodec'
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- error: invalid redeclaration of 'VideoCodec'
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:614:13: error: invalid redeclaration of 'RemoteDesktopError'
612 | 
613 | // MARK: - ÈîôËØØÂÆö‰πâ
614 | public enum RemoteDesktopError: LocalizedError {
    |             `- error: invalid redeclaration of 'RemoteDesktopError'
615 |     case metalInitializationFailed
616 |     case metalCommandQueueCreationFailed

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:44:38: error: type 'RemoteDesktopError' has no member 'metalInitializationFailed'
 42 |         // ÂàùÂßãÂåñMetalËÆæÂ§á
 43 |         guard let device = MTLCreateSystemDefaultDevice() else {
 44 |             throw RemoteDesktopError.metalInitializationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalInitializationFailed'
 45 |         }
 46 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:48:38: error: type 'RemoteDesktopError' has no member 'metalCommandQueueCreationFailed'
 46 |         
 47 |         guard let commandQueue = device.makeCommandQueue() else {
 48 |             throw RemoteDesktopError.metalCommandQueueCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalCommandQueueCreationFailed'
 49 |         }
 50 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:58:59: error: incorrect argument label in call (have 'device:', expected 'metalDevice:')
 56 |         self.encodingConfig = EncodingConfiguration.defaultConfig()
 57 |         
 58 |         self.screenCaptureEngine = try ScreenCaptureEngine(device: device)
    |                                                           `- error: incorrect argument label in call (have 'device:', expected 'metalDevice:')
 59 |         self.videoEncoder = try HardwareVideoEncoder(config: encodingConfig)
 60 |         self.frameProcessor = try MetalFrameProcessor(device: device, commandQueue: commandQueue)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:59:53: error: incorrect argument label in call (have 'config:', expected 'configuration:')
 57 |         
 58 |         self.screenCaptureEngine = try ScreenCaptureEngine(device: device)
 59 |         self.videoEncoder = try HardwareVideoEncoder(config: encodingConfig)
    |                                                     `- error: incorrect argument label in call (have 'config:', expected 'configuration:')
 60 |         self.frameProcessor = try MetalFrameProcessor(device: device, commandQueue: commandQueue)
 61 |         self.networkStreamer = RemoteDesktopStreamer()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:59:62: error: cannot convert value of type 'EncodingConfiguration' to expected argument type 'VideoEncodingConfiguration'
 57 |         
 58 |         self.screenCaptureEngine = try ScreenCaptureEngine(device: device)
 59 |         self.videoEncoder = try HardwareVideoEncoder(config: encodingConfig)
    |                                                              `- error: cannot convert value of type 'EncodingConfiguration' to expected argument type 'VideoEncodingConfiguration'
 60 |         self.frameProcessor = try MetalFrameProcessor(device: device, commandQueue: commandQueue)
 61 |         self.networkStreamer = RemoteDesktopStreamer()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:65:59: error: value of type 'any MTLDevice' has no member 'maxTextureSize'
 63 |         print("üöÄ Á°¨‰ª∂Á∫ßËøúÁ®ãÊ°åÈù¢ÂºïÊìéÂàùÂßãÂåñÂÆåÊàê")
 64 |         print("üì± MetalËÆæÂ§á: \(device.name)")
 65 |         print("üéØ ÊîØÊåÅÁöÑÊúÄÂ§ßÁ∫πÁêÜÂ∞∫ÂØ∏: \(device.maxTextureSize)")
    |                                      `- error: value of type 'any MTLDevice' has no member 'maxTextureSize'
 66 |     }
 67 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:69:9: error: call to main actor-isolated instance method 'stopCapture()' in a synchronous nonisolated context [#ActorIsolatedCall]
 67 |     
 68 |     deinit {
 69 |         stopCapture()
    |         `- error: call to main actor-isolated instance method 'stopCapture()' in a synchronous nonisolated context [#ActorIsolatedCall]
 70 |         stopStreaming()
 71 |     }
    :
 94 |     
 95 |     /// ÂÅúÊ≠¢Â±èÂπïÊçïËé∑
 96 |     public func stopCapture() {
    |                 `- note: calls to instance method 'stopCapture()' from outside of its actor context are implicitly asynchronous
 97 |         guard isCapturing else { return }
 98 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:70:9: error: call to main actor-isolated instance method 'stopStreaming()' in a synchronous nonisolated context [#ActorIsolatedCall]
 68 |     deinit {
 69 |         stopCapture()
 70 |         stopStreaming()
    |         `- error: call to main actor-isolated instance method 'stopStreaming()' in a synchronous nonisolated context [#ActorIsolatedCall]
 71 |     }
 72 |     
    :
115 |     
116 |     /// ÂÅúÊ≠¢ÊµÅÂ™í‰Ωì‰º†Ëæì
117 |     public func stopStreaming() {
    |                 `- note: calls to instance method 'stopStreaming()' from outside of its actor context are implicitly asynchronous
118 |         guard isStreaming else { return }
119 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:235:23: error: 'init(target:selector:)' is unavailable in macOS
233 |         
234 |         // ‰ΩøÁî®CADisplayLinkËøõË°åÈ´òÁ≤æÂ∫¶Â∏ßÊçïËé∑
235 |         displayLink = CADisplayLink(target: self, selector: #selector(captureFrame))
    |                       `- error: 'init(target:selector:)' is unavailable in macOS
236 |         displayLink?.preferredFramesPerSecond = 60 // ÊúÄÂ§ß60fps
237 |         displayLink?.add(to: .main, forMode: .common)

/Users/macbookpro/Desktop/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/QuartzCore.framework/Headers/CADisplayLink.h:32:1: note: 'init(target:selector:)' has been explicitly marked unavailable here
 30 |  * For macOS, see NSView/NSWindow/NSScreen.displayLink(withTarget:selector:). */
 31 | 
 32 | + (CADisplayLink *)displayLinkWithTarget:(id)target selector:(SEL)sel
    | `- note: 'init(target:selector:)' has been explicitly marked unavailable here
 33 |     API_UNAVAILABLE(macos);
 34 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:236:22: error: 'preferredFramesPerSecond' is unavailable in macOS
234 |         // ‰ΩøÁî®CADisplayLinkËøõË°åÈ´òÁ≤æÂ∫¶Â∏ßÊçïËé∑
235 |         displayLink = CADisplayLink(target: self, selector: #selector(captureFrame))
236 |         displayLink?.preferredFramesPerSecond = 60 // ÊúÄÂ§ß60fps
    |                      `- error: 'preferredFramesPerSecond' is unavailable in macOS
237 |         displayLink?.add(to: .main, forMode: .common)
238 |         

/Users/macbookpro/Desktop/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/QuartzCore.framework/Headers/CADisplayLink.h:87:32: note: 'preferredFramesPerSecond' has been explicitly marked unavailable here
 85 |  * best-effort attempt at issuing callbacks at the requested rate. */
 86 | 
 87 | @property(nonatomic) NSInteger preferredFramesPerSecond
    |                                `- note: 'preferredFramesPerSecond' has been explicitly marked unavailable here
 88 |   API_DEPRECATED_WITH_REPLACEMENT ("preferredFrameRateRange",
 89 |                                    ios(10.0, API_TO_BE_DEPRECATED),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:296:47: error: incorrect argument label in call (have '_:until:', expected '_:untilPresentationTimeStamp:')
294 |     deinit {
295 |         if let session = compressionSession {
296 |             VTCompressionSessionCompleteFrames(session, until: CMTime.invalid)
    |                                               `- error: incorrect argument label in call (have '_:until:', expected '_:untilPresentationTimeStamp:')
297 |             VTCompressionSessionInvalidate(session)
298 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:303:38: error: type 'RemoteDesktopError' has no member 'encoderNotInitialized'
301 |     func encode(pixelBuffer: CVPixelBuffer, timestamp: CFTimeInterval) async throws -> Data {
302 |         guard let session = compressionSession else {
303 |             throw RemoteDesktopError.encoderNotInitialized
    |                                      `- error: type 'RemoteDesktopError' has no member 'encoderNotInitialized'
304 |         }
305 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:314:57: error: incorrect argument label in call (have '_:imageBuffer:presentationTimeStamp:duration:frameProperties:sourceFrameRefcon:outputHandler:', expected '_:imageBuffer:presentationTimeStamp:duration:frameProperties:infoFlagsOut:outputHandler:')
312 |             }
313 |             
314 |             let status = VTCompressionSessionEncodeFrame(
    |                                                         `- error: incorrect argument label in call (have '_:imageBuffer:presentationTimeStamp:duration:frameProperties:sourceFrameRefcon:outputHandler:', expected '_:imageBuffer:presentationTimeStamp:duration:frameProperties:infoFlagsOut:outputHandler:')
315 |                 session,
316 |                 imageBuffer: pixelBuffer,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:358:38: error: type 'RemoteDesktopError' has no member 'compressionSessionCreationFailed'
356 |         
357 |         guard status == noErr, let session = session else {
358 |             throw RemoteDesktopError.compressionSessionCreationFailed(status)
    |                                      `- error: type 'RemoteDesktopError' has no member 'compressionSessionCreationFailed'
359 |         }
360 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:370:29: error: missing argument labels 'key:value:' in call
368 |     private func configureCompressionSession(_ session: VTCompressionSession) throws {
369 |         // ËÆæÁΩÆÊØîÁâπÁéá
370 |         VTSessionSetProperty(
    |                             `- error: missing argument labels 'key:value:' in call
371 |             session,
372 |             kVTCompressionPropertyKey_AverageBitRate,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:377:29: error: missing argument labels 'key:value:' in call
375 |         
376 |         // ËÆæÁΩÆÂÖ≥ÈîÆÂ∏ßÈó¥Èöî
377 |         VTSessionSetProperty(
    |                             `- error: missing argument labels 'key:value:' in call
378 |             session,
379 |             kVTCompressionPropertyKey_MaxKeyFrameInterval,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:384:29: error: missing argument labels 'key:value:' in call
382 |         
383 |         // ËÆæÁΩÆÂÆûÊó∂ÁºñÁ†Å
384 |         VTSessionSetProperty(
    |                             `- error: missing argument labels 'key:value:' in call
385 |             session,
386 |             kVTCompressionPropertyKey_RealTime,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:391:29: error: missing argument labels 'key:value:' in call
389 |         
390 |         // ËÆæÁΩÆË¥®Èáè
391 |         VTSessionSetProperty(
    |                             `- error: missing argument labels 'key:value:' in call
392 |             session,
393 |             kVTCompressionPropertyKey_Quality,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:400:38: error: type 'RemoteDesktopError' has no member 'compressionSessionPreparationFailed'
398 |         let status = VTCompressionSessionPrepareToEncodeFrames(session)
399 |         if status != noErr {
400 |             throw RemoteDesktopError.compressionSessionPreparationFailed(status)
    |                                      `- error: type 'RemoteDesktopError' has no member 'compressionSessionPreparationFailed'
401 |         }
402 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:416:14: warning: result of call to 'withUnsafeMutableBytes' is unused [#no-usage]
414 |         var data = Data(count: length)
415 |         
416 |         data.withUnsafeMutableBytes { bytes in
    |              `- warning: result of call to 'withUnsafeMutableBytes' is unused [#no-usage]
417 |             CMBlockBufferCopyDataBytes(dataBuffer, atOffset: 0, dataLength: length, destination: bytes.baseAddress!)
418 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:440:38: error: type 'RemoteDesktopError' has no member 'textureCacheCreationFailed'
438 |         let status = CVMetalTextureCacheCreate(kCFAllocatorDefault, nil, device, nil, &textureCache)
439 |         guard status == kCVReturnSuccess, let cache = textureCache else {
440 |             throw RemoteDesktopError.textureCacheCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'textureCacheCreationFailed'
441 |         }
442 |         self.textureCache = cache

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:448:38: error: type 'RemoteDesktopError' has no member 'metalPipelineCreationFailed'
446 |               let function = library.makeFunction(name: "scaleFrame"),
447 |               let pipeline = try? device.makeComputePipelineState(function: function) else {
448 |             throw RemoteDesktopError.metalPipelineCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalPipelineCreationFailed'
449 |         }
450 |         self.scalingPipeline = pipeline

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:466:38: error: type 'RemoteDesktopError' has no member 'metalCommandCreationFailed'
464 |         guard let commandBuffer = commandQueue.makeCommandBuffer(),
465 |               let encoder = commandBuffer.makeComputeCommandEncoder() else {
466 |             throw RemoteDesktopError.metalCommandCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalCommandCreationFailed'
467 |         }
468 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:484:23: error: instance method 'waitUntilCompleted' is unavailable from asynchronous contexts; Use 'await completed()' instead.
482 |         
483 |         commandBuffer.commit()
484 |         commandBuffer.waitUntilCompleted()
    |                       `- error: instance method 'waitUntilCompleted' is unavailable from asynchronous contexts; Use 'await completed()' instead.
485 |         
486 |         return outputBuffer

Metal.MTLCommandBuffer.waitUntilCompleted:2:6: note: 'waitUntilCompleted()' declared here
1 | protocol MTLCommandBuffer {
2 | func waitUntilCompleted()}
  |      `- note: 'waitUntilCompleted()' declared here
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:509:38: error: type 'RemoteDesktopError' has no member 'metalTextureCreationFailed'
507 |               let texture = texture,
508 |               let metalTexture = CVMetalTextureGetTexture(texture) else {
509 |             throw RemoteDesktopError.metalTextureCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalTextureCreationFailed'
510 |         }
511 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:530:38: error: type 'RemoteDesktopError' has no member 'pixelBufferCreationFailed'
528 |         
529 |         guard status == kCVReturnSuccess, let buffer = outputBuffer else {
530 |             throw RemoteDesktopError.pixelBufferCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'pixelBufferCreationFailed'
531 |         }
532 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:591:21: error: cannot infer contextual base in reference to member 'h265'
589 |     public static func defaultConfig() -> EncodingConfiguration {
590 |         return EncodingConfiguration(
591 |             codec: .h265,
    |                     `- error: cannot infer contextual base in reference to member 'h265'
592 |             resolution: CGSize(width: 1920, height: 1080),
593 |             bitrate: 5_000_000, // 5 Mbps

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:587:23: error: 'VideoCodec' is ambiguous for type lookup in this context
585 |     public let isKeyFrame: Bool
586 |     /// ÁºñËß£Á†ÅÂô®
587 |     public let codec: VideoCodec
    |                       `- error: 'VideoCodec' is ambiguous for type lookup in this context
588 |     /// ÂàÜËæ®Áéá
589 |     public let resolution: CGSize
    :
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: note: found this candidate
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:607:23: error: 'VideoCodec' is ambiguous for type lookup in this context
605 | public struct VideoEncodingConfiguration {
606 |     /// ÁºñËß£Á†ÅÂô®
607 |     public let codec: VideoCodec
    |                       `- error: 'VideoCodec' is ambiguous for type lookup in this context
608 |     /// ÂàÜËæ®Áéá
609 |     public let resolution: CGSize
    :
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: note: found this candidate
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:625:24: error: 'VideoCodec' is ambiguous for type lookup in this context
623 |     public let enableHardwareAcceleration: Bool
624 |     
625 |     public init(codec: VideoCodec,
    |                        `- error: 'VideoCodec' is ambiguous for type lookup in this context
626 |                 resolution: CGSize,
627 |                 bitrate: Int,
    :
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: note: found this candidate
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:151:30: warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: class 'HardwareVideoEncoder' does not conform to the 'Sendable' protocol
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
149 |         // ÂºÇÊ≠•ÁºñÁ†Å
150 |         encodingQueue.async { [weak self] in
151 |             guard let self = self else { return }
    |                              `- warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
152 |             
153 |             let status = VTCompressionSessionEncodeFrame(

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:154:17: warning: capture of 'session' with non-Sendable type 'VTCompressionSession' in a '@Sendable' closure [#SendableClosureCaptures]
152 |             
153 |             let status = VTCompressionSessionEncodeFrame(
154 |                 session,
    |                 `- warning: capture of 'session' with non-Sendable type 'VTCompressionSession' in a '@Sendable' closure [#SendableClosureCaptures]
155 |                 imageBuffer: pixelBuffer,
156 |                 presentationTimeStamp: presentationTime,

VideoToolbox.VTCompressionSession:1:14: note: class 'VTCompressionSession' does not conform to the 'Sendable' protocol
1 | public class VTCompressionSession : _CFObject {
  |              `- note: class 'VTCompressionSession' does not conform to the 'Sendable' protocol
2 | }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:155:30: warning: capture of 'pixelBuffer' with non-Sendable type 'CVPixelBuffer' (aka 'CVBuffer') in a '@Sendable' closure [#SendableClosureCaptures]
153 |             let status = VTCompressionSessionEncodeFrame(
154 |                 session,
155 |                 imageBuffer: pixelBuffer,
    |                              `- warning: capture of 'pixelBuffer' with non-Sendable type 'CVPixelBuffer' (aka 'CVBuffer') in a '@Sendable' closure [#SendableClosureCaptures]
156 |                 presentationTimeStamp: presentationTime,
157 |                 duration: duration,

CoreVideo.CVBuffer:1:14: note: class 'CVBuffer' does not conform to the 'Sendable' protocol
1 | public class CVBuffer : _CFObject {
  |              `- note: class 'CVBuffer' does not conform to the 'Sendable' protocol
2 | }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:158:34: warning: capture of 'frameProperties' with non-Sendable type '[String : Any]' in a '@Sendable' closure [#SendableClosureCaptures]
156 |                 presentationTimeStamp: presentationTime,
157 |                 duration: duration,
158 |                 frameProperties: frameProperties.isEmpty ? nil : frameProperties as CFDictionary,
    |                                  `- warning: capture of 'frameProperties' with non-Sendable type '[String : Any]' in a '@Sendable' closure [#SendableClosureCaptures]
159 |                 infoFlagsOut: nil
160 |             ) { [weak self] status, infoFlags, sampleBuffer in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:158:34: warning: reference to captured var 'frameProperties' in concurrently-executing code [#SendableClosureCaptures]
156 |                 presentationTimeStamp: presentationTime,
157 |                 duration: duration,
158 |                 frameProperties: frameProperties.isEmpty ? nil : frameProperties as CFDictionary,
    |                                  `- warning: reference to captured var 'frameProperties' in concurrently-executing code [#SendableClosureCaptures]
159 |                 infoFlagsOut: nil
160 |             ) { [weak self] status, infoFlags, sampleBuffer in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:158:66: warning: reference to captured var 'frameProperties' in concurrently-executing code [#SendableClosureCaptures]
156 |                 presentationTimeStamp: presentationTime,
157 |                 duration: duration,
158 |                 frameProperties: frameProperties.isEmpty ? nil : frameProperties as CFDictionary,
    |                                                                  `- warning: reference to captured var 'frameProperties' in concurrently-executing code [#SendableClosureCaptures]
159 |                 infoFlagsOut: nil
160 |             ) { [weak self] status, infoFlags, sampleBuffer in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:161:17: warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: class 'HardwareVideoEncoder' does not conform to the 'Sendable' protocol
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
159 |                 infoFlagsOut: nil
160 |             ) { [weak self] status, infoFlags, sampleBuffer in
161 |                 self?.handleEncodedFrame(
    |                 `- warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
162 |                     status: status,
163 |                     infoFlags: infoFlags,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:186:18: error: cannot find 'kVTCompressionPropertyKey_ForceKeyFrame' in scope
184 |         VTSessionSetProperty(
185 |             session,
186 |             key: kVTCompressionPropertyKey_ForceKeyFrame,
    |                  `- error: cannot find 'kVTCompressionPropertyKey_ForceKeyFrame' in scope
187 |             value: kCFBooleanTrue
188 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:328:38: error: missing argument labels 'key:value:' in call
326 |         
327 |         // ËÆæÁΩÆÊØîÁâπÁéá
328 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
329 |             session,
330 |             kVTCompressionPropertyKey_AverageBitRate,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:339:38: error: missing argument labels 'key:value:' in call
337 |         // ËÆæÁΩÆÊúÄÂ§ßÊØîÁâπÁéáÔºàÈò≤Ê≠¢Á™ÅÂèëÔºâ
338 |         let maxBitrate = currentConfiguration.bitrate * 2
339 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
340 |             session,
341 |             kVTCompressionPropertyKey_DataRateLimits,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:349:38: error: missing argument labels 'key:value:' in call
347 |         
348 |         // ËÆæÁΩÆÂÖ≥ÈîÆÂ∏ßÈó¥Èöî
349 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
350 |             session,
351 |             kVTCompressionPropertyKey_MaxKeyFrameInterval,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:359:38: error: missing argument labels 'key:value:' in call
357 |         
358 |         // ËÆæÁΩÆÊúüÊúõÂ∏ßÁéá
359 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
360 |             session,
361 |             kVTCompressionPropertyKey_ExpectedFrameRate,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:369:38: error: missing argument labels 'key:value:' in call
367 |         
368 |         // ËÆæÁΩÆË¥®Èáè
369 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
370 |             session,
371 |             kVTCompressionPropertyKey_Quality,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:379:38: error: missing argument labels 'key:value:' in call
377 |         
378 |         // ËÆæÁΩÆÂÆûÊó∂ÁºñÁ†Å
379 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
380 |             session,
381 |             kVTCompressionPropertyKey_RealTime,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:390:42: error: missing argument labels 'key:value:' in call
388 |         // ËÆæÁΩÆÁºñÁ†ÅÂô®ÈÖçÁΩÆÊñá‰ª∂
389 |         if let profileLevel = currentConfiguration.profile.vtProfileLevel {
390 |             status = VTSessionSetProperty(
    |                                          `- error: missing argument labels 'key:value:' in call
391 |                 session,
392 |                 kVTCompressionPropertyKey_ProfileLevel,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:402:42: error: missing argument labels 'key:value:' in call
400 |         // ËÆæÁΩÆBÂ∏ß
401 |         if currentConfiguration.enableBFrames {
402 |             status = VTSessionSetProperty(
    |                                          `- error: missing argument labels 'key:value:' in call
403 |                 session,
404 |                 kVTCompressionPropertyKey_AllowFrameReordering,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:411:42: error: missing argument labels 'key:value:' in call
409 |             }
410 |         } else {
411 |             status = VTSessionSetProperty(
    |                                          `- error: missing argument labels 'key:value:' in call
412 |                 session,
413 |                 kVTCompressionPropertyKey_AllowFrameReordering,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:419:43: error: cannot infer contextual base in reference to member 'h264'
417 |         
418 |         // ËÆæÁΩÆÁÜµÁºñÁ†ÅÊ®°ÂºèÔºàH.264Ôºâ
419 |         if currentConfiguration.codec == .h264 {
    |                                           `- error: cannot infer contextual base in reference to member 'h264'
420 |             status = VTSessionSetProperty(
421 |                 session,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:420:42: error: missing argument labels 'key:value:' in call
418 |         // ËÆæÁΩÆÁÜµÁºñÁ†ÅÊ®°ÂºèÔºàH.264Ôºâ
419 |         if currentConfiguration.codec == .h264 {
420 |             status = VTSessionSetProperty(
    |                                          `- error: missing argument labels 'key:value:' in call
421 |                 session,
422 |                 kVTCompressionPropertyKey_H264EntropyMode,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:465:18: error: value of type 'CFArray' has no member 'unsafelyUnwrapped'
463 |         let isKeyFrame = !CFDictionaryContainsKey(
464 |             CMSampleBufferGetSampleAttachmentsArray(sampleBuffer, createIfNecessary: false)?
465 |                 .unsafelyUnwrapped
    |                  `- error: value of type 'CFArray' has no member 'unsafelyUnwrapped'
466 |                 .pointee(at: 0) as CFDictionary,
467 |             Unmanaged.passUnretained(kCMSampleAttachmentKey_NotSync).toOpaque()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:466:18: error: cannot convert value of type 'Optional<_>' to type 'CFDictionary' in coercion
464 |             CMSampleBufferGetSampleAttachmentsArray(sampleBuffer, createIfNecessary: false)?
465 |                 .unsafelyUnwrapped
466 |                 .pointee(at: 0) as CFDictionary,
    |                  `- error: cannot convert value of type 'Optional<_>' to type 'CFDictionary' in coercion
467 |             Unmanaged.passUnretained(kCMSampleAttachmentKey_NotSync).toOpaque()
468 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:452:17: warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder' in a '@Sendable' closure [#SendableClosureCaptures]
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: class 'HardwareVideoEncoder' does not conform to the 'Sendable' protocol
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
450 |             print("‚ùå Â∏ßÁºñÁ†ÅÂ§±Ë¥•: \(status)")
451 |             callbackQueue.async {
452 |                 self.errorCallback?(VideoEncodingError.encodingFailed(status))
    |                 `- warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder' in a '@Sendable' closure [#SendableClosureCaptures]
453 |             }
454 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:534:17: warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: class 'HardwareVideoEncoder' does not conform to the 'Sendable' protocol
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
532 |         performanceTimer = Timer.scheduledTimer(withTimeInterval: 1.0, repeats: true) { [weak self] _ in
533 |             Task { @MainActor in
534 |                 self?.updatePerformanceMetrics()
    |                 `- warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
535 |             }
536 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:648:21: error: cannot infer contextual base in reference to member 'h264'
646 |     public static func defaultConfiguration() -> VideoEncodingConfiguration {
647 |         return VideoEncodingConfiguration(
648 |             codec: .h264,
    |                     `- error: cannot infer contextual base in reference to member 'h264'
649 |             resolution: CGSize(width: 1920, height: 1080),
650 |             bitrate: 5_000_000, // 5 Mbps

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:654:23: error: cannot infer contextual base in reference to member 'h264Baseline'
652 |             keyFrameInterval: 30,
653 |             quality: 0.8,
654 |             profile: .h264Baseline,
    |                       `- error: cannot infer contextual base in reference to member 'h264Baseline'
655 |             enableBFrames: false,
656 |             enableHardwareAcceleration: true

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:663:21: error: cannot infer contextual base in reference to member 'h265'
661 |     public static func highQualityConfiguration() -> VideoEncodingConfiguration {
662 |         return VideoEncodingConfiguration(
663 |             codec: .h265,
    |                     `- error: cannot infer contextual base in reference to member 'h265'
664 |             resolution: CGSize(width: 2560, height: 1440),
665 |             bitrate: 10_000_000, // 10 Mbps

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:669:23: error: cannot infer contextual base in reference to member 'h265Main'
667 |             keyFrameInterval: 60,
668 |             quality: 0.9,
669 |             profile: .h265Main,
    |                       `- error: cannot infer contextual base in reference to member 'h265Main'
670 |             enableBFrames: true,
671 |             enableHardwareAcceleration: true

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:678:21: error: cannot infer contextual base in reference to member 'h264'
676 |     public static func lowLatencyConfiguration() -> VideoEncodingConfiguration {
677 |         return VideoEncodingConfiguration(
678 |             codec: .h264,
    |                     `- error: cannot infer contextual base in reference to member 'h264'
679 |             resolution: CGSize(width: 1280, height: 720),
680 |             bitrate: 2_000_000, // 2 Mbps

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:684:23: error: cannot infer contextual base in reference to member 'h264Baseline'
682 |             keyFrameInterval: 15,
683 |             quality: 0.7,
684 |             profile: .h264Baseline,
    |                       `- error: cannot infer contextual base in reference to member 'h264Baseline'
685 |             enableBFrames: false,
686 |             enableHardwareAcceleration: true

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/ScreenCaptureEngine.swift:484:32: error: conformance of 'ScreenCaptureEngine' to protocol 'SCStreamDelegate' crosses into main actor-isolated code and can cause data races [#ConformanceIsolation]
482 | // MARK: - SCStreamDelegate
483 | 
484 | extension ScreenCaptureEngine: SCStreamDelegate {
    | |                              |- error: conformance of 'ScreenCaptureEngine' to protocol 'SCStreamDelegate' crosses into main actor-isolated code and can cause data races [#ConformanceIsolation]
    | |                              |- note: isolate this conformance to the main actor with '@MainActor'
    | |                              `- note: turn data races into runtime errors with '@preconcurrency'
    | `- note: mark all declarations used in the conformance 'nonisolated'
485 |     
486 |     public func stream(_ stream: SCStream, didStopWithError error: Error) {
    |                 `- note: main actor-isolated instance method 'stream(_:didStopWithError:)' cannot satisfy nonisolated requirement
487 |         print("‚ùå Â±èÂπïÊçïËé∑ÊµÅÂÅúÊ≠¢ÔºåÈîôËØØ: \(error)")
488 |         
    :
494 |     }
495 |     
496 |     public func streamDidBecomeActive(_ stream: SCStream) {
    |                 `- note: main actor-isolated instance method 'streamDidBecomeActive' cannot satisfy nonisolated requirement
497 |         print("‚úÖ Â±èÂπïÊçïËé∑ÊµÅÂ∑≤ÊøÄÊ¥ª")
498 |     }
499 |     
500 |     public func streamDidBecomeInactive(_ stream: SCStream) {
    |                 `- note: main actor-isolated instance method 'streamDidBecomeInactive' cannot satisfy nonisolated requirement
501 |         print("‚ö†Ô∏è Â±èÂπïÊçïËé∑ÊµÅÂ∑≤ÂÅúÁî®")
502 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/ScreenCaptureEngine.swift:82:9: error: call to main actor-isolated instance method 'stopCapture()' in a synchronous nonisolated context [#ActorIsolatedCall]
 80 |     
 81 |     deinit {
 82 |         stopCapture()
    |         `- error: call to main actor-isolated instance method 'stopCapture()' in a synchronous nonisolated context [#ActorIsolatedCall]
 83 |     }
 84 |     
    :
231 |     
232 |     /// ÂÅúÊ≠¢Â±èÂπïÊçïËé∑
233 |     public func stopCapture() {
    |                 `- note: calls to instance method 'stopCapture()' from outside of its actor context are implicitly asynchronous
234 |         guard isCapturing else { return }
235 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/ScreenCaptureEngine.swift:215:17: warning: no 'async' operations occur within 'await' expression
213 |             }
214 |             
215 |             try await stream.addStreamOutput(streamOutput, type: .screen, sampleHandlerQueue: .main)
    |                 `- warning: no 'async' operations occur within 'await' expression
216 |             try await stream.startCapture()
217 |             

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#ConformanceIsolation]: <https://docs.swift.org/compiler/documentation/diagnostics/conformance-isolation>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[145/160] Compiling SkyBridgeCore HardwareVideoEncoder.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:25:38: error: 'ScreenCaptureEngine' is ambiguous for type lookup in this context
 23 |     private let metalDevice: MTLDevice
 24 |     private let metalCommandQueue: MTLCommandQueue
 25 |     private let screenCaptureEngine: ScreenCaptureEngine
    |                                      `- error: 'ScreenCaptureEngine' is ambiguous for type lookup in this context
 26 |     private let videoEncoder: HardwareVideoEncoder
 27 |     private let frameProcessor: MetalFrameProcessor
    :
214 | 
215 | // MARK: - Â±èÂπïÊçïËé∑ÂºïÊìé
216 | private class ScreenCaptureEngine {
    |               `- note: found this candidate
217 |     private let metalDevice: MTLDevice
218 |     private var captureSession: AVCaptureSession?

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/ScreenCaptureEngine.swift:12:14: note: found this candidate
 10 | /// È´òÊÄßËÉΩÂ±èÂπïÊçïËé∑ÂºïÊìé - ‰ΩøÁî®ScreenCaptureKitÂÆûÁé∞Á°¨‰ª∂Âä†ÈÄüÁöÑÂ±èÂπïÊçïËé∑
 11 | @MainActor
 12 | public class ScreenCaptureEngine: NSObject, ObservableObject {
    |              `- note: found this candidate
 13 |     
 14 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:26:31: error: 'HardwareVideoEncoder' is ambiguous for type lookup in this context
 24 |     private let metalCommandQueue: MTLCommandQueue
 25 |     private let screenCaptureEngine: ScreenCaptureEngine
 26 |     private let videoEncoder: HardwareVideoEncoder
    |                               `- error: 'HardwareVideoEncoder' is ambiguous for type lookup in this context
 27 |     private let frameProcessor: MetalFrameProcessor
 28 |     private let networkStreamer: RemoteDesktopStreamer
    :
282 | 
283 | // MARK: - Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô®
284 | private class HardwareVideoEncoder {
    |               `- note: found this candidate
285 |     private var compressionSession: VTCompressionSession?
286 |     private var config: EncodingConfiguration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:10:14: note: found this candidate
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: found this candidate
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:216:15: error: invalid redeclaration of 'ScreenCaptureEngine'
214 | 
215 | // MARK: - Â±èÂπïÊçïËé∑ÂºïÊìé
216 | private class ScreenCaptureEngine {
    |               `- error: invalid redeclaration of 'ScreenCaptureEngine'
217 |     private let metalDevice: MTLDevice
218 |     private var captureSession: AVCaptureSession?

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:284:15: error: invalid redeclaration of 'HardwareVideoEncoder'
282 | 
283 | // MARK: - Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô®
284 | private class HardwareVideoEncoder {
    |               `- error: invalid redeclaration of 'HardwareVideoEncoder'
285 |     private var compressionSession: VTCompressionSession?
286 |     private var config: EncodingConfiguration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:583:23: error: 'VideoCodec' is ambiguous for type lookup in this context
581 | /// ÁºñÁ†ÅÈÖçÁΩÆ
582 | public struct EncodingConfiguration {
583 |     public let codec: VideoCodec
    |                       `- error: 'VideoCodec' is ambiguous for type lookup in this context
584 |     public let resolution: CGSize
585 |     public let bitrate: Int
    :
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:692:13: note: found this candidate
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: error: invalid redeclaration of 'VideoCodec'
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- error: invalid redeclaration of 'VideoCodec'
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:614:13: error: invalid redeclaration of 'RemoteDesktopError'
612 | 
613 | // MARK: - ÈîôËØØÂÆö‰πâ
614 | public enum RemoteDesktopError: LocalizedError {
    |             `- error: invalid redeclaration of 'RemoteDesktopError'
615 |     case metalInitializationFailed
616 |     case metalCommandQueueCreationFailed

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:44:38: error: type 'RemoteDesktopError' has no member 'metalInitializationFailed'
 42 |         // ÂàùÂßãÂåñMetalËÆæÂ§á
 43 |         guard let device = MTLCreateSystemDefaultDevice() else {
 44 |             throw RemoteDesktopError.metalInitializationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalInitializationFailed'
 45 |         }
 46 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:48:38: error: type 'RemoteDesktopError' has no member 'metalCommandQueueCreationFailed'
 46 |         
 47 |         guard let commandQueue = device.makeCommandQueue() else {
 48 |             throw RemoteDesktopError.metalCommandQueueCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalCommandQueueCreationFailed'
 49 |         }
 50 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:58:59: error: incorrect argument label in call (have 'device:', expected 'metalDevice:')
 56 |         self.encodingConfig = EncodingConfiguration.defaultConfig()
 57 |         
 58 |         self.screenCaptureEngine = try ScreenCaptureEngine(device: device)
    |                                                           `- error: incorrect argument label in call (have 'device:', expected 'metalDevice:')
 59 |         self.videoEncoder = try HardwareVideoEncoder(config: encodingConfig)
 60 |         self.frameProcessor = try MetalFrameProcessor(device: device, commandQueue: commandQueue)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:59:53: error: incorrect argument label in call (have 'config:', expected 'configuration:')
 57 |         
 58 |         self.screenCaptureEngine = try ScreenCaptureEngine(device: device)
 59 |         self.videoEncoder = try HardwareVideoEncoder(config: encodingConfig)
    |                                                     `- error: incorrect argument label in call (have 'config:', expected 'configuration:')
 60 |         self.frameProcessor = try MetalFrameProcessor(device: device, commandQueue: commandQueue)
 61 |         self.networkStreamer = RemoteDesktopStreamer()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:59:62: error: cannot convert value of type 'EncodingConfiguration' to expected argument type 'VideoEncodingConfiguration'
 57 |         
 58 |         self.screenCaptureEngine = try ScreenCaptureEngine(device: device)
 59 |         self.videoEncoder = try HardwareVideoEncoder(config: encodingConfig)
    |                                                              `- error: cannot convert value of type 'EncodingConfiguration' to expected argument type 'VideoEncodingConfiguration'
 60 |         self.frameProcessor = try MetalFrameProcessor(device: device, commandQueue: commandQueue)
 61 |         self.networkStreamer = RemoteDesktopStreamer()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:65:59: error: value of type 'any MTLDevice' has no member 'maxTextureSize'
 63 |         print("üöÄ Á°¨‰ª∂Á∫ßËøúÁ®ãÊ°åÈù¢ÂºïÊìéÂàùÂßãÂåñÂÆåÊàê")
 64 |         print("üì± MetalËÆæÂ§á: \(device.name)")
 65 |         print("üéØ ÊîØÊåÅÁöÑÊúÄÂ§ßÁ∫πÁêÜÂ∞∫ÂØ∏: \(device.maxTextureSize)")
    |                                      `- error: value of type 'any MTLDevice' has no member 'maxTextureSize'
 66 |     }
 67 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:69:9: error: call to main actor-isolated instance method 'stopCapture()' in a synchronous nonisolated context [#ActorIsolatedCall]
 67 |     
 68 |     deinit {
 69 |         stopCapture()
    |         `- error: call to main actor-isolated instance method 'stopCapture()' in a synchronous nonisolated context [#ActorIsolatedCall]
 70 |         stopStreaming()
 71 |     }
    :
 94 |     
 95 |     /// ÂÅúÊ≠¢Â±èÂπïÊçïËé∑
 96 |     public func stopCapture() {
    |                 `- note: calls to instance method 'stopCapture()' from outside of its actor context are implicitly asynchronous
 97 |         guard isCapturing else { return }
 98 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:70:9: error: call to main actor-isolated instance method 'stopStreaming()' in a synchronous nonisolated context [#ActorIsolatedCall]
 68 |     deinit {
 69 |         stopCapture()
 70 |         stopStreaming()
    |         `- error: call to main actor-isolated instance method 'stopStreaming()' in a synchronous nonisolated context [#ActorIsolatedCall]
 71 |     }
 72 |     
    :
115 |     
116 |     /// ÂÅúÊ≠¢ÊµÅÂ™í‰Ωì‰º†Ëæì
117 |     public func stopStreaming() {
    |                 `- note: calls to instance method 'stopStreaming()' from outside of its actor context are implicitly asynchronous
118 |         guard isStreaming else { return }
119 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:235:23: error: 'init(target:selector:)' is unavailable in macOS
233 |         
234 |         // ‰ΩøÁî®CADisplayLinkËøõË°åÈ´òÁ≤æÂ∫¶Â∏ßÊçïËé∑
235 |         displayLink = CADisplayLink(target: self, selector: #selector(captureFrame))
    |                       `- error: 'init(target:selector:)' is unavailable in macOS
236 |         displayLink?.preferredFramesPerSecond = 60 // ÊúÄÂ§ß60fps
237 |         displayLink?.add(to: .main, forMode: .common)

/Users/macbookpro/Desktop/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/QuartzCore.framework/Headers/CADisplayLink.h:32:1: note: 'init(target:selector:)' has been explicitly marked unavailable here
 30 |  * For macOS, see NSView/NSWindow/NSScreen.displayLink(withTarget:selector:). */
 31 | 
 32 | + (CADisplayLink *)displayLinkWithTarget:(id)target selector:(SEL)sel
    | `- note: 'init(target:selector:)' has been explicitly marked unavailable here
 33 |     API_UNAVAILABLE(macos);
 34 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:236:22: error: 'preferredFramesPerSecond' is unavailable in macOS
234 |         // ‰ΩøÁî®CADisplayLinkËøõË°åÈ´òÁ≤æÂ∫¶Â∏ßÊçïËé∑
235 |         displayLink = CADisplayLink(target: self, selector: #selector(captureFrame))
236 |         displayLink?.preferredFramesPerSecond = 60 // ÊúÄÂ§ß60fps
    |                      `- error: 'preferredFramesPerSecond' is unavailable in macOS
237 |         displayLink?.add(to: .main, forMode: .common)
238 |         

/Users/macbookpro/Desktop/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/QuartzCore.framework/Headers/CADisplayLink.h:87:32: note: 'preferredFramesPerSecond' has been explicitly marked unavailable here
 85 |  * best-effort attempt at issuing callbacks at the requested rate. */
 86 | 
 87 | @property(nonatomic) NSInteger preferredFramesPerSecond
    |                                `- note: 'preferredFramesPerSecond' has been explicitly marked unavailable here
 88 |   API_DEPRECATED_WITH_REPLACEMENT ("preferredFrameRateRange",
 89 |                                    ios(10.0, API_TO_BE_DEPRECATED),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:296:47: error: incorrect argument label in call (have '_:until:', expected '_:untilPresentationTimeStamp:')
294 |     deinit {
295 |         if let session = compressionSession {
296 |             VTCompressionSessionCompleteFrames(session, until: CMTime.invalid)
    |                                               `- error: incorrect argument label in call (have '_:until:', expected '_:untilPresentationTimeStamp:')
297 |             VTCompressionSessionInvalidate(session)
298 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:303:38: error: type 'RemoteDesktopError' has no member 'encoderNotInitialized'
301 |     func encode(pixelBuffer: CVPixelBuffer, timestamp: CFTimeInterval) async throws -> Data {
302 |         guard let session = compressionSession else {
303 |             throw RemoteDesktopError.encoderNotInitialized
    |                                      `- error: type 'RemoteDesktopError' has no member 'encoderNotInitialized'
304 |         }
305 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:314:57: error: incorrect argument label in call (have '_:imageBuffer:presentationTimeStamp:duration:frameProperties:sourceFrameRefcon:outputHandler:', expected '_:imageBuffer:presentationTimeStamp:duration:frameProperties:infoFlagsOut:outputHandler:')
312 |             }
313 |             
314 |             let status = VTCompressionSessionEncodeFrame(
    |                                                         `- error: incorrect argument label in call (have '_:imageBuffer:presentationTimeStamp:duration:frameProperties:sourceFrameRefcon:outputHandler:', expected '_:imageBuffer:presentationTimeStamp:duration:frameProperties:infoFlagsOut:outputHandler:')
315 |                 session,
316 |                 imageBuffer: pixelBuffer,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:358:38: error: type 'RemoteDesktopError' has no member 'compressionSessionCreationFailed'
356 |         
357 |         guard status == noErr, let session = session else {
358 |             throw RemoteDesktopError.compressionSessionCreationFailed(status)
    |                                      `- error: type 'RemoteDesktopError' has no member 'compressionSessionCreationFailed'
359 |         }
360 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:370:29: error: missing argument labels 'key:value:' in call
368 |     private func configureCompressionSession(_ session: VTCompressionSession) throws {
369 |         // ËÆæÁΩÆÊØîÁâπÁéá
370 |         VTSessionSetProperty(
    |                             `- error: missing argument labels 'key:value:' in call
371 |             session,
372 |             kVTCompressionPropertyKey_AverageBitRate,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:377:29: error: missing argument labels 'key:value:' in call
375 |         
376 |         // ËÆæÁΩÆÂÖ≥ÈîÆÂ∏ßÈó¥Èöî
377 |         VTSessionSetProperty(
    |                             `- error: missing argument labels 'key:value:' in call
378 |             session,
379 |             kVTCompressionPropertyKey_MaxKeyFrameInterval,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:384:29: error: missing argument labels 'key:value:' in call
382 |         
383 |         // ËÆæÁΩÆÂÆûÊó∂ÁºñÁ†Å
384 |         VTSessionSetProperty(
    |                             `- error: missing argument labels 'key:value:' in call
385 |             session,
386 |             kVTCompressionPropertyKey_RealTime,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:391:29: error: missing argument labels 'key:value:' in call
389 |         
390 |         // ËÆæÁΩÆË¥®Èáè
391 |         VTSessionSetProperty(
    |                             `- error: missing argument labels 'key:value:' in call
392 |             session,
393 |             kVTCompressionPropertyKey_Quality,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:400:38: error: type 'RemoteDesktopError' has no member 'compressionSessionPreparationFailed'
398 |         let status = VTCompressionSessionPrepareToEncodeFrames(session)
399 |         if status != noErr {
400 |             throw RemoteDesktopError.compressionSessionPreparationFailed(status)
    |                                      `- error: type 'RemoteDesktopError' has no member 'compressionSessionPreparationFailed'
401 |         }
402 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:416:14: warning: result of call to 'withUnsafeMutableBytes' is unused [#no-usage]
414 |         var data = Data(count: length)
415 |         
416 |         data.withUnsafeMutableBytes { bytes in
    |              `- warning: result of call to 'withUnsafeMutableBytes' is unused [#no-usage]
417 |             CMBlockBufferCopyDataBytes(dataBuffer, atOffset: 0, dataLength: length, destination: bytes.baseAddress!)
418 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:440:38: error: type 'RemoteDesktopError' has no member 'textureCacheCreationFailed'
438 |         let status = CVMetalTextureCacheCreate(kCFAllocatorDefault, nil, device, nil, &textureCache)
439 |         guard status == kCVReturnSuccess, let cache = textureCache else {
440 |             throw RemoteDesktopError.textureCacheCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'textureCacheCreationFailed'
441 |         }
442 |         self.textureCache = cache

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:448:38: error: type 'RemoteDesktopError' has no member 'metalPipelineCreationFailed'
446 |               let function = library.makeFunction(name: "scaleFrame"),
447 |               let pipeline = try? device.makeComputePipelineState(function: function) else {
448 |             throw RemoteDesktopError.metalPipelineCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalPipelineCreationFailed'
449 |         }
450 |         self.scalingPipeline = pipeline

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:466:38: error: type 'RemoteDesktopError' has no member 'metalCommandCreationFailed'
464 |         guard let commandBuffer = commandQueue.makeCommandBuffer(),
465 |               let encoder = commandBuffer.makeComputeCommandEncoder() else {
466 |             throw RemoteDesktopError.metalCommandCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalCommandCreationFailed'
467 |         }
468 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:484:23: error: instance method 'waitUntilCompleted' is unavailable from asynchronous contexts; Use 'await completed()' instead.
482 |         
483 |         commandBuffer.commit()
484 |         commandBuffer.waitUntilCompleted()
    |                       `- error: instance method 'waitUntilCompleted' is unavailable from asynchronous contexts; Use 'await completed()' instead.
485 |         
486 |         return outputBuffer

Metal.MTLCommandBuffer.waitUntilCompleted:2:6: note: 'waitUntilCompleted()' declared here
1 | protocol MTLCommandBuffer {
2 | func waitUntilCompleted()}
  |      `- note: 'waitUntilCompleted()' declared here
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:509:38: error: type 'RemoteDesktopError' has no member 'metalTextureCreationFailed'
507 |               let texture = texture,
508 |               let metalTexture = CVMetalTextureGetTexture(texture) else {
509 |             throw RemoteDesktopError.metalTextureCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalTextureCreationFailed'
510 |         }
511 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:530:38: error: type 'RemoteDesktopError' has no member 'pixelBufferCreationFailed'
528 |         
529 |         guard status == kCVReturnSuccess, let buffer = outputBuffer else {
530 |             throw RemoteDesktopError.pixelBufferCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'pixelBufferCreationFailed'
531 |         }
532 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:591:21: error: cannot infer contextual base in reference to member 'h265'
589 |     public static func defaultConfig() -> EncodingConfiguration {
590 |         return EncodingConfiguration(
591 |             codec: .h265,
    |                     `- error: cannot infer contextual base in reference to member 'h265'
592 |             resolution: CGSize(width: 1920, height: 1080),
593 |             bitrate: 5_000_000, // 5 Mbps

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:587:23: error: 'VideoCodec' is ambiguous for type lookup in this context
585 |     public let isKeyFrame: Bool
586 |     /// ÁºñËß£Á†ÅÂô®
587 |     public let codec: VideoCodec
    |                       `- error: 'VideoCodec' is ambiguous for type lookup in this context
588 |     /// ÂàÜËæ®Áéá
589 |     public let resolution: CGSize
    :
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: note: found this candidate
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:607:23: error: 'VideoCodec' is ambiguous for type lookup in this context
605 | public struct VideoEncodingConfiguration {
606 |     /// ÁºñËß£Á†ÅÂô®
607 |     public let codec: VideoCodec
    |                       `- error: 'VideoCodec' is ambiguous for type lookup in this context
608 |     /// ÂàÜËæ®Áéá
609 |     public let resolution: CGSize
    :
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: note: found this candidate
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:625:24: error: 'VideoCodec' is ambiguous for type lookup in this context
623 |     public let enableHardwareAcceleration: Bool
624 |     
625 |     public init(codec: VideoCodec,
    |                        `- error: 'VideoCodec' is ambiguous for type lookup in this context
626 |                 resolution: CGSize,
627 |                 bitrate: Int,
    :
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: note: found this candidate
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:151:30: warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: class 'HardwareVideoEncoder' does not conform to the 'Sendable' protocol
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
149 |         // ÂºÇÊ≠•ÁºñÁ†Å
150 |         encodingQueue.async { [weak self] in
151 |             guard let self = self else { return }
    |                              `- warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
152 |             
153 |             let status = VTCompressionSessionEncodeFrame(

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:154:17: warning: capture of 'session' with non-Sendable type 'VTCompressionSession' in a '@Sendable' closure [#SendableClosureCaptures]
152 |             
153 |             let status = VTCompressionSessionEncodeFrame(
154 |                 session,
    |                 `- warning: capture of 'session' with non-Sendable type 'VTCompressionSession' in a '@Sendable' closure [#SendableClosureCaptures]
155 |                 imageBuffer: pixelBuffer,
156 |                 presentationTimeStamp: presentationTime,

VideoToolbox.VTCompressionSession:1:14: note: class 'VTCompressionSession' does not conform to the 'Sendable' protocol
1 | public class VTCompressionSession : _CFObject {
  |              `- note: class 'VTCompressionSession' does not conform to the 'Sendable' protocol
2 | }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:155:30: warning: capture of 'pixelBuffer' with non-Sendable type 'CVPixelBuffer' (aka 'CVBuffer') in a '@Sendable' closure [#SendableClosureCaptures]
153 |             let status = VTCompressionSessionEncodeFrame(
154 |                 session,
155 |                 imageBuffer: pixelBuffer,
    |                              `- warning: capture of 'pixelBuffer' with non-Sendable type 'CVPixelBuffer' (aka 'CVBuffer') in a '@Sendable' closure [#SendableClosureCaptures]
156 |                 presentationTimeStamp: presentationTime,
157 |                 duration: duration,

CoreVideo.CVBuffer:1:14: note: class 'CVBuffer' does not conform to the 'Sendable' protocol
1 | public class CVBuffer : _CFObject {
  |              `- note: class 'CVBuffer' does not conform to the 'Sendable' protocol
2 | }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:158:34: warning: capture of 'frameProperties' with non-Sendable type '[String : Any]' in a '@Sendable' closure [#SendableClosureCaptures]
156 |                 presentationTimeStamp: presentationTime,
157 |                 duration: duration,
158 |                 frameProperties: frameProperties.isEmpty ? nil : frameProperties as CFDictionary,
    |                                  `- warning: capture of 'frameProperties' with non-Sendable type '[String : Any]' in a '@Sendable' closure [#SendableClosureCaptures]
159 |                 infoFlagsOut: nil
160 |             ) { [weak self] status, infoFlags, sampleBuffer in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:158:34: warning: reference to captured var 'frameProperties' in concurrently-executing code [#SendableClosureCaptures]
156 |                 presentationTimeStamp: presentationTime,
157 |                 duration: duration,
158 |                 frameProperties: frameProperties.isEmpty ? nil : frameProperties as CFDictionary,
    |                                  `- warning: reference to captured var 'frameProperties' in concurrently-executing code [#SendableClosureCaptures]
159 |                 infoFlagsOut: nil
160 |             ) { [weak self] status, infoFlags, sampleBuffer in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:158:66: warning: reference to captured var 'frameProperties' in concurrently-executing code [#SendableClosureCaptures]
156 |                 presentationTimeStamp: presentationTime,
157 |                 duration: duration,
158 |                 frameProperties: frameProperties.isEmpty ? nil : frameProperties as CFDictionary,
    |                                                                  `- warning: reference to captured var 'frameProperties' in concurrently-executing code [#SendableClosureCaptures]
159 |                 infoFlagsOut: nil
160 |             ) { [weak self] status, infoFlags, sampleBuffer in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:161:17: warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: class 'HardwareVideoEncoder' does not conform to the 'Sendable' protocol
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
159 |                 infoFlagsOut: nil
160 |             ) { [weak self] status, infoFlags, sampleBuffer in
161 |                 self?.handleEncodedFrame(
    |                 `- warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
162 |                     status: status,
163 |                     infoFlags: infoFlags,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:186:18: error: cannot find 'kVTCompressionPropertyKey_ForceKeyFrame' in scope
184 |         VTSessionSetProperty(
185 |             session,
186 |             key: kVTCompressionPropertyKey_ForceKeyFrame,
    |                  `- error: cannot find 'kVTCompressionPropertyKey_ForceKeyFrame' in scope
187 |             value: kCFBooleanTrue
188 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:328:38: error: missing argument labels 'key:value:' in call
326 |         
327 |         // ËÆæÁΩÆÊØîÁâπÁéá
328 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
329 |             session,
330 |             kVTCompressionPropertyKey_AverageBitRate,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:339:38: error: missing argument labels 'key:value:' in call
337 |         // ËÆæÁΩÆÊúÄÂ§ßÊØîÁâπÁéáÔºàÈò≤Ê≠¢Á™ÅÂèëÔºâ
338 |         let maxBitrate = currentConfiguration.bitrate * 2
339 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
340 |             session,
341 |             kVTCompressionPropertyKey_DataRateLimits,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:349:38: error: missing argument labels 'key:value:' in call
347 |         
348 |         // ËÆæÁΩÆÂÖ≥ÈîÆÂ∏ßÈó¥Èöî
349 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
350 |             session,
351 |             kVTCompressionPropertyKey_MaxKeyFrameInterval,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:359:38: error: missing argument labels 'key:value:' in call
357 |         
358 |         // ËÆæÁΩÆÊúüÊúõÂ∏ßÁéá
359 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
360 |             session,
361 |             kVTCompressionPropertyKey_ExpectedFrameRate,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:369:38: error: missing argument labels 'key:value:' in call
367 |         
368 |         // ËÆæÁΩÆË¥®Èáè
369 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
370 |             session,
371 |             kVTCompressionPropertyKey_Quality,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:379:38: error: missing argument labels 'key:value:' in call
377 |         
378 |         // ËÆæÁΩÆÂÆûÊó∂ÁºñÁ†Å
379 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
380 |             session,
381 |             kVTCompressionPropertyKey_RealTime,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:390:42: error: missing argument labels 'key:value:' in call
388 |         // ËÆæÁΩÆÁºñÁ†ÅÂô®ÈÖçÁΩÆÊñá‰ª∂
389 |         if let profileLevel = currentConfiguration.profile.vtProfileLevel {
390 |             status = VTSessionSetProperty(
    |                                          `- error: missing argument labels 'key:value:' in call
391 |                 session,
392 |                 kVTCompressionPropertyKey_ProfileLevel,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:402:42: error: missing argument labels 'key:value:' in call
400 |         // ËÆæÁΩÆBÂ∏ß
401 |         if currentConfiguration.enableBFrames {
402 |             status = VTSessionSetProperty(
    |                                          `- error: missing argument labels 'key:value:' in call
403 |                 session,
404 |                 kVTCompressionPropertyKey_AllowFrameReordering,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:411:42: error: missing argument labels 'key:value:' in call
409 |             }
410 |         } else {
411 |             status = VTSessionSetProperty(
    |                                          `- error: missing argument labels 'key:value:' in call
412 |                 session,
413 |                 kVTCompressionPropertyKey_AllowFrameReordering,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:419:43: error: cannot infer contextual base in reference to member 'h264'
417 |         
418 |         // ËÆæÁΩÆÁÜµÁºñÁ†ÅÊ®°ÂºèÔºàH.264Ôºâ
419 |         if currentConfiguration.codec == .h264 {
    |                                           `- error: cannot infer contextual base in reference to member 'h264'
420 |             status = VTSessionSetProperty(
421 |                 session,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:420:42: error: missing argument labels 'key:value:' in call
418 |         // ËÆæÁΩÆÁÜµÁºñÁ†ÅÊ®°ÂºèÔºàH.264Ôºâ
419 |         if currentConfiguration.codec == .h264 {
420 |             status = VTSessionSetProperty(
    |                                          `- error: missing argument labels 'key:value:' in call
421 |                 session,
422 |                 kVTCompressionPropertyKey_H264EntropyMode,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:465:18: error: value of type 'CFArray' has no member 'unsafelyUnwrapped'
463 |         let isKeyFrame = !CFDictionaryContainsKey(
464 |             CMSampleBufferGetSampleAttachmentsArray(sampleBuffer, createIfNecessary: false)?
465 |                 .unsafelyUnwrapped
    |                  `- error: value of type 'CFArray' has no member 'unsafelyUnwrapped'
466 |                 .pointee(at: 0) as CFDictionary,
467 |             Unmanaged.passUnretained(kCMSampleAttachmentKey_NotSync).toOpaque()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:466:18: error: cannot convert value of type 'Optional<_>' to type 'CFDictionary' in coercion
464 |             CMSampleBufferGetSampleAttachmentsArray(sampleBuffer, createIfNecessary: false)?
465 |                 .unsafelyUnwrapped
466 |                 .pointee(at: 0) as CFDictionary,
    |                  `- error: cannot convert value of type 'Optional<_>' to type 'CFDictionary' in coercion
467 |             Unmanaged.passUnretained(kCMSampleAttachmentKey_NotSync).toOpaque()
468 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:452:17: warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder' in a '@Sendable' closure [#SendableClosureCaptures]
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: class 'HardwareVideoEncoder' does not conform to the 'Sendable' protocol
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
450 |             print("‚ùå Â∏ßÁºñÁ†ÅÂ§±Ë¥•: \(status)")
451 |             callbackQueue.async {
452 |                 self.errorCallback?(VideoEncodingError.encodingFailed(status))
    |                 `- warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder' in a '@Sendable' closure [#SendableClosureCaptures]
453 |             }
454 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:534:17: warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: class 'HardwareVideoEncoder' does not conform to the 'Sendable' protocol
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
532 |         performanceTimer = Timer.scheduledTimer(withTimeInterval: 1.0, repeats: true) { [weak self] _ in
533 |             Task { @MainActor in
534 |                 self?.updatePerformanceMetrics()
    |                 `- warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
535 |             }
536 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:648:21: error: cannot infer contextual base in reference to member 'h264'
646 |     public static func defaultConfiguration() -> VideoEncodingConfiguration {
647 |         return VideoEncodingConfiguration(
648 |             codec: .h264,
    |                     `- error: cannot infer contextual base in reference to member 'h264'
649 |             resolution: CGSize(width: 1920, height: 1080),
650 |             bitrate: 5_000_000, // 5 Mbps

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:654:23: error: cannot infer contextual base in reference to member 'h264Baseline'
652 |             keyFrameInterval: 30,
653 |             quality: 0.8,
654 |             profile: .h264Baseline,
    |                       `- error: cannot infer contextual base in reference to member 'h264Baseline'
655 |             enableBFrames: false,
656 |             enableHardwareAcceleration: true

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:663:21: error: cannot infer contextual base in reference to member 'h265'
661 |     public static func highQualityConfiguration() -> VideoEncodingConfiguration {
662 |         return VideoEncodingConfiguration(
663 |             codec: .h265,
    |                     `- error: cannot infer contextual base in reference to member 'h265'
664 |             resolution: CGSize(width: 2560, height: 1440),
665 |             bitrate: 10_000_000, // 10 Mbps

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:669:23: error: cannot infer contextual base in reference to member 'h265Main'
667 |             keyFrameInterval: 60,
668 |             quality: 0.9,
669 |             profile: .h265Main,
    |                       `- error: cannot infer contextual base in reference to member 'h265Main'
670 |             enableBFrames: true,
671 |             enableHardwareAcceleration: true

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:678:21: error: cannot infer contextual base in reference to member 'h264'
676 |     public static func lowLatencyConfiguration() -> VideoEncodingConfiguration {
677 |         return VideoEncodingConfiguration(
678 |             codec: .h264,
    |                     `- error: cannot infer contextual base in reference to member 'h264'
679 |             resolution: CGSize(width: 1280, height: 720),
680 |             bitrate: 2_000_000, // 2 Mbps

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:684:23: error: cannot infer contextual base in reference to member 'h264Baseline'
682 |             keyFrameInterval: 15,
683 |             quality: 0.7,
684 |             profile: .h264Baseline,
    |                       `- error: cannot infer contextual base in reference to member 'h264Baseline'
685 |             enableBFrames: false,
686 |             enableHardwareAcceleration: true

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/ScreenCaptureEngine.swift:484:32: error: conformance of 'ScreenCaptureEngine' to protocol 'SCStreamDelegate' crosses into main actor-isolated code and can cause data races [#ConformanceIsolation]
482 | // MARK: - SCStreamDelegate
483 | 
484 | extension ScreenCaptureEngine: SCStreamDelegate {
    | |                              |- error: conformance of 'ScreenCaptureEngine' to protocol 'SCStreamDelegate' crosses into main actor-isolated code and can cause data races [#ConformanceIsolation]
    | |                              |- note: isolate this conformance to the main actor with '@MainActor'
    | |                              `- note: turn data races into runtime errors with '@preconcurrency'
    | `- note: mark all declarations used in the conformance 'nonisolated'
485 |     
486 |     public func stream(_ stream: SCStream, didStopWithError error: Error) {
    |                 `- note: main actor-isolated instance method 'stream(_:didStopWithError:)' cannot satisfy nonisolated requirement
487 |         print("‚ùå Â±èÂπïÊçïËé∑ÊµÅÂÅúÊ≠¢ÔºåÈîôËØØ: \(error)")
488 |         
    :
494 |     }
495 |     
496 |     public func streamDidBecomeActive(_ stream: SCStream) {
    |                 `- note: main actor-isolated instance method 'streamDidBecomeActive' cannot satisfy nonisolated requirement
497 |         print("‚úÖ Â±èÂπïÊçïËé∑ÊµÅÂ∑≤ÊøÄÊ¥ª")
498 |     }
499 |     
500 |     public func streamDidBecomeInactive(_ stream: SCStream) {
    |                 `- note: main actor-isolated instance method 'streamDidBecomeInactive' cannot satisfy nonisolated requirement
501 |         print("‚ö†Ô∏è Â±èÂπïÊçïËé∑ÊµÅÂ∑≤ÂÅúÁî®")
502 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/ScreenCaptureEngine.swift:82:9: error: call to main actor-isolated instance method 'stopCapture()' in a synchronous nonisolated context [#ActorIsolatedCall]
 80 |     
 81 |     deinit {
 82 |         stopCapture()
    |         `- error: call to main actor-isolated instance method 'stopCapture()' in a synchronous nonisolated context [#ActorIsolatedCall]
 83 |     }
 84 |     
    :
231 |     
232 |     /// ÂÅúÊ≠¢Â±èÂπïÊçïËé∑
233 |     public func stopCapture() {
    |                 `- note: calls to instance method 'stopCapture()' from outside of its actor context are implicitly asynchronous
234 |         guard isCapturing else { return }
235 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/ScreenCaptureEngine.swift:215:17: warning: no 'async' operations occur within 'await' expression
213 |             }
214 |             
215 |             try await stream.addStreamOutput(streamOutput, type: .screen, sampleHandlerQueue: .main)
    |                 `- warning: no 'async' operations occur within 'await' expression
216 |             try await stream.startCapture()
217 |             

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#ConformanceIsolation]: <https://docs.swift.org/compiler/documentation/diagnostics/conformance-isolation>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[146/160] Compiling SkyBridgeCore ScreenCaptureEngine.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:25:38: error: 'ScreenCaptureEngine' is ambiguous for type lookup in this context
 23 |     private let metalDevice: MTLDevice
 24 |     private let metalCommandQueue: MTLCommandQueue
 25 |     private let screenCaptureEngine: ScreenCaptureEngine
    |                                      `- error: 'ScreenCaptureEngine' is ambiguous for type lookup in this context
 26 |     private let videoEncoder: HardwareVideoEncoder
 27 |     private let frameProcessor: MetalFrameProcessor
    :
214 | 
215 | // MARK: - Â±èÂπïÊçïËé∑ÂºïÊìé
216 | private class ScreenCaptureEngine {
    |               `- note: found this candidate
217 |     private let metalDevice: MTLDevice
218 |     private var captureSession: AVCaptureSession?

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/ScreenCaptureEngine.swift:12:14: note: found this candidate
 10 | /// È´òÊÄßËÉΩÂ±èÂπïÊçïËé∑ÂºïÊìé - ‰ΩøÁî®ScreenCaptureKitÂÆûÁé∞Á°¨‰ª∂Âä†ÈÄüÁöÑÂ±èÂπïÊçïËé∑
 11 | @MainActor
 12 | public class ScreenCaptureEngine: NSObject, ObservableObject {
    |              `- note: found this candidate
 13 |     
 14 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:26:31: error: 'HardwareVideoEncoder' is ambiguous for type lookup in this context
 24 |     private let metalCommandQueue: MTLCommandQueue
 25 |     private let screenCaptureEngine: ScreenCaptureEngine
 26 |     private let videoEncoder: HardwareVideoEncoder
    |                               `- error: 'HardwareVideoEncoder' is ambiguous for type lookup in this context
 27 |     private let frameProcessor: MetalFrameProcessor
 28 |     private let networkStreamer: RemoteDesktopStreamer
    :
282 | 
283 | // MARK: - Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô®
284 | private class HardwareVideoEncoder {
    |               `- note: found this candidate
285 |     private var compressionSession: VTCompressionSession?
286 |     private var config: EncodingConfiguration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:10:14: note: found this candidate
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: found this candidate
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:216:15: error: invalid redeclaration of 'ScreenCaptureEngine'
214 | 
215 | // MARK: - Â±èÂπïÊçïËé∑ÂºïÊìé
216 | private class ScreenCaptureEngine {
    |               `- error: invalid redeclaration of 'ScreenCaptureEngine'
217 |     private let metalDevice: MTLDevice
218 |     private var captureSession: AVCaptureSession?

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:284:15: error: invalid redeclaration of 'HardwareVideoEncoder'
282 | 
283 | // MARK: - Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô®
284 | private class HardwareVideoEncoder {
    |               `- error: invalid redeclaration of 'HardwareVideoEncoder'
285 |     private var compressionSession: VTCompressionSession?
286 |     private var config: EncodingConfiguration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:583:23: error: 'VideoCodec' is ambiguous for type lookup in this context
581 | /// ÁºñÁ†ÅÈÖçÁΩÆ
582 | public struct EncodingConfiguration {
583 |     public let codec: VideoCodec
    |                       `- error: 'VideoCodec' is ambiguous for type lookup in this context
584 |     public let resolution: CGSize
585 |     public let bitrate: Int
    :
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:692:13: note: found this candidate
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: error: invalid redeclaration of 'VideoCodec'
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- error: invalid redeclaration of 'VideoCodec'
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:614:13: error: invalid redeclaration of 'RemoteDesktopError'
612 | 
613 | // MARK: - ÈîôËØØÂÆö‰πâ
614 | public enum RemoteDesktopError: LocalizedError {
    |             `- error: invalid redeclaration of 'RemoteDesktopError'
615 |     case metalInitializationFailed
616 |     case metalCommandQueueCreationFailed

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:44:38: error: type 'RemoteDesktopError' has no member 'metalInitializationFailed'
 42 |         // ÂàùÂßãÂåñMetalËÆæÂ§á
 43 |         guard let device = MTLCreateSystemDefaultDevice() else {
 44 |             throw RemoteDesktopError.metalInitializationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalInitializationFailed'
 45 |         }
 46 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:48:38: error: type 'RemoteDesktopError' has no member 'metalCommandQueueCreationFailed'
 46 |         
 47 |         guard let commandQueue = device.makeCommandQueue() else {
 48 |             throw RemoteDesktopError.metalCommandQueueCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalCommandQueueCreationFailed'
 49 |         }
 50 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:58:59: error: incorrect argument label in call (have 'device:', expected 'metalDevice:')
 56 |         self.encodingConfig = EncodingConfiguration.defaultConfig()
 57 |         
 58 |         self.screenCaptureEngine = try ScreenCaptureEngine(device: device)
    |                                                           `- error: incorrect argument label in call (have 'device:', expected 'metalDevice:')
 59 |         self.videoEncoder = try HardwareVideoEncoder(config: encodingConfig)
 60 |         self.frameProcessor = try MetalFrameProcessor(device: device, commandQueue: commandQueue)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:59:53: error: incorrect argument label in call (have 'config:', expected 'configuration:')
 57 |         
 58 |         self.screenCaptureEngine = try ScreenCaptureEngine(device: device)
 59 |         self.videoEncoder = try HardwareVideoEncoder(config: encodingConfig)
    |                                                     `- error: incorrect argument label in call (have 'config:', expected 'configuration:')
 60 |         self.frameProcessor = try MetalFrameProcessor(device: device, commandQueue: commandQueue)
 61 |         self.networkStreamer = RemoteDesktopStreamer()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:59:62: error: cannot convert value of type 'EncodingConfiguration' to expected argument type 'VideoEncodingConfiguration'
 57 |         
 58 |         self.screenCaptureEngine = try ScreenCaptureEngine(device: device)
 59 |         self.videoEncoder = try HardwareVideoEncoder(config: encodingConfig)
    |                                                              `- error: cannot convert value of type 'EncodingConfiguration' to expected argument type 'VideoEncodingConfiguration'
 60 |         self.frameProcessor = try MetalFrameProcessor(device: device, commandQueue: commandQueue)
 61 |         self.networkStreamer = RemoteDesktopStreamer()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:65:59: error: value of type 'any MTLDevice' has no member 'maxTextureSize'
 63 |         print("üöÄ Á°¨‰ª∂Á∫ßËøúÁ®ãÊ°åÈù¢ÂºïÊìéÂàùÂßãÂåñÂÆåÊàê")
 64 |         print("üì± MetalËÆæÂ§á: \(device.name)")
 65 |         print("üéØ ÊîØÊåÅÁöÑÊúÄÂ§ßÁ∫πÁêÜÂ∞∫ÂØ∏: \(device.maxTextureSize)")
    |                                      `- error: value of type 'any MTLDevice' has no member 'maxTextureSize'
 66 |     }
 67 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:69:9: error: call to main actor-isolated instance method 'stopCapture()' in a synchronous nonisolated context [#ActorIsolatedCall]
 67 |     
 68 |     deinit {
 69 |         stopCapture()
    |         `- error: call to main actor-isolated instance method 'stopCapture()' in a synchronous nonisolated context [#ActorIsolatedCall]
 70 |         stopStreaming()
 71 |     }
    :
 94 |     
 95 |     /// ÂÅúÊ≠¢Â±èÂπïÊçïËé∑
 96 |     public func stopCapture() {
    |                 `- note: calls to instance method 'stopCapture()' from outside of its actor context are implicitly asynchronous
 97 |         guard isCapturing else { return }
 98 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:70:9: error: call to main actor-isolated instance method 'stopStreaming()' in a synchronous nonisolated context [#ActorIsolatedCall]
 68 |     deinit {
 69 |         stopCapture()
 70 |         stopStreaming()
    |         `- error: call to main actor-isolated instance method 'stopStreaming()' in a synchronous nonisolated context [#ActorIsolatedCall]
 71 |     }
 72 |     
    :
115 |     
116 |     /// ÂÅúÊ≠¢ÊµÅÂ™í‰Ωì‰º†Ëæì
117 |     public func stopStreaming() {
    |                 `- note: calls to instance method 'stopStreaming()' from outside of its actor context are implicitly asynchronous
118 |         guard isStreaming else { return }
119 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:235:23: error: 'init(target:selector:)' is unavailable in macOS
233 |         
234 |         // ‰ΩøÁî®CADisplayLinkËøõË°åÈ´òÁ≤æÂ∫¶Â∏ßÊçïËé∑
235 |         displayLink = CADisplayLink(target: self, selector: #selector(captureFrame))
    |                       `- error: 'init(target:selector:)' is unavailable in macOS
236 |         displayLink?.preferredFramesPerSecond = 60 // ÊúÄÂ§ß60fps
237 |         displayLink?.add(to: .main, forMode: .common)

/Users/macbookpro/Desktop/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/QuartzCore.framework/Headers/CADisplayLink.h:32:1: note: 'init(target:selector:)' has been explicitly marked unavailable here
 30 |  * For macOS, see NSView/NSWindow/NSScreen.displayLink(withTarget:selector:). */
 31 | 
 32 | + (CADisplayLink *)displayLinkWithTarget:(id)target selector:(SEL)sel
    | `- note: 'init(target:selector:)' has been explicitly marked unavailable here
 33 |     API_UNAVAILABLE(macos);
 34 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:236:22: error: 'preferredFramesPerSecond' is unavailable in macOS
234 |         // ‰ΩøÁî®CADisplayLinkËøõË°åÈ´òÁ≤æÂ∫¶Â∏ßÊçïËé∑
235 |         displayLink = CADisplayLink(target: self, selector: #selector(captureFrame))
236 |         displayLink?.preferredFramesPerSecond = 60 // ÊúÄÂ§ß60fps
    |                      `- error: 'preferredFramesPerSecond' is unavailable in macOS
237 |         displayLink?.add(to: .main, forMode: .common)
238 |         

/Users/macbookpro/Desktop/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/QuartzCore.framework/Headers/CADisplayLink.h:87:32: note: 'preferredFramesPerSecond' has been explicitly marked unavailable here
 85 |  * best-effort attempt at issuing callbacks at the requested rate. */
 86 | 
 87 | @property(nonatomic) NSInteger preferredFramesPerSecond
    |                                `- note: 'preferredFramesPerSecond' has been explicitly marked unavailable here
 88 |   API_DEPRECATED_WITH_REPLACEMENT ("preferredFrameRateRange",
 89 |                                    ios(10.0, API_TO_BE_DEPRECATED),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:296:47: error: incorrect argument label in call (have '_:until:', expected '_:untilPresentationTimeStamp:')
294 |     deinit {
295 |         if let session = compressionSession {
296 |             VTCompressionSessionCompleteFrames(session, until: CMTime.invalid)
    |                                               `- error: incorrect argument label in call (have '_:until:', expected '_:untilPresentationTimeStamp:')
297 |             VTCompressionSessionInvalidate(session)
298 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:303:38: error: type 'RemoteDesktopError' has no member 'encoderNotInitialized'
301 |     func encode(pixelBuffer: CVPixelBuffer, timestamp: CFTimeInterval) async throws -> Data {
302 |         guard let session = compressionSession else {
303 |             throw RemoteDesktopError.encoderNotInitialized
    |                                      `- error: type 'RemoteDesktopError' has no member 'encoderNotInitialized'
304 |         }
305 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:314:57: error: incorrect argument label in call (have '_:imageBuffer:presentationTimeStamp:duration:frameProperties:sourceFrameRefcon:outputHandler:', expected '_:imageBuffer:presentationTimeStamp:duration:frameProperties:infoFlagsOut:outputHandler:')
312 |             }
313 |             
314 |             let status = VTCompressionSessionEncodeFrame(
    |                                                         `- error: incorrect argument label in call (have '_:imageBuffer:presentationTimeStamp:duration:frameProperties:sourceFrameRefcon:outputHandler:', expected '_:imageBuffer:presentationTimeStamp:duration:frameProperties:infoFlagsOut:outputHandler:')
315 |                 session,
316 |                 imageBuffer: pixelBuffer,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:358:38: error: type 'RemoteDesktopError' has no member 'compressionSessionCreationFailed'
356 |         
357 |         guard status == noErr, let session = session else {
358 |             throw RemoteDesktopError.compressionSessionCreationFailed(status)
    |                                      `- error: type 'RemoteDesktopError' has no member 'compressionSessionCreationFailed'
359 |         }
360 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:370:29: error: missing argument labels 'key:value:' in call
368 |     private func configureCompressionSession(_ session: VTCompressionSession) throws {
369 |         // ËÆæÁΩÆÊØîÁâπÁéá
370 |         VTSessionSetProperty(
    |                             `- error: missing argument labels 'key:value:' in call
371 |             session,
372 |             kVTCompressionPropertyKey_AverageBitRate,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:377:29: error: missing argument labels 'key:value:' in call
375 |         
376 |         // ËÆæÁΩÆÂÖ≥ÈîÆÂ∏ßÈó¥Èöî
377 |         VTSessionSetProperty(
    |                             `- error: missing argument labels 'key:value:' in call
378 |             session,
379 |             kVTCompressionPropertyKey_MaxKeyFrameInterval,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:384:29: error: missing argument labels 'key:value:' in call
382 |         
383 |         // ËÆæÁΩÆÂÆûÊó∂ÁºñÁ†Å
384 |         VTSessionSetProperty(
    |                             `- error: missing argument labels 'key:value:' in call
385 |             session,
386 |             kVTCompressionPropertyKey_RealTime,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:391:29: error: missing argument labels 'key:value:' in call
389 |         
390 |         // ËÆæÁΩÆË¥®Èáè
391 |         VTSessionSetProperty(
    |                             `- error: missing argument labels 'key:value:' in call
392 |             session,
393 |             kVTCompressionPropertyKey_Quality,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:400:38: error: type 'RemoteDesktopError' has no member 'compressionSessionPreparationFailed'
398 |         let status = VTCompressionSessionPrepareToEncodeFrames(session)
399 |         if status != noErr {
400 |             throw RemoteDesktopError.compressionSessionPreparationFailed(status)
    |                                      `- error: type 'RemoteDesktopError' has no member 'compressionSessionPreparationFailed'
401 |         }
402 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:416:14: warning: result of call to 'withUnsafeMutableBytes' is unused [#no-usage]
414 |         var data = Data(count: length)
415 |         
416 |         data.withUnsafeMutableBytes { bytes in
    |              `- warning: result of call to 'withUnsafeMutableBytes' is unused [#no-usage]
417 |             CMBlockBufferCopyDataBytes(dataBuffer, atOffset: 0, dataLength: length, destination: bytes.baseAddress!)
418 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:440:38: error: type 'RemoteDesktopError' has no member 'textureCacheCreationFailed'
438 |         let status = CVMetalTextureCacheCreate(kCFAllocatorDefault, nil, device, nil, &textureCache)
439 |         guard status == kCVReturnSuccess, let cache = textureCache else {
440 |             throw RemoteDesktopError.textureCacheCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'textureCacheCreationFailed'
441 |         }
442 |         self.textureCache = cache

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:448:38: error: type 'RemoteDesktopError' has no member 'metalPipelineCreationFailed'
446 |               let function = library.makeFunction(name: "scaleFrame"),
447 |               let pipeline = try? device.makeComputePipelineState(function: function) else {
448 |             throw RemoteDesktopError.metalPipelineCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalPipelineCreationFailed'
449 |         }
450 |         self.scalingPipeline = pipeline

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:466:38: error: type 'RemoteDesktopError' has no member 'metalCommandCreationFailed'
464 |         guard let commandBuffer = commandQueue.makeCommandBuffer(),
465 |               let encoder = commandBuffer.makeComputeCommandEncoder() else {
466 |             throw RemoteDesktopError.metalCommandCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalCommandCreationFailed'
467 |         }
468 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:484:23: error: instance method 'waitUntilCompleted' is unavailable from asynchronous contexts; Use 'await completed()' instead.
482 |         
483 |         commandBuffer.commit()
484 |         commandBuffer.waitUntilCompleted()
    |                       `- error: instance method 'waitUntilCompleted' is unavailable from asynchronous contexts; Use 'await completed()' instead.
485 |         
486 |         return outputBuffer

Metal.MTLCommandBuffer.waitUntilCompleted:2:6: note: 'waitUntilCompleted()' declared here
1 | protocol MTLCommandBuffer {
2 | func waitUntilCompleted()}
  |      `- note: 'waitUntilCompleted()' declared here
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:509:38: error: type 'RemoteDesktopError' has no member 'metalTextureCreationFailed'
507 |               let texture = texture,
508 |               let metalTexture = CVMetalTextureGetTexture(texture) else {
509 |             throw RemoteDesktopError.metalTextureCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'metalTextureCreationFailed'
510 |         }
511 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:530:38: error: type 'RemoteDesktopError' has no member 'pixelBufferCreationFailed'
528 |         
529 |         guard status == kCVReturnSuccess, let buffer = outputBuffer else {
530 |             throw RemoteDesktopError.pixelBufferCreationFailed
    |                                      `- error: type 'RemoteDesktopError' has no member 'pixelBufferCreationFailed'
531 |         }
532 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:591:21: error: cannot infer contextual base in reference to member 'h265'
589 |     public static func defaultConfig() -> EncodingConfiguration {
590 |         return EncodingConfiguration(
591 |             codec: .h265,
    |                     `- error: cannot infer contextual base in reference to member 'h265'
592 |             resolution: CGSize(width: 1920, height: 1080),
593 |             bitrate: 5_000_000, // 5 Mbps

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:587:23: error: 'VideoCodec' is ambiguous for type lookup in this context
585 |     public let isKeyFrame: Bool
586 |     /// ÁºñËß£Á†ÅÂô®
587 |     public let codec: VideoCodec
    |                       `- error: 'VideoCodec' is ambiguous for type lookup in this context
588 |     /// ÂàÜËæ®Áéá
589 |     public let resolution: CGSize
    :
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: note: found this candidate
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:607:23: error: 'VideoCodec' is ambiguous for type lookup in this context
605 | public struct VideoEncodingConfiguration {
606 |     /// ÁºñËß£Á†ÅÂô®
607 |     public let codec: VideoCodec
    |                       `- error: 'VideoCodec' is ambiguous for type lookup in this context
608 |     /// ÂàÜËæ®Áéá
609 |     public let resolution: CGSize
    :
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: note: found this candidate
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:625:24: error: 'VideoCodec' is ambiguous for type lookup in this context
623 |     public let enableHardwareAcceleration: Bool
624 |     
625 |     public init(codec: VideoCodec,
    |                        `- error: 'VideoCodec' is ambiguous for type lookup in this context
626 |                 resolution: CGSize,
627 |                 bitrate: Int,
    :
690 | 
691 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
692 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
693 |     case h264 = "H.264"
694 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareRemoteDesktopEngine.swift:601:13: note: found this candidate
599 | 
600 | /// ËßÜÈ¢ëÁºñËß£Á†ÅÂô®
601 | public enum VideoCodec: String, CaseIterable {
    |             `- note: found this candidate
602 |     case h264 = "H.264"
603 |     case h265 = "H.265"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:151:30: warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: class 'HardwareVideoEncoder' does not conform to the 'Sendable' protocol
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
149 |         // ÂºÇÊ≠•ÁºñÁ†Å
150 |         encodingQueue.async { [weak self] in
151 |             guard let self = self else { return }
    |                              `- warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
152 |             
153 |             let status = VTCompressionSessionEncodeFrame(

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:154:17: warning: capture of 'session' with non-Sendable type 'VTCompressionSession' in a '@Sendable' closure [#SendableClosureCaptures]
152 |             
153 |             let status = VTCompressionSessionEncodeFrame(
154 |                 session,
    |                 `- warning: capture of 'session' with non-Sendable type 'VTCompressionSession' in a '@Sendable' closure [#SendableClosureCaptures]
155 |                 imageBuffer: pixelBuffer,
156 |                 presentationTimeStamp: presentationTime,

VideoToolbox.VTCompressionSession:1:14: note: class 'VTCompressionSession' does not conform to the 'Sendable' protocol
1 | public class VTCompressionSession : _CFObject {
  |              `- note: class 'VTCompressionSession' does not conform to the 'Sendable' protocol
2 | }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:155:30: warning: capture of 'pixelBuffer' with non-Sendable type 'CVPixelBuffer' (aka 'CVBuffer') in a '@Sendable' closure [#SendableClosureCaptures]
153 |             let status = VTCompressionSessionEncodeFrame(
154 |                 session,
155 |                 imageBuffer: pixelBuffer,
    |                              `- warning: capture of 'pixelBuffer' with non-Sendable type 'CVPixelBuffer' (aka 'CVBuffer') in a '@Sendable' closure [#SendableClosureCaptures]
156 |                 presentationTimeStamp: presentationTime,
157 |                 duration: duration,

CoreVideo.CVBuffer:1:14: note: class 'CVBuffer' does not conform to the 'Sendable' protocol
1 | public class CVBuffer : _CFObject {
  |              `- note: class 'CVBuffer' does not conform to the 'Sendable' protocol
2 | }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:158:34: warning: capture of 'frameProperties' with non-Sendable type '[String : Any]' in a '@Sendable' closure [#SendableClosureCaptures]
156 |                 presentationTimeStamp: presentationTime,
157 |                 duration: duration,
158 |                 frameProperties: frameProperties.isEmpty ? nil : frameProperties as CFDictionary,
    |                                  `- warning: capture of 'frameProperties' with non-Sendable type '[String : Any]' in a '@Sendable' closure [#SendableClosureCaptures]
159 |                 infoFlagsOut: nil
160 |             ) { [weak self] status, infoFlags, sampleBuffer in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:158:34: warning: reference to captured var 'frameProperties' in concurrently-executing code [#SendableClosureCaptures]
156 |                 presentationTimeStamp: presentationTime,
157 |                 duration: duration,
158 |                 frameProperties: frameProperties.isEmpty ? nil : frameProperties as CFDictionary,
    |                                  `- warning: reference to captured var 'frameProperties' in concurrently-executing code [#SendableClosureCaptures]
159 |                 infoFlagsOut: nil
160 |             ) { [weak self] status, infoFlags, sampleBuffer in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:158:66: warning: reference to captured var 'frameProperties' in concurrently-executing code [#SendableClosureCaptures]
156 |                 presentationTimeStamp: presentationTime,
157 |                 duration: duration,
158 |                 frameProperties: frameProperties.isEmpty ? nil : frameProperties as CFDictionary,
    |                                                                  `- warning: reference to captured var 'frameProperties' in concurrently-executing code [#SendableClosureCaptures]
159 |                 infoFlagsOut: nil
160 |             ) { [weak self] status, infoFlags, sampleBuffer in

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:161:17: warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: class 'HardwareVideoEncoder' does not conform to the 'Sendable' protocol
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
159 |                 infoFlagsOut: nil
160 |             ) { [weak self] status, infoFlags, sampleBuffer in
161 |                 self?.handleEncodedFrame(
    |                 `- warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
162 |                     status: status,
163 |                     infoFlags: infoFlags,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:186:18: error: cannot find 'kVTCompressionPropertyKey_ForceKeyFrame' in scope
184 |         VTSessionSetProperty(
185 |             session,
186 |             key: kVTCompressionPropertyKey_ForceKeyFrame,
    |                  `- error: cannot find 'kVTCompressionPropertyKey_ForceKeyFrame' in scope
187 |             value: kCFBooleanTrue
188 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:328:38: error: missing argument labels 'key:value:' in call
326 |         
327 |         // ËÆæÁΩÆÊØîÁâπÁéá
328 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
329 |             session,
330 |             kVTCompressionPropertyKey_AverageBitRate,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:339:38: error: missing argument labels 'key:value:' in call
337 |         // ËÆæÁΩÆÊúÄÂ§ßÊØîÁâπÁéáÔºàÈò≤Ê≠¢Á™ÅÂèëÔºâ
338 |         let maxBitrate = currentConfiguration.bitrate * 2
339 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
340 |             session,
341 |             kVTCompressionPropertyKey_DataRateLimits,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:349:38: error: missing argument labels 'key:value:' in call
347 |         
348 |         // ËÆæÁΩÆÂÖ≥ÈîÆÂ∏ßÈó¥Èöî
349 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
350 |             session,
351 |             kVTCompressionPropertyKey_MaxKeyFrameInterval,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:359:38: error: missing argument labels 'key:value:' in call
357 |         
358 |         // ËÆæÁΩÆÊúüÊúõÂ∏ßÁéá
359 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
360 |             session,
361 |             kVTCompressionPropertyKey_ExpectedFrameRate,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:369:38: error: missing argument labels 'key:value:' in call
367 |         
368 |         // ËÆæÁΩÆË¥®Èáè
369 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
370 |             session,
371 |             kVTCompressionPropertyKey_Quality,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:379:38: error: missing argument labels 'key:value:' in call
377 |         
378 |         // ËÆæÁΩÆÂÆûÊó∂ÁºñÁ†Å
379 |         status = VTSessionSetProperty(
    |                                      `- error: missing argument labels 'key:value:' in call
380 |             session,
381 |             kVTCompressionPropertyKey_RealTime,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:390:42: error: missing argument labels 'key:value:' in call
388 |         // ËÆæÁΩÆÁºñÁ†ÅÂô®ÈÖçÁΩÆÊñá‰ª∂
389 |         if let profileLevel = currentConfiguration.profile.vtProfileLevel {
390 |             status = VTSessionSetProperty(
    |                                          `- error: missing argument labels 'key:value:' in call
391 |                 session,
392 |                 kVTCompressionPropertyKey_ProfileLevel,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:402:42: error: missing argument labels 'key:value:' in call
400 |         // ËÆæÁΩÆBÂ∏ß
401 |         if currentConfiguration.enableBFrames {
402 |             status = VTSessionSetProperty(
    |                                          `- error: missing argument labels 'key:value:' in call
403 |                 session,
404 |                 kVTCompressionPropertyKey_AllowFrameReordering,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:411:42: error: missing argument labels 'key:value:' in call
409 |             }
410 |         } else {
411 |             status = VTSessionSetProperty(
    |                                          `- error: missing argument labels 'key:value:' in call
412 |                 session,
413 |                 kVTCompressionPropertyKey_AllowFrameReordering,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:419:43: error: cannot infer contextual base in reference to member 'h264'
417 |         
418 |         // ËÆæÁΩÆÁÜµÁºñÁ†ÅÊ®°ÂºèÔºàH.264Ôºâ
419 |         if currentConfiguration.codec == .h264 {
    |                                           `- error: cannot infer contextual base in reference to member 'h264'
420 |             status = VTSessionSetProperty(
421 |                 session,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:420:42: error: missing argument labels 'key:value:' in call
418 |         // ËÆæÁΩÆÁÜµÁºñÁ†ÅÊ®°ÂºèÔºàH.264Ôºâ
419 |         if currentConfiguration.codec == .h264 {
420 |             status = VTSessionSetProperty(
    |                                          `- error: missing argument labels 'key:value:' in call
421 |                 session,
422 |                 kVTCompressionPropertyKey_H264EntropyMode,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:465:18: error: value of type 'CFArray' has no member 'unsafelyUnwrapped'
463 |         let isKeyFrame = !CFDictionaryContainsKey(
464 |             CMSampleBufferGetSampleAttachmentsArray(sampleBuffer, createIfNecessary: false)?
465 |                 .unsafelyUnwrapped
    |                  `- error: value of type 'CFArray' has no member 'unsafelyUnwrapped'
466 |                 .pointee(at: 0) as CFDictionary,
467 |             Unmanaged.passUnretained(kCMSampleAttachmentKey_NotSync).toOpaque()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:466:18: error: cannot convert value of type 'Optional<_>' to type 'CFDictionary' in coercion
464 |             CMSampleBufferGetSampleAttachmentsArray(sampleBuffer, createIfNecessary: false)?
465 |                 .unsafelyUnwrapped
466 |                 .pointee(at: 0) as CFDictionary,
    |                  `- error: cannot convert value of type 'Optional<_>' to type 'CFDictionary' in coercion
467 |             Unmanaged.passUnretained(kCMSampleAttachmentKey_NotSync).toOpaque()
468 |         )

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:452:17: warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder' in a '@Sendable' closure [#SendableClosureCaptures]
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: class 'HardwareVideoEncoder' does not conform to the 'Sendable' protocol
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
450 |             print("‚ùå Â∏ßÁºñÁ†ÅÂ§±Ë¥•: \(status)")
451 |             callbackQueue.async {
452 |                 self.errorCallback?(VideoEncodingError.encodingFailed(status))
    |                 `- warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder' in a '@Sendable' closure [#SendableClosureCaptures]
453 |             }
454 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:534:17: warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
  8 | 
  9 | /// Á°¨‰ª∂ËßÜÈ¢ëÁºñÁ†ÅÂô® - ‰ΩøÁî®VideoToolboxÂÆûÁé∞È´òÊÄßËÉΩH.264/H.265ÁºñÁ†Å
 10 | public class HardwareVideoEncoder: ObservableObject {
    |              `- note: class 'HardwareVideoEncoder' does not conform to the 'Sendable' protocol
 11 |     
 12 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
532 |         performanceTimer = Timer.scheduledTimer(withTimeInterval: 1.0, repeats: true) { [weak self] _ in
533 |             Task { @MainActor in
534 |                 self?.updatePerformanceMetrics()
    |                 `- warning: capture of 'self' with non-Sendable type 'HardwareVideoEncoder?' in a '@Sendable' closure [#SendableClosureCaptures]
535 |             }
536 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:648:21: error: cannot infer contextual base in reference to member 'h264'
646 |     public static func defaultConfiguration() -> VideoEncodingConfiguration {
647 |         return VideoEncodingConfiguration(
648 |             codec: .h264,
    |                     `- error: cannot infer contextual base in reference to member 'h264'
649 |             resolution: CGSize(width: 1920, height: 1080),
650 |             bitrate: 5_000_000, // 5 Mbps

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:654:23: error: cannot infer contextual base in reference to member 'h264Baseline'
652 |             keyFrameInterval: 30,
653 |             quality: 0.8,
654 |             profile: .h264Baseline,
    |                       `- error: cannot infer contextual base in reference to member 'h264Baseline'
655 |             enableBFrames: false,
656 |             enableHardwareAcceleration: true

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:663:21: error: cannot infer contextual base in reference to member 'h265'
661 |     public static func highQualityConfiguration() -> VideoEncodingConfiguration {
662 |         return VideoEncodingConfiguration(
663 |             codec: .h265,
    |                     `- error: cannot infer contextual base in reference to member 'h265'
664 |             resolution: CGSize(width: 2560, height: 1440),
665 |             bitrate: 10_000_000, // 10 Mbps

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:669:23: error: cannot infer contextual base in reference to member 'h265Main'
667 |             keyFrameInterval: 60,
668 |             quality: 0.9,
669 |             profile: .h265Main,
    |                       `- error: cannot infer contextual base in reference to member 'h265Main'
670 |             enableBFrames: true,
671 |             enableHardwareAcceleration: true

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:678:21: error: cannot infer contextual base in reference to member 'h264'
676 |     public static func lowLatencyConfiguration() -> VideoEncodingConfiguration {
677 |         return VideoEncodingConfiguration(
678 |             codec: .h264,
    |                     `- error: cannot infer contextual base in reference to member 'h264'
679 |             resolution: CGSize(width: 1280, height: 720),
680 |             bitrate: 2_000_000, // 2 Mbps

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/HardwareVideoEncoder.swift:684:23: error: cannot infer contextual base in reference to member 'h264Baseline'
682 |             keyFrameInterval: 15,
683 |             quality: 0.7,
684 |             profile: .h264Baseline,
    |                       `- error: cannot infer contextual base in reference to member 'h264Baseline'
685 |             enableBFrames: false,
686 |             enableHardwareAcceleration: true

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/ScreenCaptureEngine.swift:484:32: error: conformance of 'ScreenCaptureEngine' to protocol 'SCStreamDelegate' crosses into main actor-isolated code and can cause data races [#ConformanceIsolation]
482 | // MARK: - SCStreamDelegate
483 | 
484 | extension ScreenCaptureEngine: SCStreamDelegate {
    | |                              |- error: conformance of 'ScreenCaptureEngine' to protocol 'SCStreamDelegate' crosses into main actor-isolated code and can cause data races [#ConformanceIsolation]
    | |                              |- note: isolate this conformance to the main actor with '@MainActor'
    | |                              `- note: turn data races into runtime errors with '@preconcurrency'
    | `- note: mark all declarations used in the conformance 'nonisolated'
485 |     
486 |     public func stream(_ stream: SCStream, didStopWithError error: Error) {
    |                 `- note: main actor-isolated instance method 'stream(_:didStopWithError:)' cannot satisfy nonisolated requirement
487 |         print("‚ùå Â±èÂπïÊçïËé∑ÊµÅÂÅúÊ≠¢ÔºåÈîôËØØ: \(error)")
488 |         
    :
494 |     }
495 |     
496 |     public func streamDidBecomeActive(_ stream: SCStream) {
    |                 `- note: main actor-isolated instance method 'streamDidBecomeActive' cannot satisfy nonisolated requirement
497 |         print("‚úÖ Â±èÂπïÊçïËé∑ÊµÅÂ∑≤ÊøÄÊ¥ª")
498 |     }
499 |     
500 |     public func streamDidBecomeInactive(_ stream: SCStream) {
    |                 `- note: main actor-isolated instance method 'streamDidBecomeInactive' cannot satisfy nonisolated requirement
501 |         print("‚ö†Ô∏è Â±èÂπïÊçïËé∑ÊµÅÂ∑≤ÂÅúÁî®")
502 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/ScreenCaptureEngine.swift:82:9: error: call to main actor-isolated instance method 'stopCapture()' in a synchronous nonisolated context [#ActorIsolatedCall]
 80 |     
 81 |     deinit {
 82 |         stopCapture()
    |         `- error: call to main actor-isolated instance method 'stopCapture()' in a synchronous nonisolated context [#ActorIsolatedCall]
 83 |     }
 84 |     
    :
231 |     
232 |     /// ÂÅúÊ≠¢Â±èÂπïÊçïËé∑
233 |     public func stopCapture() {
    |                 `- note: calls to instance method 'stopCapture()' from outside of its actor context are implicitly asynchronous
234 |         guard isCapturing else { return }
235 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/RemoteDesktop/ScreenCaptureEngine.swift:215:17: warning: no 'async' operations occur within 'await' expression
213 |             }
214 |             
215 |             try await stream.addStreamOutput(streamOutput, type: .screen, sampleHandlerQueue: .main)
    |                 `- warning: no 'async' operations occur within 'await' expression
216 |             try await stream.startCapture()
217 |             

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#ConformanceIsolation]: <https://docs.swift.org/compiler/documentation/diagnostics/conformance-isolation>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[147/160] Compiling SkyBridgeCore Models.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:16:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 14 |     // MARK: - ÁßÅÊúâÂ±ûÊÄß
 15 |     private let stunClient: STUNClient?
 16 |     private let configuration: P2PNetworkConfiguration
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 17 |     private let networkQueue: DispatchQueue
 18 |     private let coordinationQueue: DispatchQueue

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: note: found this candidate
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:35:57: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 33 |     // MARK: - ÂàùÂßãÂåñ
 34 |     
 35 |     public init(stunClient: STUNClient?, configuration: P2PNetworkConfiguration) {
    |                                                         `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 36 |         self.stunClient = stunClient
 37 |         self.configuration = configuration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: note: found this candidate
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:563:25: error: 'NATType' is ambiguous for type lookup in this context
561 |     public let supportedMethods: [TraversalMethod]
562 |     /// NATÁ±ªÂûã
563 |     public let natType: NATType
    |                         `- error: 'NATType' is ambiguous for type lookup in this context
564 |     /// ÂÖ¨ÁΩëÁ´ØÁÇπ
565 |     public let publicEndpoint: NWEndpoint?

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:347:13: note: found this candidate
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:571:26: error: 'NATType' is ambiguous for type lookup in this context
569 |     public init(level: TraversalCapabilityLevel,
570 |                 supportedMethods: [TraversalMethod],
571 |                 natType: NATType,
    |                          `- error: 'NATType' is ambiguous for type lookup in this context
572 |                 publicEndpoint: NWEndpoint?,
573 |                 estimatedSuccessRate: Double) {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:347:13: note: found this candidate
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:69:13: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
 67 |         
 68 |         networkQueue.async {
 69 |             self.initiateHolePunching(to: device, completion: completion)
    |             `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
 70 |         }
 71 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:69:43: warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 67 |         
 68 |         networkQueue.async {
 69 |             self.initiateHolePunching(to: device, completion: completion)
    |                                           `- warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 70 |         }
 71 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:258:15: note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
256 | 
257 | // MARK: - P2PËÆæÂ§á
258 | public struct P2PDevice: Codable, Identifiable, Hashable {
    |               `- note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
259 |     public let id: String
260 |     public let name: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:69:63: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
 67 |         
 68 |         networkQueue.async {
 69 |             self.initiateHolePunching(to: device, completion: completion)
    |                                                               |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                                                               `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 70 |         }
 71 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:13: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |             `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |         }
 83 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:50: warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |                                                  `- warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |         }
 83 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:258:15: note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
256 | 
257 | // MARK: - P2PËÆæÂ§á
258 | public struct P2PDevice: Codable, Identifiable, Hashable {
    |               `- note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
259 |     public let id: String
260 |     public let name: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:67: warning: capture of 'request' with non-Sendable type 'HolePunchingRequest' in a '@Sendable' closure [#SendableClosureCaptures]
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |                                                                   `- warning: capture of 'request' with non-Sendable type 'HolePunchingRequest' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |         }
 83 |     }
    :
518 | 
519 | /// ÊâìÊ¥ûËØ∑Ê±Ç
520 | public struct HolePunchingRequest {
    |               `- note: consider making struct 'HolePunchingRequest' conform to the 'Sendable' protocol
521 |     /// ‰ºöËØùID
522 |     public let sessionId: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:88: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |                                                                                        |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                                                                                        `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 82 |         }
 83 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:90:13: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
 88 |         
 89 |         networkQueue.async {
 90 |             self.cleanupSession(deviceId)
    |             `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
 91 |         }
 92 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:66:61: error: 'NATType' is ambiguous for type lookup in this context
 64 |     
 65 |     /// Ê£ÄÊµãNATÁ±ªÂûã
 66 |     public func detectNATType(completion: @escaping (Result<NATType, STUNError>) -> Void) {
    |                                                             `- error: 'NATType' is ambiguous for type lookup in this context
 67 |         print("üîç ÂºÄÂßãÊ£ÄÊµãNATÁ±ªÂûã")
 68 |         
    :
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:146:48: error: cannot infer type of closure parameter 'result' without a type annotation
144 |         print("üîç ÂºÄÂßãNATÁ±ªÂûãÊ£ÄÊµã")
145 |         
146 |         stunClient.detectNATType { [weak self] result in
    |                                                `- error: cannot infer type of closure parameter 'result' without a type annotation
147 |             switch result {
148 |             case .success(let natType):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:248:57: error: value of type 'P2PDevice' has no member 'endpoints'
246 |         print("üéØ ÊâßË°åÁõ¥Êé•UDPÊâìÊ¥û")
247 |         
248 |         guard let targetEndpoint = session.targetDevice.endpoints.first else {
    |                                                         `- error: value of type 'P2PDevice' has no member 'endpoints'
249 |             completion(.failure(.noValidEndpoint))
250 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:260:43: error: cannot infer type of closure parameter 'state' without a type annotation
258 |         session.connection = connection
259 |         
260 |         connection.stateUpdateHandler = { state in
    |                                           `- error: cannot infer type of closure parameter 'state' without a type annotation
261 |             switch state {
262 |             case .ready:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:427:30: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
425 |     private func cleanupSession(_ deviceId: String) {
426 |         networkQueue.async {
427 |             if let session = self.activeSessions[deviceId] {
    |                              `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
428 |                 session.connection?.cancel()
429 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:444:28: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
442 |         networkQueue.async {
443 |             // ÂèñÊ∂àÊâÄÊúâÊ¥ªË∑É‰ºöËØù
444 |             for session in self.activeSessions.values {
    |                            `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
445 |                 session.connection?.cancel()
446 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:285:1: error: cannot declare conformance to 'NSObjectProtocol' in Swift; 'P2PDiscoveryService' should inherit 'NSObject' instead
283 | 
284 | // MARK: - NetServiceDelegate
285 | extension P2PDiscoveryService: NetServiceDelegate {
    | |- error: cannot declare conformance to 'NSObjectProtocol' in Swift; 'P2PDiscoveryService' should inherit 'NSObject' instead
    | `- note: add stubs for conformance
286 |     nonisolated public func netServiceDidPublish(_ sender: NetService) {
287 |         print("üì° ËÆæÂ§áÂπøÊí≠ÊàêÂäü")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:35:14: error: capture of 'self' in a closure that outlives deinit
 33 |     
 34 |     deinit {
 35 |         Task { @MainActor in
    |              `- error: capture of 'self' in a closure that outlives deinit
 36 |             stopAdvertising()
 37 |             stopDiscovery()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:193:22: error: cannot find 'UIApplication' in scope
191 |     private func setupNotifications() {
192 |         NotificationCenter.default.addObserver(
193 |             forName: UIApplication.didEnterBackgroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
194 |             object: nil,
195 |             queue: .main

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:203:22: error: cannot find 'UIApplication' in scope
201 |         
202 |         NotificationCenter.default.addObserver(
203 |             forName: UIApplication.willEnterForegroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
204 |             object: nil,
205 |             queue: .main

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:326:15: error: initializer for conditional binding must have Optional type, not '[String : Data]'
324 |     nonisolated public func netServiceDidResolveAddress(_ sender: NetService) {
325 |         guard let txtData = sender.txtRecordData(),
326 |               let txtRecord = NetService.dictionary(fromTXTRecord: txtData),
    |               `- error: initializer for conditional binding must have Optional type, not '[String : Data]'
327 |               let addresses = sender.addresses else {
328 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:388:31: warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
386 |             
387 |             if result == 0 {
388 |                 let address = String(cString: hostname)
    |                               `- warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
389 |                 // ‰ºòÂÖàËøîÂõûIPv4Âú∞ÂùÄ
390 |                 if !address.contains(":") {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:52:23: error: static property 'defaultServers' is not concurrency-safe because non-'Sendable' type '[STUNServer]' may have shared mutable state [#MutableGlobalVariable]
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: consider making struct 'STUNServer' conform to the 'Sendable' protocol
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
 50 |     
 51 |     /// ÈªòËÆ§STUNÊúçÂä°Âô®ÂàóË°®
 52 |     public static let defaultServers = [
    |                       |- error: static property 'defaultServers' is not concurrency-safe because non-'Sendable' type '[STUNServer]' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'defaultServers' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 53 |         STUNServer(host: "stun.l.google.com"),
 54 |         STUNServer(host: "stun1.l.google.com"),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: error: invalid redeclaration of 'STUNServer'
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- error: invalid redeclaration of 'STUNServer'
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:61:13: error: invalid redeclaration of 'TraversalDifficulty'
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'TraversalDifficulty'
 62 |     case easy = "easy"
 63 |     case medium = "medium"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:97:37: error: 'TraversalDifficulty' is ambiguous for type lookup in this context
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- note: found this candidate
 62 |     case easy = "easy"
 63 |     case medium = "medium"
    :
 95 |     }
 96 |     
 97 |     public var traversalDifficulty: TraversalDifficulty {
    |                                     `- error: 'TraversalDifficulty' is ambiguous for type lookup in this context
 98 |         switch self {
 99 |         case .noNAT, .fullCone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:375:13: note: found this candidate
373 | 
374 | /// Á©øÈÄèÈöæÂ∫¶
375 | public enum TraversalDifficulty: String, CaseIterable {
    |             `- note: found this candidate
376 |     case easy = "ÁÆÄÂçï"
377 |     case medium = "‰∏≠Á≠â"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: error: invalid redeclaration of 'NATType'
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'NATType'
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: error: invalid redeclaration of 'P2PProtocol'
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'P2PProtocol'
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:141:30: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                              `- error: 'STUNServer' is ambiguous for type lookup in this context
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:26: error: 'P2PProtocol' is ambiguous for type lookup in this context
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"
    :
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                          `- error: 'P2PProtocol' is ambiguous for type lookup in this context
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: note: found this candidate
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:151:19: error: 'P2PProtocol' is ambiguous for type lookup in this context
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"
    :
149 |     public init(
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
    |                   `- error: 'P2PProtocol' is ambiguous for type lookup in this context
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
153 |         connectionTimeout: TimeInterval = 30.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: note: found this candidate
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:152:23: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
    |                       `- error: 'STUNServer' is ambiguous for type lookup in this context
153 |         connectionTimeout: TimeInterval = 30.0,
154 |         heartbeatInterval: TimeInterval = 10.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:806:31: error: 'STUNServer' is ambiguous for type lookup in this context
804 |     public init(udpPort: UInt16,
805 |                 tcpPort: UInt16,
806 |                 stunServers: [STUNServer],
    |                               `- error: 'STUNServer' is ambiguous for type lookup in this context
807 |                 connectionTimeout: TimeInterval,
808 |                 heartbeatInterval: TimeInterval,
    :
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Encodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Encodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Encodable' because '[STUNServer]' does not conform to 'Encodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Encodable.encode:2:6: note: protocol requires function 'encode(to:)' with type 'Encodable'
1 | protocol Encodable {
2 | func encode(to encoder: any Encoder) throws}
  |      `- note: protocol requires function 'encode(to:)' with type 'Encodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: invalid redeclaration of 'P2PNetworkConfiguration'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: invalid redeclaration of 'P2PNetworkConfiguration'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:530:30: error: 'FileTransferRequest' is ambiguous for type lookup in this context
528 |     case authResponse(Data)
529 |     case remoteDesktopFrame(Data)
530 |     case fileTransferRequest(FileTransferRequest)
    |                              `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
531 |     case fileTransferData(Data)
532 |     case systemCommand(SystemCommand)
    :
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: error: invalid redeclaration of 'FileTransferRequest'
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- error: invalid redeclaration of 'FileTransferRequest'
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:647:16: error: invalid redeclaration of 'displayName'
 13 |     
 14 |     /// ËÆæÂ§áÁ±ªÂûãÊòæÁ§∫ÂêçÁß∞
 15 |     public var displayName: String {
    |                `- note: 'displayName' previously declared here
 16 |         switch self {
 17 |         case .macOS: return "Mac"
    :
645 | extension P2PDeviceType {
646 |     /// ËÆæÂ§áÁ±ªÂûãÁöÑÊòæÁ§∫ÂêçÁß∞
647 |     public var displayName: String {
    |                `- error: invalid redeclaration of 'displayName'
648 |         switch self {
649 |         case .mac:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:708:16: error: invalid redeclaration of 'bytesReceived'
412 |     @Published public var status: P2PConnectionStatus = .connecting
413 |     @Published public var lastActivity: Date = Date()
414 |     @Published public var bytesReceived: UInt64 = 0
    |                           `- note: 'bytesReceived' previously declared here
415 |     @Published public var bytesSent: UInt64 = 0
416 |     
    :
706 |     
707 |     /// Êé•Êî∂Â≠óËäÇÊï∞
708 |     public var bytesReceived: Int64 {
    |                `- error: invalid redeclaration of 'bytesReceived'
709 |         // Ê®°ÊãüÊé•Êî∂Êï∞ÊçÆ
710 |         return 1024 * 1024 // 1MB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:714:16: error: invalid redeclaration of 'bytesSent'
413 |     @Published public var lastActivity: Date = Date()
414 |     @Published public var bytesReceived: UInt64 = 0
415 |     @Published public var bytesSent: UInt64 = 0
    |                           `- note: 'bytesSent' previously declared here
416 |     
417 |     private var isEncrypted = false
    :
712 |     
713 |     /// ÂèëÈÄÅÂ≠óËäÇÊï∞
714 |     public var bytesSent: Int64 {
    |                `- error: invalid redeclaration of 'bytesSent'
715 |         // Ê®°ÊãüÂèëÈÄÅÊï∞ÊçÆ
716 |         return 512 * 1024 // 512KB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:158:14: error: value of type 'P2PNetworkConfiguration' has no member 'protocol'
156 |     ) {
157 |         self.listenPort = listenPort
158 |         self.protocol = `protocol`
    |              `- error: value of type 'P2PNetworkConfiguration' has no member 'protocol'
159 |         self.stunServers = stunServers
160 |         self.connectionTimeout = connectionTimeout

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:649:15: error: type 'P2PDeviceType' has no member 'mac'
647 |     public var displayName: String {
648 |         switch self {
649 |         case .mac:
    |               `- error: type 'P2PDeviceType' has no member 'mac'
650 |             return "Mac"
651 |         case .iPhone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:651:15: error: type 'P2PDeviceType' has no member 'iPhone'
649 |         case .mac:
650 |             return "Mac"
651 |         case .iPhone:
    |               `- error: type 'P2PDeviceType' has no member 'iPhone'
652 |             return "iPhone"
653 |         case .iPad:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:653:15: error: type 'P2PDeviceType' has no member 'iPad'
651 |         case .iPhone:
652 |             return "iPhone"
653 |         case .iPad:
    |               `- error: type 'P2PDeviceType' has no member 'iPad'
654 |             return "iPad"
655 |         case .windows:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:659:15: error: type 'P2PDeviceType' has no member 'unknown'
657 |         case .android:
658 |             return "Android"
659 |         case .unknown:
    |               `- error: type 'P2PDeviceType' has no member 'unknown'
660 |             return "Êú™Áü•ËÆæÂ§á"
661 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:681:18: error: extra arguments at positions #1, #3, #6 in call
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name
    :
679 |     /// ÂàõÂª∫Ê®°ÊãüËÆæÂ§áÁî®‰∫éÈ¢ÑËßà
680 |     public static var mockDevice: P2PDevice {
681 |         P2PDevice(
    |                  `- error: extra arguments at positions #1, #3, #6 in call
682 |             deviceId: "mock-device-id",
683 |             name: "ÊµãËØïËÆæÂ§á",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:681:18: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name
    :
679 |     /// ÂàõÂª∫Ê®°ÊãüËÆæÂ§áÁî®‰∫éÈ¢ÑËßà
680 |     public static var mockDevice: P2PDevice {
681 |         P2PDevice(
    |                  `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
682 |             deviceId: "mock-device-id",
683 |             name: "ÊµãËØïËÆæÂ§á",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:684:26: error: cannot infer contextual base in reference to member 'mac'
682 |             deviceId: "mock-device-id",
683 |             name: "ÊµãËØïËÆæÂ§á",
684 |             deviceType: .mac,
    |                          `- error: cannot infer contextual base in reference to member 'mac'
685 |             ipAddress: "192.168.1.100",
686 |             port: 8080,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:721:36: error: extra arguments at positions #1, #5 in call
719 |     /// ËøûÊé•Ë¥®Èáè
720 |     public var quality: P2PConnectionQuality {
721 |         return P2PConnectionQuality(
    |                                    `- error: extra arguments at positions #1, #5 in call
722 |             signalStrength: 0.8,
723 |             latency: latency,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:724:33: error: missing argument for parameter 'stabilityScore' in call
722 |             signalStrength: 0.8,
723 |             latency: latency,
724 |             bandwidth: bandwidth,
    |                                 `- error: missing argument for parameter 'stabilityScore' in call
725 |             packetLoss: 0.01,
726 |             level: .good

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:724:24: error: cannot convert value of type 'Double' to expected argument type 'UInt64'
722 |             signalStrength: 0.8,
723 |             latency: latency,
724 |             bandwidth: bandwidth,
    |                        `- error: cannot convert value of type 'Double' to expected argument type 'UInt64'
725 |             packetLoss: 0.01,
726 |             level: .good

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:726:21: error: cannot infer contextual base in reference to member 'good'
724 |             bandwidth: bandwidth,
725 |             packetLoss: 0.01,
726 |             level: .good
    |                     `- error: cannot infer contextual base in reference to member 'good'
727 |         )
728 |     }

[#DeprecatedDeclaration]: <https://docs.swift.org/compiler/documentation/diagnostics/deprecated-declaration>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[148/160] Compiling SkyBridgeCore NATTraversalManager.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:16:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 14 |     // MARK: - ÁßÅÊúâÂ±ûÊÄß
 15 |     private let stunClient: STUNClient?
 16 |     private let configuration: P2PNetworkConfiguration
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 17 |     private let networkQueue: DispatchQueue
 18 |     private let coordinationQueue: DispatchQueue

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: note: found this candidate
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:35:57: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 33 |     // MARK: - ÂàùÂßãÂåñ
 34 |     
 35 |     public init(stunClient: STUNClient?, configuration: P2PNetworkConfiguration) {
    |                                                         `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 36 |         self.stunClient = stunClient
 37 |         self.configuration = configuration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: note: found this candidate
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:563:25: error: 'NATType' is ambiguous for type lookup in this context
561 |     public let supportedMethods: [TraversalMethod]
562 |     /// NATÁ±ªÂûã
563 |     public let natType: NATType
    |                         `- error: 'NATType' is ambiguous for type lookup in this context
564 |     /// ÂÖ¨ÁΩëÁ´ØÁÇπ
565 |     public let publicEndpoint: NWEndpoint?

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:347:13: note: found this candidate
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:571:26: error: 'NATType' is ambiguous for type lookup in this context
569 |     public init(level: TraversalCapabilityLevel,
570 |                 supportedMethods: [TraversalMethod],
571 |                 natType: NATType,
    |                          `- error: 'NATType' is ambiguous for type lookup in this context
572 |                 publicEndpoint: NWEndpoint?,
573 |                 estimatedSuccessRate: Double) {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:347:13: note: found this candidate
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:69:13: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
 67 |         
 68 |         networkQueue.async {
 69 |             self.initiateHolePunching(to: device, completion: completion)
    |             `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
 70 |         }
 71 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:69:43: warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 67 |         
 68 |         networkQueue.async {
 69 |             self.initiateHolePunching(to: device, completion: completion)
    |                                           `- warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 70 |         }
 71 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:258:15: note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
256 | 
257 | // MARK: - P2PËÆæÂ§á
258 | public struct P2PDevice: Codable, Identifiable, Hashable {
    |               `- note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
259 |     public let id: String
260 |     public let name: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:69:63: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
 67 |         
 68 |         networkQueue.async {
 69 |             self.initiateHolePunching(to: device, completion: completion)
    |                                                               |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                                                               `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 70 |         }
 71 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:13: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |             `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |         }
 83 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:50: warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |                                                  `- warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |         }
 83 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:258:15: note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
256 | 
257 | // MARK: - P2PËÆæÂ§á
258 | public struct P2PDevice: Codable, Identifiable, Hashable {
    |               `- note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
259 |     public let id: String
260 |     public let name: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:67: warning: capture of 'request' with non-Sendable type 'HolePunchingRequest' in a '@Sendable' closure [#SendableClosureCaptures]
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |                                                                   `- warning: capture of 'request' with non-Sendable type 'HolePunchingRequest' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |         }
 83 |     }
    :
518 | 
519 | /// ÊâìÊ¥ûËØ∑Ê±Ç
520 | public struct HolePunchingRequest {
    |               `- note: consider making struct 'HolePunchingRequest' conform to the 'Sendable' protocol
521 |     /// ‰ºöËØùID
522 |     public let sessionId: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:88: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |                                                                                        |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                                                                                        `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 82 |         }
 83 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:90:13: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
 88 |         
 89 |         networkQueue.async {
 90 |             self.cleanupSession(deviceId)
    |             `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
 91 |         }
 92 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:66:61: error: 'NATType' is ambiguous for type lookup in this context
 64 |     
 65 |     /// Ê£ÄÊµãNATÁ±ªÂûã
 66 |     public func detectNATType(completion: @escaping (Result<NATType, STUNError>) -> Void) {
    |                                                             `- error: 'NATType' is ambiguous for type lookup in this context
 67 |         print("üîç ÂºÄÂßãÊ£ÄÊµãNATÁ±ªÂûã")
 68 |         
    :
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:146:48: error: cannot infer type of closure parameter 'result' without a type annotation
144 |         print("üîç ÂºÄÂßãNATÁ±ªÂûãÊ£ÄÊµã")
145 |         
146 |         stunClient.detectNATType { [weak self] result in
    |                                                `- error: cannot infer type of closure parameter 'result' without a type annotation
147 |             switch result {
148 |             case .success(let natType):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:248:57: error: value of type 'P2PDevice' has no member 'endpoints'
246 |         print("üéØ ÊâßË°åÁõ¥Êé•UDPÊâìÊ¥û")
247 |         
248 |         guard let targetEndpoint = session.targetDevice.endpoints.first else {
    |                                                         `- error: value of type 'P2PDevice' has no member 'endpoints'
249 |             completion(.failure(.noValidEndpoint))
250 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:260:43: error: cannot infer type of closure parameter 'state' without a type annotation
258 |         session.connection = connection
259 |         
260 |         connection.stateUpdateHandler = { state in
    |                                           `- error: cannot infer type of closure parameter 'state' without a type annotation
261 |             switch state {
262 |             case .ready:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:427:30: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
425 |     private func cleanupSession(_ deviceId: String) {
426 |         networkQueue.async {
427 |             if let session = self.activeSessions[deviceId] {
    |                              `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
428 |                 session.connection?.cancel()
429 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:444:28: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
442 |         networkQueue.async {
443 |             // ÂèñÊ∂àÊâÄÊúâÊ¥ªË∑É‰ºöËØù
444 |             for session in self.activeSessions.values {
    |                            `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
445 |                 session.connection?.cancel()
446 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:285:1: error: cannot declare conformance to 'NSObjectProtocol' in Swift; 'P2PDiscoveryService' should inherit 'NSObject' instead
283 | 
284 | // MARK: - NetServiceDelegate
285 | extension P2PDiscoveryService: NetServiceDelegate {
    | |- error: cannot declare conformance to 'NSObjectProtocol' in Swift; 'P2PDiscoveryService' should inherit 'NSObject' instead
    | `- note: add stubs for conformance
286 |     nonisolated public func netServiceDidPublish(_ sender: NetService) {
287 |         print("üì° ËÆæÂ§áÂπøÊí≠ÊàêÂäü")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:35:14: error: capture of 'self' in a closure that outlives deinit
 33 |     
 34 |     deinit {
 35 |         Task { @MainActor in
    |              `- error: capture of 'self' in a closure that outlives deinit
 36 |             stopAdvertising()
 37 |             stopDiscovery()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:193:22: error: cannot find 'UIApplication' in scope
191 |     private func setupNotifications() {
192 |         NotificationCenter.default.addObserver(
193 |             forName: UIApplication.didEnterBackgroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
194 |             object: nil,
195 |             queue: .main

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:203:22: error: cannot find 'UIApplication' in scope
201 |         
202 |         NotificationCenter.default.addObserver(
203 |             forName: UIApplication.willEnterForegroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
204 |             object: nil,
205 |             queue: .main

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:326:15: error: initializer for conditional binding must have Optional type, not '[String : Data]'
324 |     nonisolated public func netServiceDidResolveAddress(_ sender: NetService) {
325 |         guard let txtData = sender.txtRecordData(),
326 |               let txtRecord = NetService.dictionary(fromTXTRecord: txtData),
    |               `- error: initializer for conditional binding must have Optional type, not '[String : Data]'
327 |               let addresses = sender.addresses else {
328 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:388:31: warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
386 |             
387 |             if result == 0 {
388 |                 let address = String(cString: hostname)
    |                               `- warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
389 |                 // ‰ºòÂÖàËøîÂõûIPv4Âú∞ÂùÄ
390 |                 if !address.contains(":") {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:52:23: error: static property 'defaultServers' is not concurrency-safe because non-'Sendable' type '[STUNServer]' may have shared mutable state [#MutableGlobalVariable]
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: consider making struct 'STUNServer' conform to the 'Sendable' protocol
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
 50 |     
 51 |     /// ÈªòËÆ§STUNÊúçÂä°Âô®ÂàóË°®
 52 |     public static let defaultServers = [
    |                       |- error: static property 'defaultServers' is not concurrency-safe because non-'Sendable' type '[STUNServer]' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'defaultServers' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 53 |         STUNServer(host: "stun.l.google.com"),
 54 |         STUNServer(host: "stun1.l.google.com"),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: error: invalid redeclaration of 'STUNServer'
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- error: invalid redeclaration of 'STUNServer'
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:61:13: error: invalid redeclaration of 'TraversalDifficulty'
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'TraversalDifficulty'
 62 |     case easy = "easy"
 63 |     case medium = "medium"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:97:37: error: 'TraversalDifficulty' is ambiguous for type lookup in this context
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- note: found this candidate
 62 |     case easy = "easy"
 63 |     case medium = "medium"
    :
 95 |     }
 96 |     
 97 |     public var traversalDifficulty: TraversalDifficulty {
    |                                     `- error: 'TraversalDifficulty' is ambiguous for type lookup in this context
 98 |         switch self {
 99 |         case .noNAT, .fullCone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:375:13: note: found this candidate
373 | 
374 | /// Á©øÈÄèÈöæÂ∫¶
375 | public enum TraversalDifficulty: String, CaseIterable {
    |             `- note: found this candidate
376 |     case easy = "ÁÆÄÂçï"
377 |     case medium = "‰∏≠Á≠â"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: error: invalid redeclaration of 'NATType'
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'NATType'
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: error: invalid redeclaration of 'P2PProtocol'
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'P2PProtocol'
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:141:30: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                              `- error: 'STUNServer' is ambiguous for type lookup in this context
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:26: error: 'P2PProtocol' is ambiguous for type lookup in this context
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"
    :
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                          `- error: 'P2PProtocol' is ambiguous for type lookup in this context
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: note: found this candidate
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:151:19: error: 'P2PProtocol' is ambiguous for type lookup in this context
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"
    :
149 |     public init(
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
    |                   `- error: 'P2PProtocol' is ambiguous for type lookup in this context
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
153 |         connectionTimeout: TimeInterval = 30.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: note: found this candidate
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:152:23: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
    |                       `- error: 'STUNServer' is ambiguous for type lookup in this context
153 |         connectionTimeout: TimeInterval = 30.0,
154 |         heartbeatInterval: TimeInterval = 10.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:806:31: error: 'STUNServer' is ambiguous for type lookup in this context
804 |     public init(udpPort: UInt16,
805 |                 tcpPort: UInt16,
806 |                 stunServers: [STUNServer],
    |                               `- error: 'STUNServer' is ambiguous for type lookup in this context
807 |                 connectionTimeout: TimeInterval,
808 |                 heartbeatInterval: TimeInterval,
    :
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Encodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Encodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Encodable' because '[STUNServer]' does not conform to 'Encodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Encodable.encode:2:6: note: protocol requires function 'encode(to:)' with type 'Encodable'
1 | protocol Encodable {
2 | func encode(to encoder: any Encoder) throws}
  |      `- note: protocol requires function 'encode(to:)' with type 'Encodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: invalid redeclaration of 'P2PNetworkConfiguration'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: invalid redeclaration of 'P2PNetworkConfiguration'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:530:30: error: 'FileTransferRequest' is ambiguous for type lookup in this context
528 |     case authResponse(Data)
529 |     case remoteDesktopFrame(Data)
530 |     case fileTransferRequest(FileTransferRequest)
    |                              `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
531 |     case fileTransferData(Data)
532 |     case systemCommand(SystemCommand)
    :
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: error: invalid redeclaration of 'FileTransferRequest'
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- error: invalid redeclaration of 'FileTransferRequest'
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:647:16: error: invalid redeclaration of 'displayName'
 13 |     
 14 |     /// ËÆæÂ§áÁ±ªÂûãÊòæÁ§∫ÂêçÁß∞
 15 |     public var displayName: String {
    |                `- note: 'displayName' previously declared here
 16 |         switch self {
 17 |         case .macOS: return "Mac"
    :
645 | extension P2PDeviceType {
646 |     /// ËÆæÂ§áÁ±ªÂûãÁöÑÊòæÁ§∫ÂêçÁß∞
647 |     public var displayName: String {
    |                `- error: invalid redeclaration of 'displayName'
648 |         switch self {
649 |         case .mac:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:708:16: error: invalid redeclaration of 'bytesReceived'
412 |     @Published public var status: P2PConnectionStatus = .connecting
413 |     @Published public var lastActivity: Date = Date()
414 |     @Published public var bytesReceived: UInt64 = 0
    |                           `- note: 'bytesReceived' previously declared here
415 |     @Published public var bytesSent: UInt64 = 0
416 |     
    :
706 |     
707 |     /// Êé•Êî∂Â≠óËäÇÊï∞
708 |     public var bytesReceived: Int64 {
    |                `- error: invalid redeclaration of 'bytesReceived'
709 |         // Ê®°ÊãüÊé•Êî∂Êï∞ÊçÆ
710 |         return 1024 * 1024 // 1MB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:714:16: error: invalid redeclaration of 'bytesSent'
413 |     @Published public var lastActivity: Date = Date()
414 |     @Published public var bytesReceived: UInt64 = 0
415 |     @Published public var bytesSent: UInt64 = 0
    |                           `- note: 'bytesSent' previously declared here
416 |     
417 |     private var isEncrypted = false
    :
712 |     
713 |     /// ÂèëÈÄÅÂ≠óËäÇÊï∞
714 |     public var bytesSent: Int64 {
    |                `- error: invalid redeclaration of 'bytesSent'
715 |         // Ê®°ÊãüÂèëÈÄÅÊï∞ÊçÆ
716 |         return 512 * 1024 // 512KB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:158:14: error: value of type 'P2PNetworkConfiguration' has no member 'protocol'
156 |     ) {
157 |         self.listenPort = listenPort
158 |         self.protocol = `protocol`
    |              `- error: value of type 'P2PNetworkConfiguration' has no member 'protocol'
159 |         self.stunServers = stunServers
160 |         self.connectionTimeout = connectionTimeout

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:649:15: error: type 'P2PDeviceType' has no member 'mac'
647 |     public var displayName: String {
648 |         switch self {
649 |         case .mac:
    |               `- error: type 'P2PDeviceType' has no member 'mac'
650 |             return "Mac"
651 |         case .iPhone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:651:15: error: type 'P2PDeviceType' has no member 'iPhone'
649 |         case .mac:
650 |             return "Mac"
651 |         case .iPhone:
    |               `- error: type 'P2PDeviceType' has no member 'iPhone'
652 |             return "iPhone"
653 |         case .iPad:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:653:15: error: type 'P2PDeviceType' has no member 'iPad'
651 |         case .iPhone:
652 |             return "iPhone"
653 |         case .iPad:
    |               `- error: type 'P2PDeviceType' has no member 'iPad'
654 |             return "iPad"
655 |         case .windows:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:659:15: error: type 'P2PDeviceType' has no member 'unknown'
657 |         case .android:
658 |             return "Android"
659 |         case .unknown:
    |               `- error: type 'P2PDeviceType' has no member 'unknown'
660 |             return "Êú™Áü•ËÆæÂ§á"
661 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:681:18: error: extra arguments at positions #1, #3, #6 in call
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name
    :
679 |     /// ÂàõÂª∫Ê®°ÊãüËÆæÂ§áÁî®‰∫éÈ¢ÑËßà
680 |     public static var mockDevice: P2PDevice {
681 |         P2PDevice(
    |                  `- error: extra arguments at positions #1, #3, #6 in call
682 |             deviceId: "mock-device-id",
683 |             name: "ÊµãËØïËÆæÂ§á",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:681:18: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name
    :
679 |     /// ÂàõÂª∫Ê®°ÊãüËÆæÂ§áÁî®‰∫éÈ¢ÑËßà
680 |     public static var mockDevice: P2PDevice {
681 |         P2PDevice(
    |                  `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
682 |             deviceId: "mock-device-id",
683 |             name: "ÊµãËØïËÆæÂ§á",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:684:26: error: cannot infer contextual base in reference to member 'mac'
682 |             deviceId: "mock-device-id",
683 |             name: "ÊµãËØïËÆæÂ§á",
684 |             deviceType: .mac,
    |                          `- error: cannot infer contextual base in reference to member 'mac'
685 |             ipAddress: "192.168.1.100",
686 |             port: 8080,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:721:36: error: extra arguments at positions #1, #5 in call
719 |     /// ËøûÊé•Ë¥®Èáè
720 |     public var quality: P2PConnectionQuality {
721 |         return P2PConnectionQuality(
    |                                    `- error: extra arguments at positions #1, #5 in call
722 |             signalStrength: 0.8,
723 |             latency: latency,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:724:33: error: missing argument for parameter 'stabilityScore' in call
722 |             signalStrength: 0.8,
723 |             latency: latency,
724 |             bandwidth: bandwidth,
    |                                 `- error: missing argument for parameter 'stabilityScore' in call
725 |             packetLoss: 0.01,
726 |             level: .good

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:724:24: error: cannot convert value of type 'Double' to expected argument type 'UInt64'
722 |             signalStrength: 0.8,
723 |             latency: latency,
724 |             bandwidth: bandwidth,
    |                        `- error: cannot convert value of type 'Double' to expected argument type 'UInt64'
725 |             packetLoss: 0.01,
726 |             level: .good

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:726:21: error: cannot infer contextual base in reference to member 'good'
724 |             bandwidth: bandwidth,
725 |             packetLoss: 0.01,
726 |             level: .good
    |                     `- error: cannot infer contextual base in reference to member 'good'
727 |         )
728 |     }

[#DeprecatedDeclaration]: <https://docs.swift.org/compiler/documentation/diagnostics/deprecated-declaration>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[149/160] Compiling SkyBridgeCore P2PDiscoveryService.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:16:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 14 |     // MARK: - ÁßÅÊúâÂ±ûÊÄß
 15 |     private let stunClient: STUNClient?
 16 |     private let configuration: P2PNetworkConfiguration
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 17 |     private let networkQueue: DispatchQueue
 18 |     private let coordinationQueue: DispatchQueue

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: note: found this candidate
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:35:57: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 33 |     // MARK: - ÂàùÂßãÂåñ
 34 |     
 35 |     public init(stunClient: STUNClient?, configuration: P2PNetworkConfiguration) {
    |                                                         `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 36 |         self.stunClient = stunClient
 37 |         self.configuration = configuration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: note: found this candidate
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:563:25: error: 'NATType' is ambiguous for type lookup in this context
561 |     public let supportedMethods: [TraversalMethod]
562 |     /// NATÁ±ªÂûã
563 |     public let natType: NATType
    |                         `- error: 'NATType' is ambiguous for type lookup in this context
564 |     /// ÂÖ¨ÁΩëÁ´ØÁÇπ
565 |     public let publicEndpoint: NWEndpoint?

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:347:13: note: found this candidate
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:571:26: error: 'NATType' is ambiguous for type lookup in this context
569 |     public init(level: TraversalCapabilityLevel,
570 |                 supportedMethods: [TraversalMethod],
571 |                 natType: NATType,
    |                          `- error: 'NATType' is ambiguous for type lookup in this context
572 |                 publicEndpoint: NWEndpoint?,
573 |                 estimatedSuccessRate: Double) {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:347:13: note: found this candidate
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:69:13: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
 67 |         
 68 |         networkQueue.async {
 69 |             self.initiateHolePunching(to: device, completion: completion)
    |             `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
 70 |         }
 71 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:69:43: warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 67 |         
 68 |         networkQueue.async {
 69 |             self.initiateHolePunching(to: device, completion: completion)
    |                                           `- warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 70 |         }
 71 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:258:15: note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
256 | 
257 | // MARK: - P2PËÆæÂ§á
258 | public struct P2PDevice: Codable, Identifiable, Hashable {
    |               `- note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
259 |     public let id: String
260 |     public let name: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:69:63: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
 67 |         
 68 |         networkQueue.async {
 69 |             self.initiateHolePunching(to: device, completion: completion)
    |                                                               |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                                                               `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 70 |         }
 71 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:13: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |             `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |         }
 83 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:50: warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |                                                  `- warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |         }
 83 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:258:15: note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
256 | 
257 | // MARK: - P2PËÆæÂ§á
258 | public struct P2PDevice: Codable, Identifiable, Hashable {
    |               `- note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
259 |     public let id: String
260 |     public let name: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:67: warning: capture of 'request' with non-Sendable type 'HolePunchingRequest' in a '@Sendable' closure [#SendableClosureCaptures]
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |                                                                   `- warning: capture of 'request' with non-Sendable type 'HolePunchingRequest' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |         }
 83 |     }
    :
518 | 
519 | /// ÊâìÊ¥ûËØ∑Ê±Ç
520 | public struct HolePunchingRequest {
    |               `- note: consider making struct 'HolePunchingRequest' conform to the 'Sendable' protocol
521 |     /// ‰ºöËØùID
522 |     public let sessionId: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:88: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |                                                                                        |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                                                                                        `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 82 |         }
 83 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:90:13: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
 88 |         
 89 |         networkQueue.async {
 90 |             self.cleanupSession(deviceId)
    |             `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
 91 |         }
 92 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:66:61: error: 'NATType' is ambiguous for type lookup in this context
 64 |     
 65 |     /// Ê£ÄÊµãNATÁ±ªÂûã
 66 |     public func detectNATType(completion: @escaping (Result<NATType, STUNError>) -> Void) {
    |                                                             `- error: 'NATType' is ambiguous for type lookup in this context
 67 |         print("üîç ÂºÄÂßãÊ£ÄÊµãNATÁ±ªÂûã")
 68 |         
    :
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:146:48: error: cannot infer type of closure parameter 'result' without a type annotation
144 |         print("üîç ÂºÄÂßãNATÁ±ªÂûãÊ£ÄÊµã")
145 |         
146 |         stunClient.detectNATType { [weak self] result in
    |                                                `- error: cannot infer type of closure parameter 'result' without a type annotation
147 |             switch result {
148 |             case .success(let natType):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:248:57: error: value of type 'P2PDevice' has no member 'endpoints'
246 |         print("üéØ ÊâßË°åÁõ¥Êé•UDPÊâìÊ¥û")
247 |         
248 |         guard let targetEndpoint = session.targetDevice.endpoints.first else {
    |                                                         `- error: value of type 'P2PDevice' has no member 'endpoints'
249 |             completion(.failure(.noValidEndpoint))
250 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:260:43: error: cannot infer type of closure parameter 'state' without a type annotation
258 |         session.connection = connection
259 |         
260 |         connection.stateUpdateHandler = { state in
    |                                           `- error: cannot infer type of closure parameter 'state' without a type annotation
261 |             switch state {
262 |             case .ready:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:427:30: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
425 |     private func cleanupSession(_ deviceId: String) {
426 |         networkQueue.async {
427 |             if let session = self.activeSessions[deviceId] {
    |                              `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
428 |                 session.connection?.cancel()
429 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:444:28: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
442 |         networkQueue.async {
443 |             // ÂèñÊ∂àÊâÄÊúâÊ¥ªË∑É‰ºöËØù
444 |             for session in self.activeSessions.values {
    |                            `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
445 |                 session.connection?.cancel()
446 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:285:1: error: cannot declare conformance to 'NSObjectProtocol' in Swift; 'P2PDiscoveryService' should inherit 'NSObject' instead
283 | 
284 | // MARK: - NetServiceDelegate
285 | extension P2PDiscoveryService: NetServiceDelegate {
    | |- error: cannot declare conformance to 'NSObjectProtocol' in Swift; 'P2PDiscoveryService' should inherit 'NSObject' instead
    | `- note: add stubs for conformance
286 |     nonisolated public func netServiceDidPublish(_ sender: NetService) {
287 |         print("üì° ËÆæÂ§áÂπøÊí≠ÊàêÂäü")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:35:14: error: capture of 'self' in a closure that outlives deinit
 33 |     
 34 |     deinit {
 35 |         Task { @MainActor in
    |              `- error: capture of 'self' in a closure that outlives deinit
 36 |             stopAdvertising()
 37 |             stopDiscovery()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:193:22: error: cannot find 'UIApplication' in scope
191 |     private func setupNotifications() {
192 |         NotificationCenter.default.addObserver(
193 |             forName: UIApplication.didEnterBackgroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
194 |             object: nil,
195 |             queue: .main

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:203:22: error: cannot find 'UIApplication' in scope
201 |         
202 |         NotificationCenter.default.addObserver(
203 |             forName: UIApplication.willEnterForegroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
204 |             object: nil,
205 |             queue: .main

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:326:15: error: initializer for conditional binding must have Optional type, not '[String : Data]'
324 |     nonisolated public func netServiceDidResolveAddress(_ sender: NetService) {
325 |         guard let txtData = sender.txtRecordData(),
326 |               let txtRecord = NetService.dictionary(fromTXTRecord: txtData),
    |               `- error: initializer for conditional binding must have Optional type, not '[String : Data]'
327 |               let addresses = sender.addresses else {
328 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:388:31: warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
386 |             
387 |             if result == 0 {
388 |                 let address = String(cString: hostname)
    |                               `- warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
389 |                 // ‰ºòÂÖàËøîÂõûIPv4Âú∞ÂùÄ
390 |                 if !address.contains(":") {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:52:23: error: static property 'defaultServers' is not concurrency-safe because non-'Sendable' type '[STUNServer]' may have shared mutable state [#MutableGlobalVariable]
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: consider making struct 'STUNServer' conform to the 'Sendable' protocol
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
 50 |     
 51 |     /// ÈªòËÆ§STUNÊúçÂä°Âô®ÂàóË°®
 52 |     public static let defaultServers = [
    |                       |- error: static property 'defaultServers' is not concurrency-safe because non-'Sendable' type '[STUNServer]' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'defaultServers' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 53 |         STUNServer(host: "stun.l.google.com"),
 54 |         STUNServer(host: "stun1.l.google.com"),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: error: invalid redeclaration of 'STUNServer'
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- error: invalid redeclaration of 'STUNServer'
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:61:13: error: invalid redeclaration of 'TraversalDifficulty'
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'TraversalDifficulty'
 62 |     case easy = "easy"
 63 |     case medium = "medium"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:97:37: error: 'TraversalDifficulty' is ambiguous for type lookup in this context
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- note: found this candidate
 62 |     case easy = "easy"
 63 |     case medium = "medium"
    :
 95 |     }
 96 |     
 97 |     public var traversalDifficulty: TraversalDifficulty {
    |                                     `- error: 'TraversalDifficulty' is ambiguous for type lookup in this context
 98 |         switch self {
 99 |         case .noNAT, .fullCone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:375:13: note: found this candidate
373 | 
374 | /// Á©øÈÄèÈöæÂ∫¶
375 | public enum TraversalDifficulty: String, CaseIterable {
    |             `- note: found this candidate
376 |     case easy = "ÁÆÄÂçï"
377 |     case medium = "‰∏≠Á≠â"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: error: invalid redeclaration of 'NATType'
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'NATType'
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: error: invalid redeclaration of 'P2PProtocol'
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'P2PProtocol'
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:141:30: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                              `- error: 'STUNServer' is ambiguous for type lookup in this context
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:26: error: 'P2PProtocol' is ambiguous for type lookup in this context
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"
    :
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                          `- error: 'P2PProtocol' is ambiguous for type lookup in this context
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: note: found this candidate
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:151:19: error: 'P2PProtocol' is ambiguous for type lookup in this context
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"
    :
149 |     public init(
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
    |                   `- error: 'P2PProtocol' is ambiguous for type lookup in this context
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
153 |         connectionTimeout: TimeInterval = 30.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: note: found this candidate
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:152:23: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
    |                       `- error: 'STUNServer' is ambiguous for type lookup in this context
153 |         connectionTimeout: TimeInterval = 30.0,
154 |         heartbeatInterval: TimeInterval = 10.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:806:31: error: 'STUNServer' is ambiguous for type lookup in this context
804 |     public init(udpPort: UInt16,
805 |                 tcpPort: UInt16,
806 |                 stunServers: [STUNServer],
    |                               `- error: 'STUNServer' is ambiguous for type lookup in this context
807 |                 connectionTimeout: TimeInterval,
808 |                 heartbeatInterval: TimeInterval,
    :
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Encodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Encodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Encodable' because '[STUNServer]' does not conform to 'Encodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Encodable.encode:2:6: note: protocol requires function 'encode(to:)' with type 'Encodable'
1 | protocol Encodable {
2 | func encode(to encoder: any Encoder) throws}
  |      `- note: protocol requires function 'encode(to:)' with type 'Encodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: invalid redeclaration of 'P2PNetworkConfiguration'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: invalid redeclaration of 'P2PNetworkConfiguration'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:530:30: error: 'FileTransferRequest' is ambiguous for type lookup in this context
528 |     case authResponse(Data)
529 |     case remoteDesktopFrame(Data)
530 |     case fileTransferRequest(FileTransferRequest)
    |                              `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
531 |     case fileTransferData(Data)
532 |     case systemCommand(SystemCommand)
    :
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: error: invalid redeclaration of 'FileTransferRequest'
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- error: invalid redeclaration of 'FileTransferRequest'
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:647:16: error: invalid redeclaration of 'displayName'
 13 |     
 14 |     /// ËÆæÂ§áÁ±ªÂûãÊòæÁ§∫ÂêçÁß∞
 15 |     public var displayName: String {
    |                `- note: 'displayName' previously declared here
 16 |         switch self {
 17 |         case .macOS: return "Mac"
    :
645 | extension P2PDeviceType {
646 |     /// ËÆæÂ§áÁ±ªÂûãÁöÑÊòæÁ§∫ÂêçÁß∞
647 |     public var displayName: String {
    |                `- error: invalid redeclaration of 'displayName'
648 |         switch self {
649 |         case .mac:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:708:16: error: invalid redeclaration of 'bytesReceived'
412 |     @Published public var status: P2PConnectionStatus = .connecting
413 |     @Published public var lastActivity: Date = Date()
414 |     @Published public var bytesReceived: UInt64 = 0
    |                           `- note: 'bytesReceived' previously declared here
415 |     @Published public var bytesSent: UInt64 = 0
416 |     
    :
706 |     
707 |     /// Êé•Êî∂Â≠óËäÇÊï∞
708 |     public var bytesReceived: Int64 {
    |                `- error: invalid redeclaration of 'bytesReceived'
709 |         // Ê®°ÊãüÊé•Êî∂Êï∞ÊçÆ
710 |         return 1024 * 1024 // 1MB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:714:16: error: invalid redeclaration of 'bytesSent'
413 |     @Published public var lastActivity: Date = Date()
414 |     @Published public var bytesReceived: UInt64 = 0
415 |     @Published public var bytesSent: UInt64 = 0
    |                           `- note: 'bytesSent' previously declared here
416 |     
417 |     private var isEncrypted = false
    :
712 |     
713 |     /// ÂèëÈÄÅÂ≠óËäÇÊï∞
714 |     public var bytesSent: Int64 {
    |                `- error: invalid redeclaration of 'bytesSent'
715 |         // Ê®°ÊãüÂèëÈÄÅÊï∞ÊçÆ
716 |         return 512 * 1024 // 512KB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:158:14: error: value of type 'P2PNetworkConfiguration' has no member 'protocol'
156 |     ) {
157 |         self.listenPort = listenPort
158 |         self.protocol = `protocol`
    |              `- error: value of type 'P2PNetworkConfiguration' has no member 'protocol'
159 |         self.stunServers = stunServers
160 |         self.connectionTimeout = connectionTimeout

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:649:15: error: type 'P2PDeviceType' has no member 'mac'
647 |     public var displayName: String {
648 |         switch self {
649 |         case .mac:
    |               `- error: type 'P2PDeviceType' has no member 'mac'
650 |             return "Mac"
651 |         case .iPhone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:651:15: error: type 'P2PDeviceType' has no member 'iPhone'
649 |         case .mac:
650 |             return "Mac"
651 |         case .iPhone:
    |               `- error: type 'P2PDeviceType' has no member 'iPhone'
652 |             return "iPhone"
653 |         case .iPad:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:653:15: error: type 'P2PDeviceType' has no member 'iPad'
651 |         case .iPhone:
652 |             return "iPhone"
653 |         case .iPad:
    |               `- error: type 'P2PDeviceType' has no member 'iPad'
654 |             return "iPad"
655 |         case .windows:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:659:15: error: type 'P2PDeviceType' has no member 'unknown'
657 |         case .android:
658 |             return "Android"
659 |         case .unknown:
    |               `- error: type 'P2PDeviceType' has no member 'unknown'
660 |             return "Êú™Áü•ËÆæÂ§á"
661 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:681:18: error: extra arguments at positions #1, #3, #6 in call
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name
    :
679 |     /// ÂàõÂª∫Ê®°ÊãüËÆæÂ§áÁî®‰∫éÈ¢ÑËßà
680 |     public static var mockDevice: P2PDevice {
681 |         P2PDevice(
    |                  `- error: extra arguments at positions #1, #3, #6 in call
682 |             deviceId: "mock-device-id",
683 |             name: "ÊµãËØïËÆæÂ§á",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:681:18: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name
    :
679 |     /// ÂàõÂª∫Ê®°ÊãüËÆæÂ§áÁî®‰∫éÈ¢ÑËßà
680 |     public static var mockDevice: P2PDevice {
681 |         P2PDevice(
    |                  `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
682 |             deviceId: "mock-device-id",
683 |             name: "ÊµãËØïËÆæÂ§á",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:684:26: error: cannot infer contextual base in reference to member 'mac'
682 |             deviceId: "mock-device-id",
683 |             name: "ÊµãËØïËÆæÂ§á",
684 |             deviceType: .mac,
    |                          `- error: cannot infer contextual base in reference to member 'mac'
685 |             ipAddress: "192.168.1.100",
686 |             port: 8080,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:721:36: error: extra arguments at positions #1, #5 in call
719 |     /// ËøûÊé•Ë¥®Èáè
720 |     public var quality: P2PConnectionQuality {
721 |         return P2PConnectionQuality(
    |                                    `- error: extra arguments at positions #1, #5 in call
722 |             signalStrength: 0.8,
723 |             latency: latency,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:724:33: error: missing argument for parameter 'stabilityScore' in call
722 |             signalStrength: 0.8,
723 |             latency: latency,
724 |             bandwidth: bandwidth,
    |                                 `- error: missing argument for parameter 'stabilityScore' in call
725 |             packetLoss: 0.01,
726 |             level: .good

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:724:24: error: cannot convert value of type 'Double' to expected argument type 'UInt64'
722 |             signalStrength: 0.8,
723 |             latency: latency,
724 |             bandwidth: bandwidth,
    |                        `- error: cannot convert value of type 'Double' to expected argument type 'UInt64'
725 |             packetLoss: 0.01,
726 |             level: .good

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:726:21: error: cannot infer contextual base in reference to member 'good'
724 |             bandwidth: bandwidth,
725 |             packetLoss: 0.01,
726 |             level: .good
    |                     `- error: cannot infer contextual base in reference to member 'good'
727 |         )
728 |     }

[#DeprecatedDeclaration]: <https://docs.swift.org/compiler/documentation/diagnostics/deprecated-declaration>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[150/160] Compiling SkyBridgeCore P2PModels.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:16:32: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 14 |     // MARK: - ÁßÅÊúâÂ±ûÊÄß
 15 |     private let stunClient: STUNClient?
 16 |     private let configuration: P2PNetworkConfiguration
    |                                `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 17 |     private let networkQueue: DispatchQueue
 18 |     private let coordinationQueue: DispatchQueue

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: note: found this candidate
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:35:57: error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 33 |     // MARK: - ÂàùÂßãÂåñ
 34 |     
 35 |     public init(stunClient: STUNClient?, configuration: P2PNetworkConfiguration) {
    |                                                         `- error: 'P2PNetworkConfiguration' is ambiguous for type lookup in this context
 36 |         self.stunClient = stunClient
 37 |         self.configuration = configuration

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: note: found this candidate
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- note: found this candidate
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:788:15: note: found this candidate
786 | 
787 | /// P2PÁΩëÁªúÈÖçÁΩÆ
788 | public struct P2PNetworkConfiguration {
    |               `- note: found this candidate
789 |     /// UDPÁ´ØÂè£
790 |     public let udpPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:100:15: note: found this candidate
 98 | 
 99 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
100 | public struct P2PNetworkConfiguration: Codable, Sendable {
    |               `- note: found this candidate
101 |     /// ÁõëÂê¨Á´ØÂè£
102 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:563:25: error: 'NATType' is ambiguous for type lookup in this context
561 |     public let supportedMethods: [TraversalMethod]
562 |     /// NATÁ±ªÂûã
563 |     public let natType: NATType
    |                         `- error: 'NATType' is ambiguous for type lookup in this context
564 |     /// ÂÖ¨ÁΩëÁ´ØÁÇπ
565 |     public let publicEndpoint: NWEndpoint?

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:347:13: note: found this candidate
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:571:26: error: 'NATType' is ambiguous for type lookup in this context
569 |     public init(level: TraversalCapabilityLevel,
570 |                 supportedMethods: [TraversalMethod],
571 |                 natType: NATType,
    |                          `- error: 'NATType' is ambiguous for type lookup in this context
572 |                 publicEndpoint: NWEndpoint?,
573 |                 estimatedSuccessRate: Double) {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:347:13: note: found this candidate
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:69:13: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
 67 |         
 68 |         networkQueue.async {
 69 |             self.initiateHolePunching(to: device, completion: completion)
    |             `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
 70 |         }
 71 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:69:43: warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 67 |         
 68 |         networkQueue.async {
 69 |             self.initiateHolePunching(to: device, completion: completion)
    |                                           `- warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 70 |         }
 71 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:258:15: note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
256 | 
257 | // MARK: - P2PËÆæÂ§á
258 | public struct P2PDevice: Codable, Identifiable, Hashable {
    |               `- note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
259 |     public let id: String
260 |     public let name: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:69:63: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
 67 |         
 68 |         networkQueue.async {
 69 |             self.initiateHolePunching(to: device, completion: completion)
    |                                                               |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                                                               `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 70 |         }
 71 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:13: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |             `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |         }
 83 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:50: warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |                                                  `- warning: capture of 'device' with non-Sendable type 'P2PDevice' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |         }
 83 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:258:15: note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
256 | 
257 | // MARK: - P2PËÆæÂ§á
258 | public struct P2PDevice: Codable, Identifiable, Hashable {
    |               `- note: consider making struct 'P2PDevice' conform to the 'Sendable' protocol
259 |     public let id: String
260 |     public let name: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:67: warning: capture of 'request' with non-Sendable type 'HolePunchingRequest' in a '@Sendable' closure [#SendableClosureCaptures]
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |                                                                   `- warning: capture of 'request' with non-Sendable type 'HolePunchingRequest' in a '@Sendable' closure [#SendableClosureCaptures]
 82 |         }
 83 |     }
    :
518 | 
519 | /// ÊâìÊ¥ûËØ∑Ê±Ç
520 | public struct HolePunchingRequest {
    |               `- note: consider making struct 'HolePunchingRequest' conform to the 'Sendable' protocol
521 |     /// ‰ºöËØùID
522 |     public let sessionId: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:81:88: warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
 79 |         
 80 |         networkQueue.async {
 81 |             self.handleHolePunchingRequest(from: device, request: request, completion: completion)
    |                                                                                        |- warning: capture of 'completion' with non-Sendable type '(Result<NWEndpoint, TraversalError>) -> Void' in a '@Sendable' closure [#SendableClosureCaptures]
    |                                                                                        `- note: a function type must be marked '@Sendable' to conform to 'Sendable'
 82 |         }
 83 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:90:13: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
 88 |         
 89 |         networkQueue.async {
 90 |             self.cleanupSession(deviceId)
    |             `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
 91 |         }
 92 |     }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:66:61: error: 'NATType' is ambiguous for type lookup in this context
 64 |     
 65 |     /// Ê£ÄÊµãNATÁ±ªÂûã
 66 |     public func detectNATType(completion: @escaping (Result<NATType, STUNError>) -> Void) {
    |                                                             `- error: 'NATType' is ambiguous for type lookup in this context
 67 |         print("üîç ÂºÄÂßãÊ£ÄÊµãNATÁ±ªÂûã")
 68 |         
    :
345 | 
346 | /// NATÁ±ªÂûã
347 | public enum NATType: String, CaseIterable {
    |             `- note: found this candidate
348 |     case fullCone = "ÂÆåÂÖ®Èî•ÂΩ¢NAT"
349 |     case restrictedCone = "ÈôêÂà∂Èî•ÂΩ¢NAT"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: note: found this candidate
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- note: found this candidate
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:146:48: error: cannot infer type of closure parameter 'result' without a type annotation
144 |         print("üîç ÂºÄÂßãNATÁ±ªÂûãÊ£ÄÊµã")
145 |         
146 |         stunClient.detectNATType { [weak self] result in
    |                                                `- error: cannot infer type of closure parameter 'result' without a type annotation
147 |             switch result {
148 |             case .success(let natType):

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:248:57: error: value of type 'P2PDevice' has no member 'endpoints'
246 |         print("üéØ ÊâßË°åÁõ¥Êé•UDPÊâìÊ¥û")
247 |         
248 |         guard let targetEndpoint = session.targetDevice.endpoints.first else {
    |                                                         `- error: value of type 'P2PDevice' has no member 'endpoints'
249 |             completion(.failure(.noValidEndpoint))
250 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:260:43: error: cannot infer type of closure parameter 'state' without a type annotation
258 |         session.connection = connection
259 |         
260 |         connection.stateUpdateHandler = { state in
    |                                           `- error: cannot infer type of closure parameter 'state' without a type annotation
261 |             switch state {
262 |             case .ready:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:427:30: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
425 |     private func cleanupSession(_ deviceId: String) {
426 |         networkQueue.async {
427 |             if let session = self.activeSessions[deviceId] {
    |                              `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
428 |                 session.connection?.cancel()
429 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/NATTraversalManager.swift:444:28: warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
  4 | 
  5 | /// NATÁ©øÈÄèÁÆ°ÁêÜÂô® - ÂÆûÁé∞UDPÊâìÊ¥ûÂíåËøûÊé•ÂçèË∞É
  6 | public class NATTraversalManager: ObservableObject {
    |              `- note: class 'NATTraversalManager' does not conform to the 'Sendable' protocol
  7 |     
  8 |     // MARK: - ÂèëÂ∏ÉÁöÑÂ±ûÊÄß
    :
442 |         networkQueue.async {
443 |             // ÂèñÊ∂àÊâÄÊúâÊ¥ªË∑É‰ºöËØù
444 |             for session in self.activeSessions.values {
    |                            `- warning: capture of 'self' with non-Sendable type 'NATTraversalManager' in a '@Sendable' closure [#SendableClosureCaptures]
445 |                 session.connection?.cancel()
446 |             }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:285:1: error: cannot declare conformance to 'NSObjectProtocol' in Swift; 'P2PDiscoveryService' should inherit 'NSObject' instead
283 | 
284 | // MARK: - NetServiceDelegate
285 | extension P2PDiscoveryService: NetServiceDelegate {
    | |- error: cannot declare conformance to 'NSObjectProtocol' in Swift; 'P2PDiscoveryService' should inherit 'NSObject' instead
    | `- note: add stubs for conformance
286 |     nonisolated public func netServiceDidPublish(_ sender: NetService) {
287 |         print("üì° ËÆæÂ§áÂπøÊí≠ÊàêÂäü")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:35:14: error: capture of 'self' in a closure that outlives deinit
 33 |     
 34 |     deinit {
 35 |         Task { @MainActor in
    |              `- error: capture of 'self' in a closure that outlives deinit
 36 |             stopAdvertising()
 37 |             stopDiscovery()

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:193:22: error: cannot find 'UIApplication' in scope
191 |     private func setupNotifications() {
192 |         NotificationCenter.default.addObserver(
193 |             forName: UIApplication.didEnterBackgroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
194 |             object: nil,
195 |             queue: .main

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:203:22: error: cannot find 'UIApplication' in scope
201 |         
202 |         NotificationCenter.default.addObserver(
203 |             forName: UIApplication.willEnterForegroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
204 |             object: nil,
205 |             queue: .main

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:326:15: error: initializer for conditional binding must have Optional type, not '[String : Data]'
324 |     nonisolated public func netServiceDidResolveAddress(_ sender: NetService) {
325 |         guard let txtData = sender.txtRecordData(),
326 |               let txtRecord = NetService.dictionary(fromTXTRecord: txtData),
    |               `- error: initializer for conditional binding must have Optional type, not '[String : Data]'
327 |               let addresses = sender.addresses else {
328 |             return

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PDiscoveryService.swift:388:31: warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
386 |             
387 |             if result == 0 {
388 |                 let address = String(cString: hostname)
    |                               `- warning: 'init(cString:)' is deprecated: Use String(decoding: array, as: UTF8.self) instead, after truncating the null termination. [#DeprecatedDeclaration]
389 |                 // ‰ºòÂÖàËøîÂõûIPv4Âú∞ÂùÄ
390 |                 if !address.contains(":") {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:52:23: error: static property 'defaultServers' is not concurrency-safe because non-'Sendable' type '[STUNServer]' may have shared mutable state [#MutableGlobalVariable]
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: consider making struct 'STUNServer' conform to the 'Sendable' protocol
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
 50 |     
 51 |     /// ÈªòËÆ§STUNÊúçÂä°Âô®ÂàóË°®
 52 |     public static let defaultServers = [
    |                       |- error: static property 'defaultServers' is not concurrency-safe because non-'Sendable' type '[STUNServer]' may have shared mutable state [#MutableGlobalVariable]
    |                       |- note: add '@MainActor' to make static property 'defaultServers' part of global actor 'MainActor'
    |                       `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 53 |         STUNServer(host: "stun.l.google.com"),
 54 |         STUNServer(host: "stun1.l.google.com"),

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: error: invalid redeclaration of 'STUNServer'
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- error: invalid redeclaration of 'STUNServer'
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:61:13: error: invalid redeclaration of 'TraversalDifficulty'
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'TraversalDifficulty'
 62 |     case easy = "easy"
 63 |     case medium = "medium"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:97:37: error: 'TraversalDifficulty' is ambiguous for type lookup in this context
 59 | 
 60 | // MARK: - Á©øÈÄèÈöæÂ∫¶
 61 | public enum TraversalDifficulty: String, Codable, CaseIterable {
    |             `- note: found this candidate
 62 |     case easy = "easy"
 63 |     case medium = "medium"
    :
 95 |     }
 96 |     
 97 |     public var traversalDifficulty: TraversalDifficulty {
    |                                     `- error: 'TraversalDifficulty' is ambiguous for type lookup in this context
 98 |         switch self {
 99 |         case .noNAT, .fullCone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/STUNClient.swift:375:13: note: found this candidate
373 | 
374 | /// Á©øÈÄèÈöæÂ∫¶
375 | public enum TraversalDifficulty: String, CaseIterable {
    |             `- note: found this candidate
376 |     case easy = "ÁÆÄÂçï"
377 |     case medium = "‰∏≠Á≠â"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:78:13: error: invalid redeclaration of 'NATType'
 76 | 
 77 | // MARK: - NATÁ±ªÂûã
 78 | public enum NATType: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'NATType'
 79 |     case fullCone = "full_cone"
 80 |     case restrictedCone = "restricted_cone"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:112:13: error: invalid redeclaration of 'P2PProtocol'
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- error: invalid redeclaration of 'P2PProtocol'
113 |     case udp = "udp"
114 |     case tcp = "tcp"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:141:30: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                              `- error: 'STUNServer' is ambiguous for type lookup in this context
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:26: error: 'P2PProtocol' is ambiguous for type lookup in this context
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"
    :
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                          `- error: 'P2PProtocol' is ambiguous for type lookup in this context
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: note: found this candidate
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:151:19: error: 'P2PProtocol' is ambiguous for type lookup in this context
110 | 
111 | // MARK: - P2PÂçèËÆÆÁ±ªÂûã
112 | public enum P2PProtocol: String, Codable, CaseIterable {
    |             `- note: found this candidate
113 |     case udp = "udp"
114 |     case tcp = "tcp"
    :
149 |     public init(
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
    |                   `- error: 'P2PProtocol' is ambiguous for type lookup in this context
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
153 |         connectionTimeout: TimeInterval = 30.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:839:13: note: found this candidate
837 | 
838 | /// P2PÂçèËÆÆÁ±ªÂûã
839 | public enum P2PProtocol: String, CaseIterable {
    |             `- note: found this candidate
840 |     case udp = "UDP"
841 |     case tcp = "TCP"

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:152:23: error: 'STUNServer' is ambiguous for type lookup in this context
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String
    :
150 |         listenPort: UInt16 = 8080,
151 |         protocol: P2PProtocol = .udp,
152 |         stunServers: [STUNServer] = STUNServer.defaultServers,
    |                       `- error: 'STUNServer' is ambiguous for type lookup in this context
153 |         connectionTimeout: TimeInterval = 30.0,
154 |         heartbeatInterval: TimeInterval = 10.0,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:944:15: note: found this candidate
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Decodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Decodable' because '[STUNServer]' does not conform to 'Decodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Decodable.init:2:1: note: protocol requires initializer 'init(from:)' with type 'Decodable'
1 | protocol Decodable {
2 | init(from decoder: any Decoder) throws}
  | `- note: protocol requires initializer 'init(from:)' with type 'Decodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkLayer.swift:806:31: error: 'STUNServer' is ambiguous for type lookup in this context
804 |     public init(udpPort: UInt16,
805 |                 tcpPort: UInt16,
806 |                 stunServers: [STUNServer],
    |                               `- error: 'STUNServer' is ambiguous for type lookup in this context
807 |                 connectionTimeout: TimeInterval,
808 |                 heartbeatInterval: TimeInterval,
    :
942 | 
943 | /// STUNÊúçÂä°Âô®ÈÖçÁΩÆ
944 | public struct STUNServer {
    |               `- note: found this candidate
945 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
946 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:40:15: note: found this candidate
 38 | 
 39 | // MARK: - STUNÊúçÂä°Âô®ÈÖçÁΩÆ
 40 | public struct STUNServer: Codable {
    |               `- note: found this candidate
 41 |     /// ÊúçÂä°Âô®‰∏ªÊú∫Âêç
 42 |     public let host: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: type 'P2PNetworkConfiguration' does not conform to protocol 'Encodable'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: type 'P2PNetworkConfiguration' does not conform to protocol 'Encodable'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16
    :
139 |     public let protocol: P2PProtocol
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]
    |                `- note: cannot automatically synthesize 'Encodable' because '[STUNServer]' does not conform to 'Encodable'
142 |     /// ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÁßíÔºâ
143 |     public let connectionTimeout: TimeInterval

Swift.Encodable.encode:2:6: note: protocol requires function 'encode(to:)' with type 'Encodable'
1 | protocol Encodable {
2 | func encode(to encoder: any Encoder) throws}
  |      `- note: protocol requires function 'encode(to:)' with type 'Encodable'
3 | 

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:135:15: error: invalid redeclaration of 'P2PNetworkConfiguration'
133 | 
134 | // MARK: - P2PÁΩëÁªúÈÖçÁΩÆ
135 | public struct P2PNetworkConfiguration: Codable {
    |               `- error: invalid redeclaration of 'P2PNetworkConfiguration'
136 |     /// ÁõëÂê¨Á´ØÂè£
137 |     public let listenPort: UInt16

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:530:30: error: 'FileTransferRequest' is ambiguous for type lookup in this context
528 |     case authResponse(Data)
529 |     case remoteDesktopFrame(Data)
530 |     case fileTransferRequest(FileTransferRequest)
    |                              `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
531 |     case fileTransferData(Data)
532 |     case systemCommand(SystemCommand)
    :
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: error: invalid redeclaration of 'FileTransferRequest'
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- error: invalid redeclaration of 'FileTransferRequest'
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:647:16: error: invalid redeclaration of 'displayName'
 13 |     
 14 |     /// ËÆæÂ§áÁ±ªÂûãÊòæÁ§∫ÂêçÁß∞
 15 |     public var displayName: String {
    |                `- note: 'displayName' previously declared here
 16 |         switch self {
 17 |         case .macOS: return "Mac"
    :
645 | extension P2PDeviceType {
646 |     /// ËÆæÂ§áÁ±ªÂûãÁöÑÊòæÁ§∫ÂêçÁß∞
647 |     public var displayName: String {
    |                `- error: invalid redeclaration of 'displayName'
648 |         switch self {
649 |         case .mac:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:708:16: error: invalid redeclaration of 'bytesReceived'
412 |     @Published public var status: P2PConnectionStatus = .connecting
413 |     @Published public var lastActivity: Date = Date()
414 |     @Published public var bytesReceived: UInt64 = 0
    |                           `- note: 'bytesReceived' previously declared here
415 |     @Published public var bytesSent: UInt64 = 0
416 |     
    :
706 |     
707 |     /// Êé•Êî∂Â≠óËäÇÊï∞
708 |     public var bytesReceived: Int64 {
    |                `- error: invalid redeclaration of 'bytesReceived'
709 |         // Ê®°ÊãüÊé•Êî∂Êï∞ÊçÆ
710 |         return 1024 * 1024 // 1MB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:714:16: error: invalid redeclaration of 'bytesSent'
413 |     @Published public var lastActivity: Date = Date()
414 |     @Published public var bytesReceived: UInt64 = 0
415 |     @Published public var bytesSent: UInt64 = 0
    |                           `- note: 'bytesSent' previously declared here
416 |     
417 |     private var isEncrypted = false
    :
712 |     
713 |     /// ÂèëÈÄÅÂ≠óËäÇÊï∞
714 |     public var bytesSent: Int64 {
    |                `- error: invalid redeclaration of 'bytesSent'
715 |         // Ê®°ÊãüÂèëÈÄÅÊï∞ÊçÆ
716 |         return 512 * 1024 // 512KB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:158:14: error: value of type 'P2PNetworkConfiguration' has no member 'protocol'
156 |     ) {
157 |         self.listenPort = listenPort
158 |         self.protocol = `protocol`
    |              `- error: value of type 'P2PNetworkConfiguration' has no member 'protocol'
159 |         self.stunServers = stunServers
160 |         self.connectionTimeout = connectionTimeout

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:649:15: error: type 'P2PDeviceType' has no member 'mac'
647 |     public var displayName: String {
648 |         switch self {
649 |         case .mac:
    |               `- error: type 'P2PDeviceType' has no member 'mac'
650 |             return "Mac"
651 |         case .iPhone:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:651:15: error: type 'P2PDeviceType' has no member 'iPhone'
649 |         case .mac:
650 |             return "Mac"
651 |         case .iPhone:
    |               `- error: type 'P2PDeviceType' has no member 'iPhone'
652 |             return "iPhone"
653 |         case .iPad:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:653:15: error: type 'P2PDeviceType' has no member 'iPad'
651 |         case .iPhone:
652 |             return "iPhone"
653 |         case .iPad:
    |               `- error: type 'P2PDeviceType' has no member 'iPad'
654 |             return "iPad"
655 |         case .windows:

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:659:15: error: type 'P2PDeviceType' has no member 'unknown'
657 |         case .android:
658 |             return "Android"
659 |         case .unknown:
    |               `- error: type 'P2PDeviceType' has no member 'unknown'
660 |             return "Êú™Áü•ËÆæÂ§á"
661 |         }

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:681:18: error: extra arguments at positions #1, #3, #6 in call
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name
    :
679 |     /// ÂàõÂª∫Ê®°ÊãüËÆæÂ§áÁî®‰∫éÈ¢ÑËßà
680 |     public static var mockDevice: P2PDevice {
681 |         P2PDevice(
    |                  `- error: extra arguments at positions #1, #3, #6 in call
682 |             deviceId: "mock-device-id",
683 |             name: "ÊµãËØïËÆæÂ§á",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:681:18: error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
283 |     }
284 |     
285 |     public init(id: String, name: String, type: P2PDeviceType, address: String, port: UInt16, osVersion: String, capabilities: [String], publicKey: Data, lastSeen: Date) {
    |            `- note: 'init(id:name:type:address:port:osVersion:capabilities:publicKey:lastSeen:)' declared here
286 |         self.id = id
287 |         self.name = name
    :
679 |     /// ÂàõÂª∫Ê®°ÊãüËÆæÂ§áÁî®‰∫éÈ¢ÑËßà
680 |     public static var mockDevice: P2PDevice {
681 |         P2PDevice(
    |                  `- error: missing arguments for parameters 'id', 'type', 'capabilities', 'publicKey' in call
682 |             deviceId: "mock-device-id",
683 |             name: "ÊµãËØïËÆæÂ§á",

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:684:26: error: cannot infer contextual base in reference to member 'mac'
682 |             deviceId: "mock-device-id",
683 |             name: "ÊµãËØïËÆæÂ§á",
684 |             deviceType: .mac,
    |                          `- error: cannot infer contextual base in reference to member 'mac'
685 |             ipAddress: "192.168.1.100",
686 |             port: 8080,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:721:36: error: extra arguments at positions #1, #5 in call
719 |     /// ËøûÊé•Ë¥®Èáè
720 |     public var quality: P2PConnectionQuality {
721 |         return P2PConnectionQuality(
    |                                    `- error: extra arguments at positions #1, #5 in call
722 |             signalStrength: 0.8,
723 |             latency: latency,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:724:33: error: missing argument for parameter 'stabilityScore' in call
722 |             signalStrength: 0.8,
723 |             latency: latency,
724 |             bandwidth: bandwidth,
    |                                 `- error: missing argument for parameter 'stabilityScore' in call
725 |             packetLoss: 0.01,
726 |             level: .good

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PNetworkTypes.swift:215:12: note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
213 |     public let timestamp: Date
214 |     
215 |     public init(
    |            `- note: 'init(latency:packetLoss:bandwidth:stabilityScore:timestamp:)' declared here
216 |         latency: TimeInterval,
217 |         packetLoss: Double,

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:724:24: error: cannot convert value of type 'Double' to expected argument type 'UInt64'
722 |             signalStrength: 0.8,
723 |             latency: latency,
724 |             bandwidth: bandwidth,
    |                        `- error: cannot convert value of type 'Double' to expected argument type 'UInt64'
725 |             packetLoss: 0.01,
726 |             level: .good

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:726:21: error: cannot infer contextual base in reference to member 'good'
724 |             bandwidth: bandwidth,
725 |             packetLoss: 0.01,
726 |             level: .good
    |                     `- error: cannot infer contextual base in reference to member 'good'
727 |         )
728 |     }

[#DeprecatedDeclaration]: <https://docs.swift.org/compiler/documentation/diagnostics/deprecated-declaration>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[#SendableClosureCaptures]: <https://docs.swift.org/compiler/documentation/diagnostics/sendable-closure-captures>
[151/160] Compiling SkyBridgeCore AuthenticationService.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:29:27: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'FileTransferEngine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 18 |     // MARK: - ÈÖçÁΩÆ
 19 |     
 20 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 21 |         public let maxConcurrentTransfers: Int
 22 |         public let chunkSize: Int
    :
 27 |         public let bufferSize: Int
 28 |         
 29 |         public static let `default` = Configuration(
    |                           |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'FileTransferEngine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 30 |             maxConcurrentTransfers: 5,
 31 |             chunkSize: 1024 * 1024, // 1MB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:108:18: error: 'FileTransferRequest' is ambiguous for type lookup in this context
106 |     /// Êé•Êî∂Êñá‰ª∂
107 |     public func receiveFile(
108 |         request: FileTransferRequest,
    |                  `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
109 |         saveToDirectory: URL
110 |     ) async throws -> String {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:202:76: error: 'FileTransferRequest' is ambiguous for type lookup in this context
200 |     }
201 |     
202 |     private func startFileReceive(_ session: FileTransferSession, request: FileTransferRequest) async throws {
    |                                                                            `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
203 |         // Ëé∑ÂèñËøûÊé•
204 |         guard let connection = networkManager.activeConnections[session.remoteDeviceId] else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:406:49: error: 'FileTransferRequest' is ambiguous for type lookup in this context
404 |     // MARK: - ÁΩëÁªúÈÄö‰ø°
405 |     
406 |     private func sendTransferRequest(_ request: FileTransferRequest, to connection: P2PConnection) async throws {
    |                                                 `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
407 |         // TODO: ÂÆûÁé∞ÁΩëÁªúÂèëÈÄÅÈÄªËæë
408 |         print("ÂèëÈÄÅ‰º†ËæìËØ∑Ê±Ç: \(request.fileName)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:94:28: error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
 92 |             localURL: fileURL,
 93 |             remoteDeviceId: deviceId,
 94 |             configuration: configuration
    |                            `- error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
 95 |         )
 96 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:131:28: error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
129 |             localURL: destinationURL,
130 |             remoteDeviceId: request.senderId,
131 |             configuration: configuration
    |                            `- error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
132 |         )
133 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:378:25: error: value of type 'Data' has no member 'compressed'
376 |     
377 |     private func compressData(_ data: Data) throws -> Data {
378 |         return try data.compressed(using: .lzfse)
    |                         `- error: value of type 'Data' has no member 'compressed'
379 |     }
380 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:378:44: error: cannot infer contextual base in reference to member 'lzfse'
376 |     
377 |     private func compressData(_ data: Data) throws -> Data {
378 |         return try data.compressed(using: .lzfse)
    |                                            `- error: cannot infer contextual base in reference to member 'lzfse'
379 |     }
380 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:382:25: error: value of type 'Data' has no member 'decompressed'
380 |     
381 |     private func decompressData(_ data: Data) throws -> Data {
382 |         return try data.decompressed(using: .lzfse)
    |                         `- error: value of type 'Data' has no member 'decompressed'
383 |     }
384 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:382:46: error: cannot infer contextual base in reference to member 'lzfse'
380 |     
381 |     private func decompressData(_ data: Data) throws -> Data {
382 |         return try data.decompressed(using: .lzfse)
    |                                              `- error: cannot infer contextual base in reference to member 'lzfse'
383 |     }
384 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:387:45: error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
385 |     private func encryptData(_ data: Data, for connection: P2PConnection) async throws -> Data {
386 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åÂä†ÂØÜ
387 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                             `- error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
388 |         let sealedBox = try AES.GCM.seal(data, using: key)
389 |         return sealedBox.combined!

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:387:78: error: value of type 'P2PConnection' has no member 'remoteDevice'
385 |     private func encryptData(_ data: Data, for connection: P2PConnection) async throws -> Data {
386 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åÂä†ÂØÜ
387 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                                                              `- error: value of type 'P2PConnection' has no member 'remoteDevice'
388 |         let sealedBox = try AES.GCM.seal(data, using: key)
389 |         return sealedBox.combined!

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:394:45: error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
392 |     private func decryptData(_ data: Data, from connection: P2PConnection) async throws -> Data {
393 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åËß£ÂØÜ
394 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                             `- error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
395 |         let sealedBox = try AES.GCM.SealedBox(combined: data)
396 |         return try AES.GCM.open(sealedBox, using: key)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:394:78: error: value of type 'P2PConnection' has no member 'remoteDevice'
392 |     private func decryptData(_ data: Data, from connection: P2PConnection) async throws -> Data {
393 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åËß£ÂØÜ
394 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                                                              `- error: value of type 'P2PConnection' has no member 'remoteDevice'
395 |         let sealedBox = try AES.GCM.SealedBox(combined: data)
396 |         return try AES.GCM.open(sealedBox, using: key)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:478:19: warning: call to main actor-isolated instance method 'calculateTransferSpeed()' in a synchronous nonisolated context [#ActorIsolatedCall]
476 |     private func setupSpeedMonitoring() {
477 |         speedCalculationTimer = Timer.scheduledTimer(withTimeInterval: 1.0, repeats: true) { [weak self] _ in
478 |             self?.calculateTransferSpeed()
    |                   `- warning: call to main actor-isolated instance method 'calculateTransferSpeed()' in a synchronous nonisolated context [#ActorIsolatedCall]
479 |         }
480 |     }
481 |     
482 |     private func calculateTransferSpeed() {
    |                  `- note: calls to instance method 'calculateTransferSpeed()' from outside of its actor context are implicitly asynchronous
483 |         let currentBytesTransferred = activeTransfers.values.reduce(0) { total, session in
484 |             total + Int64(Double(session.fileSize) * session.progress)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:525:9: error: call to main actor-isolated instance method 'cancelAllTransfers()' in a synchronous nonisolated context [#ActorIsolatedCall]
163 |     
164 |     /// ÂèñÊ∂àÊâÄÊúâ‰º†Ëæì
165 |     public func cancelAllTransfers() {
    |                 `- note: calls to instance method 'cancelAllTransfers()' from outside of its actor context are implicitly asynchronous
166 |         for session in activeTransfers.values {
167 |             session.cancel()
    :
523 |     deinit {
524 |         speedCalculationTimer?.invalidate()
525 |         cancelAllTransfers()
    |         `- error: call to main actor-isolated instance method 'cancelAllTransfers()' in a synchronous nonisolated context [#ActorIsolatedCall]
526 |     }
527 | }

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[152/160] Compiling SkyBridgeCore BackgroundTaskCoordinator.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:29:27: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'FileTransferEngine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 18 |     // MARK: - ÈÖçÁΩÆ
 19 |     
 20 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 21 |         public let maxConcurrentTransfers: Int
 22 |         public let chunkSize: Int
    :
 27 |         public let bufferSize: Int
 28 |         
 29 |         public static let `default` = Configuration(
    |                           |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'FileTransferEngine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 30 |             maxConcurrentTransfers: 5,
 31 |             chunkSize: 1024 * 1024, // 1MB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:108:18: error: 'FileTransferRequest' is ambiguous for type lookup in this context
106 |     /// Êé•Êî∂Êñá‰ª∂
107 |     public func receiveFile(
108 |         request: FileTransferRequest,
    |                  `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
109 |         saveToDirectory: URL
110 |     ) async throws -> String {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:202:76: error: 'FileTransferRequest' is ambiguous for type lookup in this context
200 |     }
201 |     
202 |     private func startFileReceive(_ session: FileTransferSession, request: FileTransferRequest) async throws {
    |                                                                            `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
203 |         // Ëé∑ÂèñËøûÊé•
204 |         guard let connection = networkManager.activeConnections[session.remoteDeviceId] else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:406:49: error: 'FileTransferRequest' is ambiguous for type lookup in this context
404 |     // MARK: - ÁΩëÁªúÈÄö‰ø°
405 |     
406 |     private func sendTransferRequest(_ request: FileTransferRequest, to connection: P2PConnection) async throws {
    |                                                 `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
407 |         // TODO: ÂÆûÁé∞ÁΩëÁªúÂèëÈÄÅÈÄªËæë
408 |         print("ÂèëÈÄÅ‰º†ËæìËØ∑Ê±Ç: \(request.fileName)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:94:28: error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
 92 |             localURL: fileURL,
 93 |             remoteDeviceId: deviceId,
 94 |             configuration: configuration
    |                            `- error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
 95 |         )
 96 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:131:28: error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
129 |             localURL: destinationURL,
130 |             remoteDeviceId: request.senderId,
131 |             configuration: configuration
    |                            `- error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
132 |         )
133 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:378:25: error: value of type 'Data' has no member 'compressed'
376 |     
377 |     private func compressData(_ data: Data) throws -> Data {
378 |         return try data.compressed(using: .lzfse)
    |                         `- error: value of type 'Data' has no member 'compressed'
379 |     }
380 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:378:44: error: cannot infer contextual base in reference to member 'lzfse'
376 |     
377 |     private func compressData(_ data: Data) throws -> Data {
378 |         return try data.compressed(using: .lzfse)
    |                                            `- error: cannot infer contextual base in reference to member 'lzfse'
379 |     }
380 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:382:25: error: value of type 'Data' has no member 'decompressed'
380 |     
381 |     private func decompressData(_ data: Data) throws -> Data {
382 |         return try data.decompressed(using: .lzfse)
    |                         `- error: value of type 'Data' has no member 'decompressed'
383 |     }
384 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:382:46: error: cannot infer contextual base in reference to member 'lzfse'
380 |     
381 |     private func decompressData(_ data: Data) throws -> Data {
382 |         return try data.decompressed(using: .lzfse)
    |                                              `- error: cannot infer contextual base in reference to member 'lzfse'
383 |     }
384 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:387:45: error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
385 |     private func encryptData(_ data: Data, for connection: P2PConnection) async throws -> Data {
386 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åÂä†ÂØÜ
387 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                             `- error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
388 |         let sealedBox = try AES.GCM.seal(data, using: key)
389 |         return sealedBox.combined!

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:387:78: error: value of type 'P2PConnection' has no member 'remoteDevice'
385 |     private func encryptData(_ data: Data, for connection: P2PConnection) async throws -> Data {
386 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åÂä†ÂØÜ
387 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                                                              `- error: value of type 'P2PConnection' has no member 'remoteDevice'
388 |         let sealedBox = try AES.GCM.seal(data, using: key)
389 |         return sealedBox.combined!

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:394:45: error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
392 |     private func decryptData(_ data: Data, from connection: P2PConnection) async throws -> Data {
393 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åËß£ÂØÜ
394 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                             `- error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
395 |         let sealedBox = try AES.GCM.SealedBox(combined: data)
396 |         return try AES.GCM.open(sealedBox, using: key)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:394:78: error: value of type 'P2PConnection' has no member 'remoteDevice'
392 |     private func decryptData(_ data: Data, from connection: P2PConnection) async throws -> Data {
393 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åËß£ÂØÜ
394 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                                                              `- error: value of type 'P2PConnection' has no member 'remoteDevice'
395 |         let sealedBox = try AES.GCM.SealedBox(combined: data)
396 |         return try AES.GCM.open(sealedBox, using: key)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:478:19: warning: call to main actor-isolated instance method 'calculateTransferSpeed()' in a synchronous nonisolated context [#ActorIsolatedCall]
476 |     private func setupSpeedMonitoring() {
477 |         speedCalculationTimer = Timer.scheduledTimer(withTimeInterval: 1.0, repeats: true) { [weak self] _ in
478 |             self?.calculateTransferSpeed()
    |                   `- warning: call to main actor-isolated instance method 'calculateTransferSpeed()' in a synchronous nonisolated context [#ActorIsolatedCall]
479 |         }
480 |     }
481 |     
482 |     private func calculateTransferSpeed() {
    |                  `- note: calls to instance method 'calculateTransferSpeed()' from outside of its actor context are implicitly asynchronous
483 |         let currentBytesTransferred = activeTransfers.values.reduce(0) { total, session in
484 |             total + Int64(Double(session.fileSize) * session.progress)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:525:9: error: call to main actor-isolated instance method 'cancelAllTransfers()' in a synchronous nonisolated context [#ActorIsolatedCall]
163 |     
164 |     /// ÂèñÊ∂àÊâÄÊúâ‰º†Ëæì
165 |     public func cancelAllTransfers() {
    |                 `- note: calls to instance method 'cancelAllTransfers()' from outside of its actor context are implicitly asynchronous
166 |         for session in activeTransfers.values {
167 |             session.cancel()
    :
523 |     deinit {
524 |         speedCalculationTimer?.invalidate()
525 |         cancelAllTransfers()
    |         `- error: call to main actor-isolated instance method 'cancelAllTransfers()' in a synchronous nonisolated context [#ActorIsolatedCall]
526 |     }
527 | }

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[153/160] Compiling SkyBridgeCore DeviceDiscoveryService.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:29:27: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'FileTransferEngine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 18 |     // MARK: - ÈÖçÁΩÆ
 19 |     
 20 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 21 |         public let maxConcurrentTransfers: Int
 22 |         public let chunkSize: Int
    :
 27 |         public let bufferSize: Int
 28 |         
 29 |         public static let `default` = Configuration(
    |                           |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'FileTransferEngine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 30 |             maxConcurrentTransfers: 5,
 31 |             chunkSize: 1024 * 1024, // 1MB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:108:18: error: 'FileTransferRequest' is ambiguous for type lookup in this context
106 |     /// Êé•Êî∂Êñá‰ª∂
107 |     public func receiveFile(
108 |         request: FileTransferRequest,
    |                  `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
109 |         saveToDirectory: URL
110 |     ) async throws -> String {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:202:76: error: 'FileTransferRequest' is ambiguous for type lookup in this context
200 |     }
201 |     
202 |     private func startFileReceive(_ session: FileTransferSession, request: FileTransferRequest) async throws {
    |                                                                            `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
203 |         // Ëé∑ÂèñËøûÊé•
204 |         guard let connection = networkManager.activeConnections[session.remoteDeviceId] else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:406:49: error: 'FileTransferRequest' is ambiguous for type lookup in this context
404 |     // MARK: - ÁΩëÁªúÈÄö‰ø°
405 |     
406 |     private func sendTransferRequest(_ request: FileTransferRequest, to connection: P2PConnection) async throws {
    |                                                 `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
407 |         // TODO: ÂÆûÁé∞ÁΩëÁªúÂèëÈÄÅÈÄªËæë
408 |         print("ÂèëÈÄÅ‰º†ËæìËØ∑Ê±Ç: \(request.fileName)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:94:28: error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
 92 |             localURL: fileURL,
 93 |             remoteDeviceId: deviceId,
 94 |             configuration: configuration
    |                            `- error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
 95 |         )
 96 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:131:28: error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
129 |             localURL: destinationURL,
130 |             remoteDeviceId: request.senderId,
131 |             configuration: configuration
    |                            `- error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
132 |         )
133 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:378:25: error: value of type 'Data' has no member 'compressed'
376 |     
377 |     private func compressData(_ data: Data) throws -> Data {
378 |         return try data.compressed(using: .lzfse)
    |                         `- error: value of type 'Data' has no member 'compressed'
379 |     }
380 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:378:44: error: cannot infer contextual base in reference to member 'lzfse'
376 |     
377 |     private func compressData(_ data: Data) throws -> Data {
378 |         return try data.compressed(using: .lzfse)
    |                                            `- error: cannot infer contextual base in reference to member 'lzfse'
379 |     }
380 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:382:25: error: value of type 'Data' has no member 'decompressed'
380 |     
381 |     private func decompressData(_ data: Data) throws -> Data {
382 |         return try data.decompressed(using: .lzfse)
    |                         `- error: value of type 'Data' has no member 'decompressed'
383 |     }
384 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:382:46: error: cannot infer contextual base in reference to member 'lzfse'
380 |     
381 |     private func decompressData(_ data: Data) throws -> Data {
382 |         return try data.decompressed(using: .lzfse)
    |                                              `- error: cannot infer contextual base in reference to member 'lzfse'
383 |     }
384 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:387:45: error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
385 |     private func encryptData(_ data: Data, for connection: P2PConnection) async throws -> Data {
386 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åÂä†ÂØÜ
387 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                             `- error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
388 |         let sealedBox = try AES.GCM.seal(data, using: key)
389 |         return sealedBox.combined!

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:387:78: error: value of type 'P2PConnection' has no member 'remoteDevice'
385 |     private func encryptData(_ data: Data, for connection: P2PConnection) async throws -> Data {
386 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åÂä†ÂØÜ
387 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                                                              `- error: value of type 'P2PConnection' has no member 'remoteDevice'
388 |         let sealedBox = try AES.GCM.seal(data, using: key)
389 |         return sealedBox.combined!

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:394:45: error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
392 |     private func decryptData(_ data: Data, from connection: P2PConnection) async throws -> Data {
393 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åËß£ÂØÜ
394 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                             `- error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
395 |         let sealedBox = try AES.GCM.SealedBox(combined: data)
396 |         return try AES.GCM.open(sealedBox, using: key)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:394:78: error: value of type 'P2PConnection' has no member 'remoteDevice'
392 |     private func decryptData(_ data: Data, from connection: P2PConnection) async throws -> Data {
393 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åËß£ÂØÜ
394 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                                                              `- error: value of type 'P2PConnection' has no member 'remoteDevice'
395 |         let sealedBox = try AES.GCM.SealedBox(combined: data)
396 |         return try AES.GCM.open(sealedBox, using: key)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:478:19: warning: call to main actor-isolated instance method 'calculateTransferSpeed()' in a synchronous nonisolated context [#ActorIsolatedCall]
476 |     private func setupSpeedMonitoring() {
477 |         speedCalculationTimer = Timer.scheduledTimer(withTimeInterval: 1.0, repeats: true) { [weak self] _ in
478 |             self?.calculateTransferSpeed()
    |                   `- warning: call to main actor-isolated instance method 'calculateTransferSpeed()' in a synchronous nonisolated context [#ActorIsolatedCall]
479 |         }
480 |     }
481 |     
482 |     private func calculateTransferSpeed() {
    |                  `- note: calls to instance method 'calculateTransferSpeed()' from outside of its actor context are implicitly asynchronous
483 |         let currentBytesTransferred = activeTransfers.values.reduce(0) { total, session in
484 |             total + Int64(Double(session.fileSize) * session.progress)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:525:9: error: call to main actor-isolated instance method 'cancelAllTransfers()' in a synchronous nonisolated context [#ActorIsolatedCall]
163 |     
164 |     /// ÂèñÊ∂àÊâÄÊúâ‰º†Ëæì
165 |     public func cancelAllTransfers() {
    |                 `- note: calls to instance method 'cancelAllTransfers()' from outside of its actor context are implicitly asynchronous
166 |         for session in activeTransfers.values {
167 |             session.cancel()
    :
523 |     deinit {
524 |         speedCalculationTimer?.invalidate()
525 |         cancelAllTransfers()
    |         `- error: call to main actor-isolated instance method 'cancelAllTransfers()' in a synchronous nonisolated context [#ActorIsolatedCall]
526 |     }
527 | }

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
[154/160] Compiling SkyBridgeCore FileTransferEngine.swift
/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:29:27: error: static property 'default' is not concurrency-safe because non-'Sendable' type 'FileTransferEngine.Configuration' may have shared mutable state [#MutableGlobalVariable]
 18 |     // MARK: - ÈÖçÁΩÆ
 19 |     
 20 |     public struct Configuration {
    |                   `- note: consider making struct 'Configuration' conform to the 'Sendable' protocol
 21 |         public let maxConcurrentTransfers: Int
 22 |         public let chunkSize: Int
    :
 27 |         public let bufferSize: Int
 28 |         
 29 |         public static let `default` = Configuration(
    |                           |- error: static property 'default' is not concurrency-safe because non-'Sendable' type 'FileTransferEngine.Configuration' may have shared mutable state [#MutableGlobalVariable]
    |                           |- note: add '@MainActor' to make static property 'default' part of global actor 'MainActor'
    |                           `- note: disable concurrency-safety checks if accesses are protected by an external synchronization mechanism
 30 |             maxConcurrentTransfers: 5,
 31 |             chunkSize: 1024 * 1024, // 1MB

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:108:18: error: 'FileTransferRequest' is ambiguous for type lookup in this context
106 |     /// Êé•Êî∂Êñá‰ª∂
107 |     public func receiveFile(
108 |         request: FileTransferRequest,
    |                  `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
109 |         saveToDirectory: URL
110 |     ) async throws -> String {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:202:76: error: 'FileTransferRequest' is ambiguous for type lookup in this context
200 |     }
201 |     
202 |     private func startFileReceive(_ session: FileTransferSession, request: FileTransferRequest) async throws {
    |                                                                            `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
203 |         // Ëé∑ÂèñËøûÊé•
204 |         guard let connection = networkManager.activeConnections[session.remoteDeviceId] else {

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:406:49: error: 'FileTransferRequest' is ambiguous for type lookup in this context
404 |     // MARK: - ÁΩëÁªúÈÄö‰ø°
405 |     
406 |     private func sendTransferRequest(_ request: FileTransferRequest, to connection: P2PConnection) async throws {
    |                                                 `- error: 'FileTransferRequest' is ambiguous for type lookup in this context
407 |         // TODO: ÂÆûÁé∞ÁΩëÁªúÂèëÈÄÅÈÄªËæë
408 |         print("ÂèëÈÄÅ‰º†ËæìËØ∑Ê±Ç: \(request.fileName)")

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferModels.swift:269:15: note: found this candidate
267 | 
268 | /// Êñá‰ª∂‰º†ËæìËØ∑Ê±ÇÁªìÊûÑ
269 | public struct FileTransferRequest: Codable, Identifiable {
    |               `- note: found this candidate
270 |     public let id: String
271 |     public let fileName: String

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:601:15: note: found this candidate
599 | 
600 | // MARK: - Êñá‰ª∂‰º†ËæìËØ∑Ê±Ç
601 | public struct FileTransferRequest: Codable {
    |               `- note: found this candidate
602 |     public let fileName: String
603 |     public let fileSize: UInt64

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:94:28: error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
 92 |             localURL: fileURL,
 93 |             remoteDeviceId: deviceId,
 94 |             configuration: configuration
    |                            `- error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
 95 |         )
 96 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:131:28: error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
129 |             localURL: destinationURL,
130 |             remoteDeviceId: request.senderId,
131 |             configuration: configuration
    |                            `- error: cannot convert value of type 'FileTransferEngine.Configuration' to expected argument type 'TransferConfiguration'
132 |         )
133 |         

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/P2P/P2PModels.swift:139:16: error: keyword 'protocol' cannot be used as an identifier here
137 |     public let listenPort: UInt16
138 |     /// ‰ΩøÁî®ÁöÑÂçèËÆÆ
139 |     public let protocol: P2PProtocol
    |                |- error: keyword 'protocol' cannot be used as an identifier here
    |                `- note: if this name is unavoidable, use backticks to escape it
140 |     /// STUNÊúçÂä°Âô®ÂàóË°®
141 |     public let stunServers: [STUNServer]

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:378:25: error: value of type 'Data' has no member 'compressed'
376 |     
377 |     private func compressData(_ data: Data) throws -> Data {
378 |         return try data.compressed(using: .lzfse)
    |                         `- error: value of type 'Data' has no member 'compressed'
379 |     }
380 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:378:44: error: cannot infer contextual base in reference to member 'lzfse'
376 |     
377 |     private func compressData(_ data: Data) throws -> Data {
378 |         return try data.compressed(using: .lzfse)
    |                                            `- error: cannot infer contextual base in reference to member 'lzfse'
379 |     }
380 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:382:25: error: value of type 'Data' has no member 'decompressed'
380 |     
381 |     private func decompressData(_ data: Data) throws -> Data {
382 |         return try data.decompressed(using: .lzfse)
    |                         `- error: value of type 'Data' has no member 'decompressed'
383 |     }
384 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:382:46: error: cannot infer contextual base in reference to member 'lzfse'
380 |     
381 |     private func decompressData(_ data: Data) throws -> Data {
382 |         return try data.decompressed(using: .lzfse)
    |                                              `- error: cannot infer contextual base in reference to member 'lzfse'
383 |     }
384 |     

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:387:45: error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
385 |     private func encryptData(_ data: Data, for connection: P2PConnection) async throws -> Data {
386 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åÂä†ÂØÜ
387 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                             `- error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
388 |         let sealedBox = try AES.GCM.seal(data, using: key)
389 |         return sealedBox.combined!

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:387:78: error: value of type 'P2PConnection' has no member 'remoteDevice'
385 |     private func encryptData(_ data: Data, for connection: P2PConnection) async throws -> Data {
386 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åÂä†ÂØÜ
387 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                                                              `- error: value of type 'P2PConnection' has no member 'remoteDevice'
388 |         let sealedBox = try AES.GCM.seal(data, using: key)
389 |         return sealedBox.combined!

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:394:45: error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
392 |     private func decryptData(_ data: Data, from connection: P2PConnection) async throws -> Data {
393 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åËß£ÂØÜ
394 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                             `- error: value of type 'P2PSecurityManager' has no member 'getEncryptionKey'
395 |         let sealedBox = try AES.GCM.SealedBox(combined: data)
396 |         return try AES.GCM.open(sealedBox, using: key)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:394:78: error: value of type 'P2PConnection' has no member 'remoteDevice'
392 |     private func decryptData(_ data: Data, from connection: P2PConnection) async throws -> Data {
393 |         // ‰ΩøÁî®ËøûÊé•ÁöÑÂä†ÂØÜÂØÜÈí•ËøõË°åËß£ÂØÜ
394 |         let key = try await securityManager.getEncryptionKey(for: connection.remoteDevice.deviceId)
    |                                                                              `- error: value of type 'P2PConnection' has no member 'remoteDevice'
395 |         let sealedBox = try AES.GCM.SealedBox(combined: data)
396 |         return try AES.GCM.open(sealedBox, using: key)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:478:19: warning: call to main actor-isolated instance method 'calculateTransferSpeed()' in a synchronous nonisolated context [#ActorIsolatedCall]
476 |     private func setupSpeedMonitoring() {
477 |         speedCalculationTimer = Timer.scheduledTimer(withTimeInterval: 1.0, repeats: true) { [weak self] _ in
478 |             self?.calculateTransferSpeed()
    |                   `- warning: call to main actor-isolated instance method 'calculateTransferSpeed()' in a synchronous nonisolated context [#ActorIsolatedCall]
479 |         }
480 |     }
481 |     
482 |     private func calculateTransferSpeed() {
    |                  `- note: calls to instance method 'calculateTransferSpeed()' from outside of its actor context are implicitly asynchronous
483 |         let currentBytesTransferred = activeTransfers.values.reduce(0) { total, session in
484 |             total + Int64(Double(session.fileSize) * session.progress)

/Users/macbookpro/Skybridge-Compass-2/macos/SkyBridgeCompassApp/Sources/SkyBridgeCore/FileTransfer/FileTransferEngine.swift:525:9: error: call to main actor-isolated instance method 'cancelAllTransfers()' in a synchronous nonisolated context [#ActorIsolatedCall]
163 |     
164 |     /// ÂèñÊ∂àÊâÄÊúâ‰º†Ëæì
165 |     public func cancelAllTransfers() {
    |                 `- note: calls to instance method 'cancelAllTransfers()' from outside of its actor context are implicitly asynchronous
166 |         for session in activeTransfers.values {
167 |             session.cancel()
    :
523 |     deinit {
524 |         speedCalculationTimer?.invalidate()
525 |         cancelAllTransfers()
    |         `- error: call to main actor-isolated instance method 'cancelAllTransfers()' in a synchronous nonisolated context [#ActorIsolatedCall]
526 |     }
527 | }

[#ActorIsolatedCall]: <https://docs.swift.org/compiler/documentation/diagnostics/actor-isolated-call>
[#MutableGlobalVariable]: <https://docs.swift.org/compiler/documentation/diagnostics/mutable-global-variable>
